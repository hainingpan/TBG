(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[   1466807,      29720]
NotebookOptionsPosition[   1451412,      29456]
NotebookOutlinePosition[   1451755,      29471]
CellTagsIndexPosition[   1451712,      29468]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"MatrixExp", "[", 
    RowBox[{
     RowBox[{"-", "I"}], "*", 
     RowBox[{"\[Theta]", "/", "4"}], "*", "l", "*", 
     RowBox[{"PauliMatrix", "[", "3", "]"}]}], "]"}], ".", 
   RowBox[{"PauliMatrix", "[", "1", "]"}], ".", 
   RowBox[{"MatrixExp", "[", 
    RowBox[{"I", "*", 
     RowBox[{"\[Theta]", "/", "4"}], "*", "l", "*", 
     RowBox[{"PauliMatrix", "[", "3", "]"}]}], "]"}]}], "/.", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"\[Theta]", "\[Rule]", "0.1"}], ",", 
    RowBox[{"l", "\[Rule]", "1"}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.7788516857288713`*^9, 3.7788517379670486`*^9}, {
  3.7788518415149517`*^9, 3.7788518468249187`*^9}},
 CellLabel->"In[10]:=",ExpressionUUID->"a9529fa2-104b-4ac1-a797-8bfea1a68d22"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0", ",", 
     RowBox[{"0.9987502603949663`", "\[VeryThinSpace]", "-", 
      RowBox[{"0.04997916927067833`", " ", "\[ImaginaryI]"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"0.9987502603949663`", "\[VeryThinSpace]", "+", 
      RowBox[{"0.04997916927067833`", " ", "\[ImaginaryI]"}]}], ",", "0"}], 
    "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.7788517340523014`*^9, 3.778851738301858*^9}, {
  3.778851844526232*^9, 3.7788518476164684`*^9}},
 CellLabel->"Out[10]=",ExpressionUUID->"58d5d69d-e1ab-46a0-b597-71cf73c45548"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"MatrixExp", "[", 
   RowBox[{
    RowBox[{"-", "I"}], "*", 
    RowBox[{"\[Theta]", "/", "4"}], "*", "l", "*", 
    RowBox[{"PauliMatrix", "[", "3", "]"}]}], "]"}], ".", 
  RowBox[{"MatrixExp", "[", 
   RowBox[{
    RowBox[{"-", "I"}], "*", 
    RowBox[{"\[Theta]", "/", "4"}], "*", "l", "*", 
    RowBox[{"PauliMatrix", "[", "3", "]"}]}], "]"}], ".", 
  RowBox[{"PauliMatrix", "[", "1", "]"}]}]], "Input",
 CellChangeTimes->{{3.7788522360416913`*^9, 3.7788522403052564`*^9}, {
  3.778852361120309*^9, 3.778852393994541*^9}},
 CellLabel->"In[24]:=",ExpressionUUID->"15bb680d-3e74-4466-b69e-af01d8fd4ea4"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0", ",", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{"-", 
        FractionBox["1", "2"]}], " ", "\[ImaginaryI]", " ", "l", " ", 
       "\[Theta]"}]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     SuperscriptBox["\[ExponentialE]", 
      FractionBox[
       RowBox[{"\[ImaginaryI]", " ", "l", " ", "\[Theta]"}], "2"]], ",", 
     "0"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.7788522424930277`*^9, {3.778852361353168*^9, 3.7788523946601343`*^9}},
 CellLabel->"Out[24]=",ExpressionUUID->"ea4a7522-c5f6-4cd3-ad0b-6a9e8516a3b4"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Cos", "[", 
     RowBox[{
      RowBox[{"\[Theta]", "/", "2"}], " ", "l"}], "]"}], 
    RowBox[{"PauliMatrix", "[", "1", "]"}]}], "+", 
   RowBox[{"2", 
    RowBox[{"Sin", "[", 
     RowBox[{
      RowBox[{"\[Theta]", "/", "4"}], " ", "l"}], "]"}], 
    RowBox[{"Cos", "[", 
     RowBox[{
      RowBox[{"\[Theta]", "/", "4"}], " ", "l"}], "]"}], 
    RowBox[{"PauliMatrix", "[", "2", "]"}]}]}], "/.", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"\[Theta]", "\[Rule]", "0.1"}], ",", 
    RowBox[{"l", "\[Rule]", "1"}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.77885174122219*^9, 3.7788518498502007`*^9}, {
   3.7788519532711287`*^9, 3.7788519553709574`*^9}, {3.7788521733515077`*^9, 
   3.7788521872825556`*^9}, 3.7788526217445135`*^9},
 CellLabel->"In[30]:=",ExpressionUUID->"fa8f8c80-d652-44ef-94a2-c47705e2fc44"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0", ",", 
     RowBox[{"0.9987502603949663`", "\[VeryThinSpace]", "-", 
      RowBox[{"0.04997916927067833`", " ", "\[ImaginaryI]"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"0.9987502603949663`", "\[VeryThinSpace]", "+", 
      RowBox[{"0.04997916927067833`", " ", "\[ImaginaryI]"}]}], ",", "0"}], 
    "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.778851789272777*^9, 3.778851850196994*^9}, 
   3.7788519556797714`*^9, 3.7788521875843763`*^9, 3.778852622163269*^9},
 CellLabel->"Out[30]=",ExpressionUUID->"de5abb98-0480-419c-8570-d69a105a0cb3"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MatrixExp", "[", 
  RowBox[{"I", "*", 
   RowBox[{"\[Theta]", "/", "4"}], "*", "l", "*", 
   RowBox[{"PauliMatrix", "[", "3", "]"}]}], "]"}]], "Input",
 CellLabel->"In[12]:=",ExpressionUUID->"ed30970a-ffa1-4c8f-a14a-7c0c7b894a55"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     SuperscriptBox["\[ExponentialE]", 
      FractionBox[
       RowBox[{"\[ImaginaryI]", " ", "l", " ", "\[Theta]"}], "4"]], ",", 
     "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{"-", 
        FractionBox["1", "4"]}], " ", "\[ImaginaryI]", " ", "l", " ", 
       "\[Theta]"}]]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.7788518944946847`*^9},
 CellLabel->"Out[12]=",ExpressionUUID->"ff77135f-5802-4b68-abda-e59ee5ff0755"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"PauliMatrix", "[", "0", "]"}], "*", 
    RowBox[{"Cos", "[", 
     RowBox[{
      RowBox[{"\[Theta]", "/", "4"}], "l"}], "]"}]}], "+", 
   RowBox[{"I", "*", 
    RowBox[{"PauliMatrix", "[", "3", "]"}], 
    RowBox[{"Sin", "[", 
     RowBox[{
      RowBox[{"\[Theta]", "/", "4"}], "l"}], "]"}]}]}], "//", 
  "TrigToExp"}]], "Input",
 CellChangeTimes->{{3.778851802078473*^9, 3.77885180295397*^9}, {
  3.778851904770844*^9, 3.7788519672591686`*^9}},
 CellLabel->"In[18]:=",ExpressionUUID->"52a27ac6-ee41-4e8e-8ff6-e9cd2e86f642"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     SuperscriptBox["\[ExponentialE]", 
      FractionBox[
       RowBox[{"\[ImaginaryI]", " ", "l", " ", "\[Theta]"}], "4"]], ",", 
     "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{"-", 
        FractionBox["1", "4"]}], " ", "\[ImaginaryI]", " ", "l", " ", 
       "\[Theta]"}]]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.7788519067267194`*^9, 3.778851936417751*^9}, 
   3.778851967792857*^9},
 CellLabel->"Out[18]=",ExpressionUUID->"b0012484-db55-46c9-a635-0aa0cf8707e5"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"PauliMatrix", "[", "3", "]"}], ".", 
  RowBox[{"PauliMatrix", "[", "1", "]"}]}]], "Input",
 CellChangeTimes->{{3.7788524539253254`*^9, 3.77885245889249*^9}},
 CellLabel->"In[25]:=",ExpressionUUID->"37aa8be9-b9ae-4cff-a14d-6f922829d3a2"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "1"}], ",", "0"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.778852459169305*^9},
 CellLabel->"Out[25]=",ExpressionUUID->"b55baa77-9374-4c05-8fa6-9dd5b47d76b4"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"Cos", "[", 
       RowBox[{
        RowBox[{"\[Theta]", "/", "4"}], " ", "l"}], "]"}], 
      RowBox[{"PauliMatrix", "[", "0", "]"}]}], "-", 
     RowBox[{"I", " ", 
      RowBox[{"PauliMatrix", "[", "3", "]"}], 
      RowBox[{"Sin", "[", 
       RowBox[{
        RowBox[{"\[Theta]", "/", "4"}], " ", "l"}], "]"}]}]}], ")"}], ".", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"Cos", "[", 
       RowBox[{
        RowBox[{"\[Theta]", "/", "4"}], " ", "l"}], "]"}], 
      RowBox[{"PauliMatrix", "[", "0", "]"}]}], "-", 
     RowBox[{"I", " ", 
      RowBox[{"PauliMatrix", "[", "3", "]"}], 
      RowBox[{"Sin", "[", 
       RowBox[{
        RowBox[{"\[Theta]", "/", "4"}], " ", "l"}], "]"}]}]}], ")"}]}], "//", 
  "FullSimplify"}]], "Input",
 CellChangeTimes->{{3.7788525258572583`*^9, 3.7788525901655383`*^9}},
 CellLabel->"In[29]:=",ExpressionUUID->"99a7a4a6-00d9-4540-80d9-878f04b3f017"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{"-", 
        FractionBox["1", "2"]}], " ", "\[ImaginaryI]", " ", "l", " ", 
       "\[Theta]"}]], ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     SuperscriptBox["\[ExponentialE]", 
      FractionBox[
       RowBox[{"\[ImaginaryI]", " ", "l", " ", "\[Theta]"}], "2"]]}], "}"}]}],
   "}"}]], "Output",
 CellChangeTimes->{{3.7788525636816545`*^9, 3.778852590699211*^9}},
 CellLabel->"Out[29]=",ExpressionUUID->"efbf535b-79e9-4e95-bc0a-c205a72baf21"]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.7788525971635475`*^9, 
  3.778852604795164*^9}},ExpressionUUID->"4bdd8a7c-cb9c-4383-aafc-\
976a17be7cc0"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"PauliMatrix", "[", "3", "]"}], ".", 
   RowBox[{"PauliMatrix", "[", "2", "]"}]}], "-", 
  RowBox[{
   RowBox[{"PauliMatrix", "[", "2", "]"}], ".", 
   RowBox[{"PauliMatrix", "[", "3", "]"}]}]}]], "Input",
 CellChangeTimes->{{3.7788526260220656`*^9, 3.778852638972678*^9}},
 CellLabel->"In[31]:=",ExpressionUUID->"4286dbfc-7fa1-4707-ad02-b095f30c0de4"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0", ",", 
     RowBox[{
      RowBox[{"-", "2"}], " ", "\[ImaginaryI]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "2"}], " ", "\[ImaginaryI]"}], ",", "0"}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.778852639265503*^9},
 CellLabel->"Out[31]=",ExpressionUUID->"6d77498a-1dc8-456a-920c-4d1f3cf41da9"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Graphics", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Arrow", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", "0"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"1", "/", "2"}], ",", 
          RowBox[{
           SqrtBox["3"], "/", "2"}]}], "}"}]}], "}"}], "]"}], ",", 
     RowBox[{"Arrow", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", "0"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "1"}], "/", "2"}], ",", 
          RowBox[{
           SqrtBox["3"], "/", "2"}]}], "}"}]}], "}"}], "]"}]}], "}"}], ",", 
   RowBox[{"Axes", "\[Rule]", "True"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.77885784382981*^9, 3.7788578922511673`*^9}},
 CellLabel->"In[34]:=",ExpressionUUID->"59987994-9dd4-4eea-9a3b-a94a750ea637"],

Cell[BoxData[
 GraphicsBox[{
   ArrowBox[NCache[{{0, 0}, {
      Rational[1, 2], Rational[1, 2] 3^Rational[1, 2]}}, {{0, 0}, {0.5, 
      0.8660254037844386}}]], 
   ArrowBox[NCache[{{0, 0}, {
      Rational[-1, 2], Rational[1, 2] 3^Rational[1, 2]}}, {{0, 0}, {-0.5, 
      0.8660254037844386}}]]},
  Axes->True]], "Output",
 CellChangeTimes->{{3.7788578668336744`*^9, 3.778857892572961*^9}},
 CellLabel->"Out[34]=",ExpressionUUID->"7b244b7d-ddd5-4317-8cd4-709db000f54a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"RotationMatrix", "[", 
   RowBox[{
    RowBox[{"-", "\[Pi]"}], "/", "3"}], "]"}], ".", 
  RowBox[{"{", 
   RowBox[{"0", ",", "1"}], "}"}]}]], "Input",
 CellChangeTimes->{{3.7788663777929993`*^9, 3.7788664033644037`*^9}, {
  3.778866460546762*^9, 3.778866481544761*^9}},
 CellLabel->"In[40]:=",ExpressionUUID->"339334ba-55b2-4b64-aa5e-5417d6198b32"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   FractionBox[
    SqrtBox["3"], "2"], ",", 
   FractionBox["1", "2"]}], "}"}]], "Output",
 CellChangeTimes->{{3.778866384257309*^9, 3.7788664040070343`*^9}, {
  3.7788664627464995`*^9, 3.778866482108444*^9}},
 CellLabel->"Out[40]=",ExpressionUUID->"ef3b201f-232a-4d63-8d04-fbf917271f8c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"f1", "=", 
  RowBox[{"Import", "[", "\"\<fig1.gif\>\"", "]"}]}]], "Input",
 CellChangeTimes->{{3.778875848012368*^9, 3.7788758822258344`*^9}, {
  3.7788759532412643`*^9, 3.7788759544965754`*^9}},
 CellLabel->"In[43]:=",ExpressionUUID->"136ec04d-dc11-40a3-bbd9-2b2d5aa576db"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJztnSuMJEt2hu/aBgOHFlzY8DJrmC/zwLFMmu2215bV0lratmRZTRsObHhp
wYYNx+zSgRcOLDpwYLn+yPqrTkdFvjMyHvV/Uk5NvbMrMuLEef/xz//16d//
7qeffnp4d/jn05/+55/+9rc//e+/vD/c+de/Pvznf/z1L//2z3/977/8x1/+
9o9//vvDg3/4w08//d/h+IefhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQ
QgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQ
QgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIcW18/77bv7xs9y/PL/vtdqv/
6//6v/6v/x/+j7Ux9fos4vD1t6/7n3/+ef/w+KijkAPjdX93l/w8dAw7MFaa
Y2UdGC+sjanXZxEHjO3tp48a34K4/XR7mJOvGrNC0BwrD8yxL7/9pjGrFOp7
GuNyaOSe9qKlgLmFMUt9HmI42lvWDdbPzeaPmpcFIblXFo2+p/lVEppjdfP7
t2+Se4UBm5nmZDlAb9D8Kof9/sdec6xuqO99+PB5//u3H/vd7ofGOnPkeygL
6XtlAHmHNfDz84/9R8m9qoG+937zcX+z+bH/dNuM+W+//djjGkh9biKMbDBl
If9e3ux3Z3l3d/fDrYVYEzXH6gVj++HDnRtzyD2M+YcPP/YvW+l+uSKfe1lI
38uXHz9+7L+8vl37sBZiTZTcqxfOSeh3kHOQdxh7XAMYf8m+/JC+Vxby7+UJ
1rZGxp3lHfS+xr+nvWXN+LlFGHPYOaHvv//wXXpfhtze3WlOFoT0vfygzKOO
B53P+na0t6wb+Pf82gT079LWjetD/r580JwsC/n38gJrGfbzGyPzYO+0r1E8
Z92c8/fe1pOg7KPdG9eJZF8eKJ6zLKTv5QPWMMg52jZh2/JlHtDeMh8wZvTD
9ckgvrbvdV1566FrZO7fIOajOVkW8u/lA/fy8OGE9DzS5DHIl5AS6l4vr6/7
7a/P7nh+fnVrnz9uzWu/OX0Ar3t5+eJe1yb/WKcMr237buh6zHOQry898rmX
hfS9PEC+wsPD2X7VtZZpb5kWJ8e+7vYPj3f7X375xcko2CRxiz0J5BVlmtPP
DvIO9d/x2vPrG7tYSPYNqZkL2UofMK4b2TvTojlZFvLvpYf5CvDpIW6hb/+u
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
qjy9NrS3TA/kHnQ13OJ4erqUe5SNOHx7Jp/De9qeW+tv6cP6+pTTHkZzsizk
37uEMo/xbKny9NqQvpcXZ71urNy7Dz6Hz4AeideE/H8p8Os1qEf7W+R7KAvp
e5fY2M0c97byoecFZBP0Pd+/52Tb3V2r3Lt3z328iJVkHkOTw5ePvdP2mlSM
51uk75WF/HtvwVxmvWn48deuvTkE5e/lRb++9/HCN2yfC+l7kHupc/hC2Nq0
8Pnl4vNOjfaiZSF974zNV8g5dk17y7zAddOm790f9T2/5hifw3tCuiBiRBkz
s9bfMRQb74X5Ir1Pc7I05N9rYF+hnPIV2tDeMi/a9L3dMZ/9NlBrE69jDl8o
njMn+2YIzBfmN+QU65wKyb2ykL7XzGHbVyj3OSwfel606XuwkTNPD7eszQk5
afP6/M/LLZ6zDZvbSr0v5/1iTBRrVhbX7t+zuUlOz8tc5gHNsbxo0/cgAxib
ieP5+dXdhwzEfcRzttVrySl/rwvf35db7PNaIH5Je9FyuFZ9jzlJsNGcZF4h
81U2lbxgPGeTu/x2XLCvom6HA7EquIWMbFsnS5uT2CvS34c4zxxjoGOjvWhZ
XKN/jzKPMSwl2DYtmmN5wTqdsJ2E9DfqfdDzcLy8vnbGglDfyyV3bwg2x4F1
XUqaU3PRXrQsSttbzoXzE3kKN5nHbbahuJa6Sd1/byo2t531PK9F9knulcU1
+ff2x/gVzMlceitMQfl7dZND/7052N598CNcQ7xL6XtRxlxh7PoO2z+51HG9
Bn2Pdk3GnpVea0J7y3GUNk8Rzwm5hxyH1OcyFRvrybpHNet+pc1JK+ewFkJP
h06AA3sVe2Ac/ft4HcYU77WyMPXfNZTa/XsYE1trszRfXojS95ZrwHwB2+ec
vc5Z9zLXuVpC/t5QrM8Pa2Wtul8JuUVW1lHOsTbVxhw33uE/5r8Wn0E5iM9G
/k7uY1yrvsfxpV0T4wNfe451x8ZSwhxLxTk/7ovLLWAcJXvk8RY5BIgxaet5
npLa5qStg2R1v9x+9znkrO9R3lHWYSysPMN9PI7n+8bF6ohYT6FHUKdg75qh
n5WSGv17vo5Xul3TR/GcYRg36fqZH+QbfifIvu12e9L3kFPAnniQf/CV4rGc
Yidr0veIrW3GvKGadL8c++9RRmGfYfU6rIf4/fH4EnoAPoMylWsu9cBc9zg1
7S3px7M6Xonxmn3kvLdMBWUe1p/7Yw5x15xurpVvpzoryCnP5ToppV7LFGw9
QM7PGuRfTnPSyjur2+H/sf2s1Dk4xvxe7HlyGuca/HscZ/y2dk9Tk45nkb53
iasXedDjcIzR3ZwectD37gM556lgjZcabPJtcE22ue456gVDycHnTnum/9um
0K2tDnJj7Km5jHPJ+p6/r6GOV2p+wlBymGO5gVxw1Lr06z8PwdXR3G6dvy/G
uY3lnL9Xl63Tx7d95mwX6yO1vmdj1rn3zyGHxMZZ2NwW1rNLdW4l+vesn5Z1
xhirWfMemSh/7xLIO1zLU204jPvM4fopPX9vLNQLfPlXQlwgSRVr5ssV/H45
1gi363UONu6S9D0r79gDxe5rUp/fWqTeW+YI5BbrgJWYT2SpIX9vCtb3x/W7
FP1v7Tnp7/1vjjZN6M85/1bYy1j73Kme68pjXIJ/r0ve4bHU57c2snNewp4I
jZ708ZSjUJLOQGqM5xwD68VvAvEYuY7lmnPS9529//C9uJpwvu1zbR9kzvpe
yH93jfqdj/L3LsF+ETGZ0JEg/2ALZl9XxK1AhypFB8x5Tq6JXdupG+QWF0jW
0vcYt8J9gfWVxf7upfF74qwZ35Sjf8/GZ1r/3bXqdz6K57wEeh1kG+NamNcA
Gcj+d8hZwGM512oB167v+di+0DY32sm/THTA2Pl71o9Xqo7XBtd6/E1r+f1y
2VtyHeIej/rvxvwOqc8xF+TfGwfkHH4vyD3Wb3F20KMOmPr8fGrO35sD9jbM
VYL8Y/57DrVBYs5JPyakxv6+bbpfrL8xtX/Pr6Fj67/RppHq3HJF+l6YkA7n
HjvWkfdl38PDQ1Z1Wgjz92pa15bEz1HLIQcilu+BuhBjNWuoL9yF1Wmp18cY
01T6nvXd2ViVNWoKlI7iWi5x15Ozc55jOaE3YS2iv4+9zinz8Nw+w+us1P57
KbB6kPUBri3/ltb3uD7aHjK15yUT6kGhfL+lvmNt/16X7+5axnUuyt+7BHob
4lqgzyF/nfU3KeugI9O/l/s1dm35e0vg+wB9P1HsMV9yL2rX/RprmQ4lptxf
S9+z8o7jKd/dNOTfuwTXF+Sak3Onngu3b2I5U5/jUK41f28JmB9m++TQBxhT
/i01J3F+jG+g7L5m25dff3Ipu2dM/54fq0J/NH131zyec5Cd8xLoe5B7Lm/h
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
x+cuu+cwbF0V7BPm6MehfutTYV6wb/+UDr8sqtdyiashdZBdY9cf9j5AjEsu
Nnrpe/NhjJ+Vd1iT6ANaei2auxel3d3aPVXfsyFk15zro4jlS/Dln2q1Lofi
OcPsjjXBUAcFuh/rJfqv47UJ/a6pFfYxK3+p4jmn4+dchfrhxfjepeYk7Z6M
yb92u6ftX7/k7zHXv9cH1xicr83/Y25MrO+tGfn32mFtFMizcy+fj2/qUbNm
CuuGrZm/PgTl743HrxmNtQb3nbxbIX5pyVgzX3Zfq93T2jWXthmuFTtm5R/z
/yT/piF9r5vmWvvm1iHofZAf7LUOeYianZCNTt5lGNOpei3DsfUzN0YniK3f
+Sw9J63dk76ia8lzt3Lf9gda8m9f0r83BOb/+fVfcK0qBmYYqtcyDFuHGkeo
d33qcwyh/L1+mItgfSiQCxzntc8nVqyZXye09vqetjYKYleoFy09pqlyhbif
gfxjDoSNAdWcb0f6Xt2oD1EYxjfYWBX8H2tI6lzMmHPS1p6sNU7Qz4eLHQsS
27/XB/fdvJ4VA9qP/Hv9wM+HaxtHjjVZulA851t8u9ebWJVM7NRT8/eGQj3B
xknUovv5PRTaej0tSS61IUI5EG09Hq8d1Wvpp+n3ene4tu9PcSucR+xRlKs8
zGVOpiYUm0l/SG526rVsML7Oe8pFzOi3GEpKPXZt/14fvJ79vY1iYM5I3+sH
vw96LrAGy8vzi4txwXOQg/j/83OePtJrt3P6+t3asZlTWHMvatfHUv1+vo7H
819rbHPeW4bGl/Ivx2t/LVSvpR+sQaeYzWNOO3IWOLcgD3E/x+uI8ZzIpU99
Lmvj975LEZs5hRQ+95C+lPva6Md00I+3djxSav/eECj/WMfOxm/lPMaxUL2W
fqjTQfZBxsHeafsO4fGc+xC937zLfl4uiV2/ac8sKWct1V7Uro3cL+Ro+/T7
wq7lx2sjZ33Px7d/co9zbfkPiufsB9eKzV9n7joew2/HPPYcbUPXVK/F5qj5
8Sqpz20MqeekjY24MbGuqWPj/bxt2jRT72ly8+8Nwf6W19gDSf69YWBNxe8E
mwZ77qFGCw7Iw1zqUPvQv1dzLBd9eJvAGp2TnjKU1HIP2Nj41PLPPw+bo5Yq
x9JSkr7nwx4QNv8BsjD1bxqbHOZYKdgcddg02Y8WMjBHGycoeU4OwfYeiJmb
vCY57UVZqyHUhyJ2bCBrkrCG9I2Rd/jeXPZyJfj3uuCa5sd/4X7qc4uF6rVM
p5R6LTXm7/k1NFP6d5YG+Xu55RZZ+WdjA7E+Qg9bKt+fsSr4TO5naM+kfpeL
vCO17C2t76923U/6Xt3U2H8Pc9PGHc7tb54bOel7PpR/0LOh70EXs/HxjJuF
7MJrumQhnsNrKEup11HW4T5jknKwZ7ZRon+vi/3uXO+m1riXnOeYmE9t+p71
462dp7UWJexFKf/w+zMG1OporO095GAdAep1+CwrM3Mf31r0PUvtup/qtdQN
4zlLz9+jXZPrY26x9UtSgtyz2Hrtu2OcBMYH4wU5Bt08dOA5vMbKOfrtShrb
0v17XTCmiH6/0moatCF9r25qyGPAPGNuMm5r1PEspdeS8P3eVm+z/9/v8veP
D6FGfc/CcWPMJ2Rg6bKv9DlWGy6v5uvuVB8m+PyxHyBiSdteR0rvv2drrtQU
u9JFafretVObf68N2rNp90ydzzkH1WvJB1xD3DuG1j5nc3h5bfIGjz3eKdPa
bNX07+WaZ9EG7Sv0/zBeMPV5rYF8D2VRu75nYQ9H2j1L9flpb5kHLn/msNbB
DwdZFtqPMDYTefIvr6+n/Hncx+Mhva/EutTMJWK/0Jp9eSE0J8uiZv9eCMbz
soZAibJP/r30QBdD/U/Wf8HhjwuuNdZKY18I5s+zdkyoZkxpe1Gbl4c9ZYl1
xuYSu/+eWJbS5tgS+HXMS5N92lumB3oa9DyMBXs7+Ppe0wPw0ck9+P/s+/G6
RlbeX1x7Jc1JX+aV7D+Yg+ZkWVyLfy+EjXcpSfapXkt6oLNBlrlb9H44yDdf
37Oy0ffV0f55G/DjlZK/Z2Ue7Cepaw2nRLFmZVHS3jIGto5EKbJPe8v02Dhu
2jyh1/lyD2MVilGhTGx7Dv5CfF6uOXy2rvQ163lEc7Isrs2/F6I02Sf/Xl5A
bj206HuM82zX924v+ogwfy/XXAYbtymZ16B4zrK4dn2PQPYx1iX3WDTNsWXB
bwndqu+AThd6P66dNn2vy86J5/Ce0HMf3r879Q2M81dPQzIvjPS9srhm/54P
+6PkLvuk7y0LYiqpX3UdD49hm2OXvke55+crdOmC9O/hNTnl8DEejDnpOc+R
tZF/ryyk752hz4K57bn66TXHlsXV9DnImM5j96NVBrX599oeb3LdX092zFLi
OfemN3oJ/oA1kb5XFvLvvcXKvlMuUmbzW/Va8uKs791eyDfokszTYw8yvB71
ypjL7n9ejnnrNnYTsi+3OZEa5e+VRa57y5RgfbJzPLdaS9pb5kWbfw8g1+H2
WM8FuXqQf7B9QhZCVoZ0yNzmJOscbTbnGtOpzyk3NCfLQv69MJjrudp05N/L
izb/HmAtMzwH2Qd5B/kIfa+tNnVO+Xt+HIsfeyoaFGtWFrntLXOCvVRyi3PR
3jIvWHsMcix0jbAfA8YM+0z3uo4eBczfgyyNf/bdYA4ojqUfzcmykH+vG9u/
Lxdfn+q1lMnQnmXn/ntpdb6cbR65oVizspC+142Nc0Fuew6+De0t6yaHvrP0
6d0cfXqSed1oTpaF/Hv95LbvlX+vbhjP2dWbNibM05NPbziSe2UhfW8Y9PXd
ZNCzVj70ukmdx7A75unBxgGdL/U+rwS0Fy0L+feGYePaUsdya47VTcq9qM1Z
gF1fMm8YyFXRXrQcpO8Nx+buptwHy4deN6nmpKtbc4zflH1zHNqLloX8e+Ow
uQ2p7J2q11I3qfL3rB9b9s1xyL9XFtL3xkF7Z8r4Ts2xukmRv8e4ZcVvTkNz
sizk3xsPco5T2jtlU6mbFPl7tG8yT3Wt760F+R7KQvreNPx1Yk3Zp71l3VDf
W2teWr91Dnk6JaI5WRby703Dxr2tXbta9VrqButnqB9tDGi3v8kgTrlklFtU
FtL3poM1Az6+m5Xrd2pvWTdr5u/tTE891d+cjuZkWci/N48UOX3y79XNWntR
xrIoV28+6r9XFtL35sHY75tjjAt7i8ZENpW6WWtOKpZlOaTvlYX8e/OBrFsz
xkX6Xt2skb9n/dOKZZmP4jnL4hr0PfZGw9/KWIHQY1PhGoKcvjXWEM2xusF1
+fP7m2j5e6rLsjzS98oipn8Pc+vlZbvf/vrsDtrm8Dgfw/H8/BpVVuB6vL+7
c72uWeP+96+7i8fmAJ2PdatjxweoXkvdYGzfb95Fm5fMW7hRXZbFkO+hLMbq
e+wtPURPcn7zw7UA2YK4bMoXPA55h8exp23rU70UkEn4PuRE8Rxw7k9PT6fH
lvh+xgjEzmvQ3rJuYubvKW8hDpqTZTHWv0dZNkTnwGvxGso3yhbMtdtP907f
ii3zCPROK/fcY6+vzWMH3W+Jc4B8XSMmXP69umH+Xoz+e/41uvTnXyvyPZTF
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
/46x+h5jhZW3kA75Hspi6N6SNaUhE+APoX3U+jzWgDXQrI2p7z2sFcX8A9ZW
9GsgnnoZvb4e5d9lzMFSsDct1irnixlhl9LeMh20cbL3FK4X/t8+xl4gjH3h
fpG5CbjGuupSj9H3sG+yccJL/a1iOJqTZTHEv8daltiDMm/N+i7WsndS9rKu
pt9zoQ3sw2x8+X53rifFOmP7Y2941uDAdzFGK9b+mXkNiL0bk8uuei3p8O38
PFij0x72Pbb2XV8vIubvUWfsOx/lLaRH8Zxl0be35P6WcdrUSzD315Z77AWB
tYOx3tg3970vVNuT9RHZvwj2pqaH+lnutfXVW/LvsWvW0FgE7S3rBtfqkNw9
P29hyR6PYhyak2XR599j33TWXuLj1L3weJtcoDw592TvPob4Cll3mrm9U/dY
5x5957rS1GnhM3Q2z5a+ekuC3xcxLli3hsa4yL9XN0P77zGW5UZ5C8mRf68s
+vQ9J9+OvcWha1FGQc+iT7/tvdQVYZfjcdvx/9uBvkJ+LnKrpsg97IuZO2Xl
motr2W6dLMTBfrRjP38s2LNvRsS4yKZSN+f8vfa9DWNZsF/Cvkl5C2mRvlcW
ff496FWQeS4391ibEreoUcFahG3vpV7GWJIht0PO2ep7jB8YCvvNUmfy5Rp9
N2uuI/vdOHun9L266YvnlH0zP5S/VxZd+h71qnNflW9H39rrKX8pxfrL2vdj
7Zx4H/tix/TbTcGPyes6N9lU6qbPBkPbuGJZ8kH6Xll0+ffaeqs3vr27Yx5A
d69xPE+7Yd8xRt/7+v2Lq3cxRt+zfsrc1gq/3kaX7FO9lrrp6r+3M7YB5erl
g3wPZdGn70FWNHrd6ykfiflwrt9Kx7yjPZJ5cW0HbKYuD8qr+9v5uSP1Peqt
No5ld+wVM+T9a4AYILumtdk7tbesm7Y5yfhf2DZViywvNCfLosu/R30PMo59
xinHhuZ04zNCcZtv7h/zEobKIOvf83OcKKttLCZz8ZjDx3pS+JsQw5nTnpkx
eshnb7Nhyb9XN9yj2ZoMLq562+yJxuZ7ivjI91AWffoee0izBgXqtXCM1553
Nk4GMox1opq6wV9P+ijrQlGOMkedNaTY7/OUk5jZ+oE1jf4brHX+vl57y7rx
8/do22Qcy5SariIumpNl0Ze/x9gW54N7fnF7UNxPYWOx5+JqQh3tpDgn1m2h
vtf0hWnO8beX15NN9cm7tXbPXGh6dZ9ruWDNs/t71WupG+bvYZwh46D/07aJ
+6GaniItkntlMaQWIPPPsQ9NPedYewVyd4dbU/vp7Wt+XPjxXH7C8ZafkUNP
iRCMc6Heh1useThnzbF6Yc8+xGy933x08o7+3qn9GkVcsO+GXTpmPV+xHK7n
M+bYwPrOYl0YD2ttXJ/uPp/62miO1Qf2M+z9Dn0P8o62bsm8PIG8Y29i7Ufz
x84x9Z7NF6x50PUa+XenOVYxjGmhvud6Yj08vIl79v+PnCLdT3W/yefinGx6
tOV0frrvj9ft0Z6C8Wp6aOZ0frqPw97HGsi+b43ck4+vNthnC3UAh+a96tCh
Y8KhOVbkkatvUgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQuQLa66j
bhJ7PNvnUH/Wf1ykAflDqIWPXCKMB+vo8HGMoXKM8oFzC3WaMT6cQ3wcdacx
lqnPU1zCmtxY+5i7Z+cb5hp6Mmm+lYnLVz/MP9QnQH0y1CvA+HLc0XdE9R/z
gLUFMB64ZZ1fzM2m58u9xikjKN84Puw7bnvq4Tb1eYpLMEaQa1gPsS5yvuE5
/B91XGwPClEWWDfZgxJzELWv8BgOjDvuc76mPlfR9HhhH2uuqRg33Mc4af+Z
F9yXYB6xByzWy6aXz3Zw/3KxLlwXba97rovYX7o61V93WhcLx8o59mPGfhTj
rbHNB/ZgwJrJnmYYq/2xfrjGKi9cP2+n2zX9WjGfMIbs26PxyhuMD9dBrJHP
z69O5qHWXOoeUWI+WDcxHyn3qEdIf8gHNwePfWzuTT+brvmH96inRjroK+CY
NXqf6huXBOUexhJjuN2qVmctYO2EDoF5iVuMr/pu5EVjY7l1B3Xzvr2Ji59Q
Td0kYK8BHY8yD2un26tsFctSEpR71AVsTJkomyZ2c3vqY4q5qbHNC+xDIOsY
R4Y+UX0xR4xJU7zL+jgbynZ78pHTdwAZqLlVDhizj8f4PujqGrt6gC0Mcg99
prCeSj/ID/gUsC9BbAvmHnwN9PVhTXV+Pm9OSu6lw8a04Pd3e5Vj7BjloMYl
f9jfGT4FxnSKOngT1/JVMi9HsGZCznGtxC3tnvQ/wF6Nx5nnhzF1PonDnOVj
2tOsA8YBvz3Gx8Ww7N7aPV1M7mGu7Y7+9LYDY5f6b7lWGNeCHrWyb9YH485w
aGzzpOl/+eUkt5ocy9eLHAb69KAfQu4h7hq3/vtFXJhvaXMVmse+nHR05smy
p3fogI0t5d9xzWAuMX9P62JdWP+76keUD8bT1Zc46hfUBZl/pPmbF6z/0XZA
TqY+x2sE80Q2sHo51/z4qBjOyoA+KP+eEONhjrrqVdUJ7TFYH+W3rQvsU5s8
ac1bIcZAfcDZOLUuVgftYvLb1ofGVYhpNLVUf8g3IIQQQgghhBBCCCGEEEII
IYQQQgghhBBCCCGEEEIIIYQQQohF+X+VzfOp
    "], {{0, 257}, {446, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSizeRaw->{446, 257},
  PlotRange->{{0, 446}, {0, 257}}]], "Output",
 CellChangeTimes->{
  3.778875882951393*^9, {3.778875952177871*^9, 3.7788759549143085`*^9}},
 CellLabel->"Out[43]=",ImageCache->GraphicsData["CompressedBitmap", "\<\
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
\
\>"],ExpressionUUID->"cee34ea3-f17d-4934-b8bd-32cf22d680f0"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"d1", "=", 
   RowBox[{"Import", "[", "\"\<D:\\\\CMTC\\\\TBG\\\\el.dat\>\"", "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{
  3.778875880539793*^9, {3.7788760447362647`*^9, 3.778876095330349*^9}},
 CellLabel->"In[46]:=",ExpressionUUID->"d7fa3f00-aa2f-4c28-a680-fdb2aaf50540"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{"ListLinePlot", "[", 
    RowBox[{"d1", "-", "2*^-3"}], "]"}], ",", "f1"}], "]"}]], "Input",
 CellChangeTimes->{{3.77887609653666*^9, 3.7788762037934537`*^9}},
 CellLabel->"In[57]:=",ExpressionUUID->"201d0471-c741-4632-aa77-bfa9a6cc589b"],

Cell[BoxData[
 GraphicsBox[{{{}, {{{}, {}, 
      {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        NCache[
         Rational[1, 72], 0.013888888888888888`]], AbsoluteThickness[1.6], 
       LineBox[CompressedData["
1:eJxdlWtMU3cYxs9MDI0JCx/ES+IHZIqoExGpd+kj2lJupRd6b5lC8dK1SCfD
uoH+CajA3CJaMdFkCZmKJkZio85FF8+8X6cYDWMz6mZmYoIZHyBeMq/h7Yf3
36Rpfn16Tv/nvTzP5Mr11upRiqJEP7w/fo68BnVDv5+r7Dm4V0dfYEyZ9c8r
DQnW4JA5tk0/OsEpGFh3MV1n7CQei+z6v11Ztj3EExAM/3TzmjZGPAnxeCzQ
+24XcRru/Nb9wneugzgdAdutNwNbdhJPQU9ofJMp9gNxBpKCd0wa4w7iTNzX
plUF09uJZ6DxwHcXF05rJf4ctzVdhc3ObcRZ0LyN91fFW4izsULT2nBE20w8
B72Groj5YRNxDnJ9FdWPDgviufCcbmgzf7aFOBf7bni7n01vJNYiJeXlLEPF
t8TzsOPLzGnhXzYRz4e1Lefghdwo8QKUZszVp16vJ16IyQ7F1Lnha+JF0CfX
Z/4zs454MWrsu3JfPv+KeAks1n73gpMR4qX44/tbb79orCXOw8A99deUrTXE
Olyf13OiZFSIGMixtzweH1o3wgKYEA2a+s6uJn0ZWsPD4878V0X6MmSt8Z+9
oawiPR/K2r71Q/1e0vMRnR0pqArYSV+O7Kbh2JGlpaQvx+Bf1UnPpuaRvgLK
/mMbjHVP8kZ0iRU9jJn5Fq1BR9frUb4m9VLbpjK63vDhwE97Oh46STegfXfy
6YzUlaQX4NOW1cV+Y4D0AhyqOx4aK9aSbsRQX9GgI071EEaEzhR3TAom6leI
pGN7PhkdpnqLQqzqr3l12ZvoRxE6SyL/p2VT/0QRrh4Nv777ZCPpxTjaad9+
qZb6L4qxJOPHSE7vN6SXIPrzvuab72heRAnaLd1d/75oIL0Up2omBjpO0nyJ
UgQXb917XruZdBNqh5MfVNYTC4mVMv57Ucbvp5j5/8EsncfMz6ua+fMoFv68
sEj1sPB6qRZeT8XK6w2r1A8r75dq5f1UbLzfsEnzYOPzotr4PCnlfN4gsSjn
86qW83lW7HzeYZf2wc73RbXzfVIcfN/gkPbRwfdVdUj77OT7Dif3A+HkfqE6
JT9xcb+Bi/uRcHG/Ul2Sn7m538HN/VC4uV+qbslPPdxv4eF+LDzcr1WP5Ode
7vfw8jwQXp4XqlfKEx/PG/h4HgkfzyvVJ+WZn+cd/DwPhZ/npeqX8rQCibx9
D2bJEjE=
        "]]}, 
      {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
        NCache[
         Rational[1, 72], 0.013888888888888888`]], AbsoluteThickness[1.6], 
       LineBox[CompressedData["
1:eJxdlXtMU2cYxs80oo4FtYgZ6FRm0+hsmspGveMjarkU6Y3SG5UO0OjAC8IY
ysWj0BhUhhdU1KhL2JYwDbqpMcSYfZPFGCLZJZsBphJx0UhU5lxEE4jO8PaP
92ty0vz6nHN6znt5nvi8zY61oxRFKf//ePs98vlnWV/z06b/bjX9SD/AFnvh
/MkzYR4HXdYu/7A+zBOR3J+nOVdwlHgyTBuuaR4FjxC/j654/XFTwmHiaWiN
/Lta/+gQ8Uz0m/pjWxoPEn+IzJkxjbdxgFiLvoQLSe88bSDWYfzKxlNjKuqJ
Z8PSPmv0LeNe4o9gu762syW6jliP71JaCzq1u4kNqKztCpbkh4iN6LvkLwx2
1hDPQ9umz/KKc3cRJ2DrxamnX8fsJP4YDQPFg7aeHcSfwHAs4fehn6qIE/FV
ZHrQ/lcFsQnm4XW1T6ZvJ56PbQ17rvwZKideAP0BY1vV+C+IF6IjeuO5jubP
iRfh2+HcuknWUuLFKHs49pUmooR4CZz9vdrB9mLipYg4HNWVVruFOAlFDbqL
A6FNxMvw5aKIeydeFhIDhjHf3/3Xu2GEVSDeNSpmytfrSF+O7eX5phe/5ZO+
HPeevftDbm+Q9GRg89z66IN+0pMRNxjXbo11kb4CedpvZj9rziB9Bd57JcZ6
BpaQvhLKidaS1NL7SSO6xMoqVD7vfaibkETXr8Lx13ui7t7JpOvN2G359MH8
/W7SzYhqKp93uSeX9BRcPftBbMWMAtJT8HzoyM1613rSU9FXOG3OoVAR6alQ
DB1zrI5w/dJQHRLdNc6tpKfB+NjX4US4H+koG1KK9mnKSE9Hz5aYbuXncD8t
aDEcNZ/P3Ea6BcL9q+bJ2fA8ZGBcYqm9ppvmRc3AH5Zj5ju/VJK+GsbgFat2
H82Xuhptibq4QGQ16Zm4dKPzfpWFWJVYsfLzVSu/n2Lj/web9Dw2/rzCxt9H
sfP3hV2qh53XS9h5PRUHrzccUj8cvF/CwfupOHm/4ZTmwcnnRTj5PClZfN4g
sZrF51Vk8XlWXHze4ZL2wcX3Rbj4PinZfN+QLe1jNt9XkS3ts5vvO9zcD1Q3
9wvhlvzEw/0GHu5Hqof7lfBIfublfgcv90PVy/1SeCU/9XG/hY/7serjfi18
kp/7ud/Dz/NA9fO8EH4pT3J43iCH55Gaw/NK5Eh5FuB5hwDPQzXA81IEpDxd
g3DevgH6Gk9L
        "]]}}, {
      {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        NCache[
         Rational[1, 72], 0.013888888888888888`]], AbsoluteThickness[1.6]}, 
      {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
        NCache[
         Rational[1, 72], 0.013888888888888888`]], AbsoluteThickness[1.6]}}, {
      {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        NCache[
         Rational[1, 72], 0.013888888888888888`]], AbsoluteThickness[1.6]}, 
      {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
        NCache[
         Rational[1, 72], 0.013888888888888888`]], AbsoluteThickness[
       1.6]}, {}, {}, {}}, {
      {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        NCache[
         Rational[1, 72], 0.013888888888888888`]], AbsoluteThickness[1.6]}, 
      {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
        NCache[
         Rational[1, 72], 0.013888888888888888`]], AbsoluteThickness[
       1.6]}, {}, {}, {}}}, {{}, {}}}, RasterBox[CompressedData["
1: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
N8zfm2p/H4PyGuZBe9GykL53PlgzYB9aI5bFor1l3SyZv5eCeQ2KcTkfzcmy
kH/vPGw83NJ5CzGq11I3h37r69g6gWJcpqFYs7KQvnce8Tqx5h5Ze8u6OfTe
WiZ/LwVjXGjvlM53GpqTZSH/3umgRintQjnqXci/Vzdr5O+lYIxWruu6ZCT3
ykL63mkwDgC5evDt5YgD0Byrm1xzUnVczkd70bKQf+80bN9qyL8ce2LVa6mb
nHtR67dWTt94kL+neM5ykL43Hhv3ltMOJB963ayZv5eCOX2wacjeOQ7pe2Uh
/944aN9cO1cvheZY3VDuLdF/bwzsq4VrXfbOccj3UBbS98ZB++Z1RvsmUY5s
3RzyGPLNS9o7Fd85Dsm9spB/bxgb5+Yhr1f6Xpnguhlz7eTI30vh7br3jHwP
ZSF9rx/mNeWM34zR3tIX7EnZ1cexsRs2vT+wNobXbbvlSI78vS4Y34nrX/U7
u9GcLAv59/qBTTNXfnoXqtfiC8g8yKiUHs7ey3gOsow9mL98+dLpv8uVv5fC
+rXl6+tGvoeykL7Xjc1Z8LTX1d7SF7hOHh8fgzyLxwX9jRHj3tgtP4c+y+x3
DFmZqj3tbU7a3IbcMV1e0ZwsC/n30nj2bci/54uDvvd+7cM1AzkHGYdb9qjC
66HvQU5uXo719tx5DClsDg/mhaf54AH13ysLb3tLD2B9snPc2/5We8t5CXVK
vn/vP7Y/O/sC4fGUvtf1OL4PayRjNmMZ4nVO7rZ+94K50ZwsC/n33mPjWOjP
8Da/Va9lXqCLQQYNHfcPd51yL+Xfg/8ONk3Mr9iXh/t4HEcsT+nfw2vW6ME3
Fub1Kc7lGMVzloXXvWUOrMzzFMcSozk2L9j7QScbOqC7pd7f5d+zci+WX3wu
1V8Wz336+MFFLkNMHOeSO5fVC9L3ykL+vQPcy3qLY4mRf88Xffpel05nn4tj
JJm/lzt3vQvJvmMUz1kW0vcasGdHbQrvMg9ojuXH5qB3+fEo22Cz7NL3up6D
zMPn4TXr/I9Og7YRyb4G6XtlIf9eI/OQk16Kv176Xn5Cnvrrdp+v/jjg3+vW
947lnqf8vT5sjOe1Y7/AGsj3UBaXru+VJvOA9pb5sTJts3kOds443givwePQ
2yAj7fvxOuQ3IKevlHjOFFb2XbLepzlZFpfs36PMQxxLKTIPqF5LfmjbhOzi
Eet7yIdBrGjI03uTjbSN4r24z7y++LNLknsgln1B73OW+7M0yt8ri9Lm2Bww
Hrs0PY9ob+kD1iD73NZjSeWX0J7JHHXch8zD/VR+A/CYtz4E/X2wd3789MO9
j3xuNCfL4tL8e9iDQ+YxhqU0mQfk3/NDk4P+uo/NTNXn/LZ5aXTCj9fhlnGa
XbFJ9O95yt0bg43zZH6ft5oPS6FYs7K4JH2PdQaZq1CizAPaW/oi2A9et8Fm
mdLf2I8B6yLqk3W9jjCes9R5yVru9B9se3pP1ILmZFlcin8Pcw8yjznpJfvf
Va+lbjz0nZ0Ka7pjvrGWdanzbQylx3PS98yD4xX/vdu+f13u8z6X2vU9jhvj
V7APLd32UvocE/1Q7nnN3RsL410w764LyIudQmn6HsYBPh8cWA+hB2B8MF6o
wYr1MnXgObwGOgT8RXgvDnxOSWNbs3+P/gbaNT3WmD4H+ffqppT8vbEwvx3y
j3OwpDVyDCXIPco6yirILowHbdJXV+MPvJ77GXyGlYMl6II16nvU8bjXLNmX
l0I+9LphDGju85gTmye7z/OrYA9KPO9FKe8glyCfYHe+vjqsjRgPrI/Yn1jZ
lfosPIfXYPzwHvYnpQzEfTyO13jWAWvz7+3aceF4cI7lPq858TzHvBP7MXKf
T4ra9D1i8/xqi3lB/p63vSjlHWUUZR3WROhojLed+vvjM/BZVnekHojvpj11
rv/XHNSi79Wu41lKsKl4wco45AXgd0NMJXLovOYJ1DInu7C9jJDrBx2kdPnn
aS9q5R11bMYX8bde6rvxvZCB1Dsg/3AOOBf6AZf67lMo3b/HNQ2/Nf14uMX9
3Oe2FKrXMg7MM6xFuMaZL87aKsgbT9VK8QDz1r2sEUtg61pjTeba6FkP78PD
XpS/HX5H6FrXid92zXOx53Fl5J8H+2fJe8vd9rCnqV3Hs3iYY97BNcAaYexj
h1qZeAy/Hf7G4THOqYY8hrFsTQ93xr2UWOcs95xkDarc8q7rvGhnpf0zdw3z
Ev179rekvMMYx33MasWTTcUroUfC42OQc9DzUP8ZeQG0beJxe98TGNuPVx+K
m5dTsHUD6fvLvTaeQq7cIvp3WI+D9kxvOSO2NiT9fzn9uyXpe9aHZ22atcWt
DJF7b1kCsG2yLkqIp/jyZa/fhbo9bQ8FT2sDYb2W0vP3zsHWemGcIeWfx7Ei
OeZkXGcYvxfkn+ffiTEwrGnA9Xtt22cJ/j27p4EfnL+X9zFeCtVrGQa/z8Pd
474PwuZpE/Q/PEdd8OnJp4+0xLrUc5Ly1+/ln9P4lzVzi+z+//rqfV7kGt8/
B/b8aftcU/fzrO+lxhfz4FLlHVG9lmGa3nd3wb5JnY/XDK556IIebZzA85xc
Eyv/mCeNtcBj/Mta+h7jRajjebRpjiWlr671f/Hm37M14WjPtPKupD3NUsi/
NwxkGvbfOLzKty5qzd87l1j/i+NfPKz5S/ffS62Jpel4XcS63xp+Py97S8o7
xiRxf8c9QM0x3aeiei11c+l2zi5iXYcxi3PlX09hSX0vp160Fvw/xn6/pf6P
uf17NufE5iPUOLZzIX1vHLy2WC8irtXi9dqi3PN6fh5gDRK7P4Y9KFdu2FK+
B/ZOK9WPdypW91uypkEufY96u43tsbmNmvPdKJ6zH9vvDvErkCHo+YoYSeTz
we+3j/V0YiezlN5/b02Yz8R6ybSTrR0DOvec5PrI3MZLiuOL7dqQD3PntKzt
3+P+2/qrmW9+afkI56J6Ld3Al2fz1W3OOg5c63iMvc/xGONecp87OeSty9Y5
lrj259oxoHP6HuJ4HuYme7pG14By3/q75voN1tL34rx9xaqcj/S9NNsQw/kQ
ZB70PPxGqXnCa5HyEfLFk7/0kuq1zE0qBtTWB1lKdsw1J2nXxPnbGI85zrFE
oCPRzjvn77G0f8/KO8VmzoP8e8cwN/3U9Qf6IWQlcsS91PtRPOd0KP9sDAz7
Aywh/6b696xd8/pq+biOkmD8B2tdY0yn+vyW0ve6YjM1ltORvncMfg/oeOfo
bcGX/iYzvdSprrH/Xk5SfQmCzWxG++eUOcm18tLtmkNYuydiXqbYPef076Vy
ERSbOT+q13IM5B1rs5zzfvyeU94/J9L3liEl/9j/duq4n5u/R7sm1nHZNYdh
3a6pds+59D32RrDyjrGZUz9bvEf1WoaB/RJH13pGu5IHORfjJae2VpgDkZJ/
537mOfpebNeUbjCOlN3zVP14qn8vzje0/S/O/UzRj/x7w7C/LPYHsBvGB3Q7
2EU91nJR/t46MFfMyr9z7YunxHPKrjkPGD/mfJ/qQzu3NkTKnnlJvYByonot
w3A/x1wGHJ8+fnh333MfIsVzroftj2PjP0+pETVW36NdjPX1Zdechu1XcH1C
7eZTbSrMv2M+guyZ6yN9bxjMB8Sp3LS5e9DvNpuvu83LS/gbvRrwuG+5Jx/f
mthaYNcm5nyM/Bvje7D65SlrtOjH5q7Y3g597zlF34t7IzAuap6zF2NRPOcw
WKsg92DLTK0tkHdr5quHmK9tU0emz+8IVK8lL3EPQMZ+9r1naE5amSq75vzE
fW0xbn22xzH+vTgXFGMnH2w+VK9lGPYa8rA/YA0Z1IdhrRjE/3XFjyqeMz9x
Xcyh2Jcuuce1k3bN2utr5ibu7dClU/fZOWMZynpiU+KexHSk7w2D3wf+O9Ti
xN/UsWinXyuuJayfb98V5F1bFw3fi79RKya1f1E8px9s/U/rj4vX0tSclF0z
D4z3tPU9471G1xyzctPmyK939qIL+feG+b2tWWbjWOL4ljX8ezwPO2aYl/i7
qZF2e3QO6kPkj7hHTtwbLY41U7xmXuK4S8gxG4MS2zltboSND81z9iKF9L1x
HGTObaNntbWp+dga8ZwYJ+h2+D677rFGDGRfHJurei0+iWtf02aJxzknrX1U
eej5YQ8EOx6wV1p9z9aBoU6vPYo/VK9lmBDX8vwcZEsqHg+yhfbPpc6BNk7I
vbgGmn3u6elF+l5BMG+M9ssm9uEuxAuv1TdVjCfW5XCLOXf72+dkv6Pc5yvS
qF7LML+/brPHtfTJNshbrJMpmcg8BsV0+oXxKox7sYdiV3wS63U89nqg9iiu
kZ1zmFB39u6uyWOI1iD616APLrk+hZzaVu7hNj6HLl2QPSJw7vdvR7h9uw/d
Vbd+bu/t+PSM08PnZ70m02v2j7Xj9Wies6/VXPN9y7GBnW6p9boG8PsgN93G
s7DnOo/7+/tsdk4rEyF/7XOxvsc4VB1+Dus3Sul7tt+fDidHpO+97TCP9D0d
fg/pe+NobInPzX6hPVinBf6zpeNaMFawbw7pe5unzZHcu2nrc+JY6vzEedBe
ZnvNxP69fa8jjV92MAaxf+/LX5rYsTjfQf49v8i/N56uvcMacS0A48RaoPZx
yuQg917ej6XiOX2C6yaO56RexzwG2x9c9Tfzg9+edQOYfx509TaPAWNn/X6s
c3ZKbVaxDsrfm4c19uKQYSFPL9It8Td0TzwX26wVz+kP2/emK3+Pe1HqF6z3
ofy99Wn2tsf5exyDOG8dj2NMqRPGrxf5kZ1zPNSr4BNt8sRvgq9tLf8o8yng
W0T+IPsg3bc1W2Bzjd+jei1+sDbNOGfPvi41J1nrBWso9A3Va1kHK8O66qGm
+q1T94vrtcj26QPpe8OEaz/Ri8jGi6z1GzI+08bX4EANtZSdVfpeflI1+Pv2
/129wYIf19g9leOwLBw39mbAb5+yWY6pz2l77CnPIT/qvzcM5AljkuE/g44H
vQ/XM2tE47m1ruXQ/+F1u4/Lxfh1+RbVjyEfsa5g+zH0XSt9+yiuo7R7Tulv
K9I0vU4Ov/GQnXJMPwb6Bq3tM+js2rdkQXEtwzA/D79TiDV4k33cK1D/gn9t
zf57cWxN37lL7q2PlXeMbR8rn87pvxf7CMV52HjNq6tuW7RlrC8htn1C/sFm
3debQyyD/HvDQMZB7oUee22uHHMJcC1D5/Pcb/3j1QfJvZWwvfHiOM2xnzG6
3/rufU839beZxi7qtz7WHpny7/V+T6uzx7Zv+f7WQ/U5h2HeOq5tyD/YPKnv
4VrFfdgcc59nCpu/l/tcaiaWd/v4hzPk0Cl7Ueon6tcwDeuDO7Ue6rmxYynf
n2Jf1kF2zmHiuBbEciKvmPni921sZe7zTKF4zmWJ5R1zzIdsY32cGmtm189r
60eU7BsEtmH2hTq3f/0Y/14f3LvY+i+MfTr3M0U/iuccB65N2DHxW+E6p5zD
Y+xDm/scUyiecxmYUxfLO6yjU68F5GeeE2vGeE/2Y1eeez+0a8Z9nk4dvzn2
lvTTW/nHWCjl/s2P/HvHNPFc35M63JhYEk9I35uPOD6T/jusS1P0u5gpe9E4
LkN2zzSxXXOKfnyqf6+PlPxTrbr5kb53DPMWEKuC2M0Qz1Lo9SZ9bzqsG23l
nfXfzX1tTN2L2npZ19IZ3kGb8Jz7giX2llb+2dz3K8XuzoLy947B9Qa5t88L
b3ucNzl7ZclA5u/FNT3FMJR3XG9Yb5EyZKnrYC4bDGuAMu/60u2eW2PXvJpg
14yZ6t/r41AD+H3851Wb/3fJ4zkFxbUcA30PvQ8Yp4nfCLIvyMEgA2/Cc1ib
vMtA5e+djs2Ns71lbD+gJb9/zjkZx3uek1dRA6m+F3P9Bmv5EqjHQ95xPK/M
tbn099eE/HvHhOsr+Pfe91zAvg6xm8gLoAwMtVru78NzHnOnlL83njhWBWsL
99Rryom556S1ey6x7nvGyn3aNee2+c7p3xuDlX+sKcP/26WM61SUv5cmta8P
j22baw6/2WNbD5qyz2veOvIuNBfSpGJVuH6sLe/IUr6HWFeovb6nrY2C//Nc
ds2YXLFjlH+4Vm0MqM2lWfucSkF2ztNgLoOVeezJ4FG2qP9emri33VKxmeew
pA3G9jXiGllbzEtcw3Rp/XZJ/94Y+mJgcI3LBnqM4jmPaXJZD3kMuKbwG8HG
Cd0JB/17zN3zum4onvM9se+OesBSsZnngPy9JfeicZ1I5PvVEvNCndbWGlva
n+klVyiOgaFtVz7AY+TfOwbrH+JaEANJfx70upDXYGI6PayRQ3iZk7mJ4+Ho
u/MY47HWnKSNl7rfEr6vtejS8dbQ3df2742hzweoOjDS91LYHnf73rKv21lq
cazNpet7to5Y7PvwOpZr+h7iGPkSdT/bJ489FNbcz3jeW1ofIHsgqQ6o8vdS
QO5B1uHg+uh1jRziUvP3MG5z181ci7VtMNY/hN+McSDee7rbegLv/Hgrj3Fu
/94YuuqgXar+p7iWYyAr8Jucu+dlX1gPNRUuLX+Pukscm1mSrp5rL2r9foz5
9NjXNo7NWcuP14VnfS+mT/5dkv4n/94xqE2GfPVzeixgfUWvIuiKS5zbqRzy
9+q2dbIms5dchCnknpNxfwcvdT5juRz7JHOdm0f/3hCxjk/5hzH3sF9fGuXv
HRNyfB8ewnFKTh77En0O8Xg+flPm79V8Ldv8uzXjGZbCgw2G62L82+ao9xL7
IK+d+WlL0vdiUv6/66v68989zDFvMG8B8eSf254wfXKD9VyQ2wAZg1hQL9dM
zfl71oeX29Y1J7n1PUu8Ll4n4oOW+m58trVn8nu9xeGW4N8bwsZ/coyxz6nV
9ql4zjSUfZB7qE2N3wn6H2yYuM5xsOcs63dCd8Zjnuq21BjPGds0a6s5uXT+
3jlY+cfYF6sDztUjAJ/B/GvaMq+vfNutS9b3YqxubWvTevvNp+Jpb+kNjDVk
GHqrQ76xPgt7NBx6NXze5zp4uz5qmpMA6x7tbrTHeFwLp+B5Tsa1QawOSPsj
Hh9T94ayFOss9jGQn5R1tqaAhxo6fZTo3xuCujbHozbdT/reMJR/jNOkvoff
DXZEzzVbatL32BOIvcRr0vEsJeQW8Xrn+ojxsHqg7d1kj/ix+LX4DHwW9zMl
xOHWtrckNo6Iuh/2JzXECpQwxzzB+e5VzsXUkL+H35m9BKyOl/u8lsKzvpfC
ykDsRSgHKQvtgXGM71PO4b0l5svW4N/rI9b9aqhnrriWuik9fw/zy8as16rj
WUqfk1YODh2l7SNT1KrvWWxuSw12z9L2luI0Su2/Rx+StWuWvscci+ZkWdTo
3+tiZ+yeVwXnOyh/zxdhX/W6Dfv9VFwo40xZRw059n37LrwWY+wpxnQI5o1R
5rH3a+7zWgvJvbK4BH3PwvlJH22J8Z6l21RqA/IJeYC3idz3kF+zed7HlbLn
O+JWuny0pc3J3faQo3BJfcEtijUri9r9eylo92RsdWk+P80xX7AXRDwu1PPY
/w+58dT7cB+5FCmdjvreuv+L88D/kbU1a+yHOpbbtlZC7vMQ4yhtbzkXce8n
yL5S5qtsKr7Anol1X+y4hLqfbzKO/d0ZB9DkFzY6IGqKxp9XSr0WG7PpsRby
mmgvWhaX5N9LwZzavewrQO/THPNFl763fZNffDyul43XsS9uLCtKyN8L9VDv
D/WkS7KXLIH2omVxqfqehXl+pdg8lb/niy59D7IOcg3jFcs9Pof3xLZOPIe6
Mnju/sFfDp+tOUY9L/c55UZyrywu0b+XwtbL9W7zVFyLL7r0Pdor8Xi8l7LP
xXKP+Xsec/hif573PeJaaE6WhfS9A7aOoOc4T+0tfcF4zpS+d9vqeymdrtEF
b470Jco9bz34bK5C6Tmwc6M5WRaX7t+LYawLcxw81jVT/p4vhvW9tNxDPGfq
OcaAso7oWv+PPmxOOmQe/s59Tp6Q76EspO8dA9mHue21l59sKvmBTEJMJm7Z
xy/ejwzLvdtkfrq3eE7GPjMn3eOcyI30vbKQf+8Y7m1ZY9BbTpLiOfND2cTY
k4e7Y7l30ANvj/L6MO8Qz3l/f5+M5/SUv2djnhHP4mkueMFj/z3RjfS9NJR9
7CnlqZeU9pb5gUzjnpE9/WL/Xoh7NHl6vH5wLTGvD8/Hn+1pTjJHj/U2vcwB
b2hOloX8e93YeG1POUrS93zAupzQ95rYy+NxYfwKZNzjm+4HOcf7uO2q1+Ih
niW+/iXzupHvoSw87S09YmtSeMlvkA/dD43vq8lPj/W9/fOv2/3zrNMJmdfV
6535e3jPev+T91ifnmI3h5G+Vxby7w1j8xs8+PS1t/QFZQTGJGUTYG0y9n3H
+sh+76nP89B/z/bQ83DNe0d70bKQvjcM1zXGeOauQ6i9pT/G9OEc26szd/89
a+OQT28cmpNlIf/eODz5+pS/VzeM54xrm62Bp+u8JGSDKQvpe+Pxsg/WHKub
XHNSPr3zkb5XFvLvnQZ9fdcZ8/oUz1k3ueI5UZuIOQvy6Z2G8vfKQvreacT1
mnLk9WlvWTc55iRkHmtveolbLgnNybKQf+90bE16rBFr1/CUvlc3a8s97uWu
zV5ure+uBcVzloX0vfNg36Ic9k7NsbrBXjTUMFspfw/7NlzLqkN2PtL3ykL+
vfOx9s41YwAU11I3h/y95X18Nn5T9s3z0ZwsC+l752PtnWvGd2pvWTfIX1gj
bx3XK+wW14rfnIzmZFnIvzeNHPGdyt+rG4wt7JxL5+8xfhP7Ntk3pyG5VxbS
96Zhe1BjDVkjJkA2lbpZo/+ejWXBvs1jf+WSUKxZWci/Nx2sIYgLWGvfrDlW
N2vk79mas+qdPh3k7ynWrByk780D63diLVm6fqdsKnWz9Jxkrt61YllmQ3vR
spB/bx7iuLgl7UaaY3WzZL911iJTrt68aC9aFtL35mOtnD7l79UN++89Pj7O
Psa5YpBrR3KvLOTfmxfm9C1Zy15xLXWzVP+9OJZFut58aE6WhfS9ebExLkvV
9tXesm6g7zX99+a1dULOMW8B1+acn33paE6Whfx782P9J0vkAit/r24wtr/+
+uus+Xs23wb7Mtk350W+h7KQvjc/1oeyRF6DbCp1s8ScxP6LeQuqyzI/0vfK
Qv69ZYBNaam8BsVz1s3c+Xuqwbk86r9XFtL3lsGuNdD95sxr0N6ybuaek8xR
Vw3O5dCcLAv595aDOt/11bw6n/S9uplT38M1iH3XtWpwLop8D2UhfW85Yp1v
rrhx+dDrhnWpp+bvKUd9PaTvlYX8e8sS10GcY7+tvWXdzJW/B9v6kvFV4oD2
omUhfW95bL+GOfx82lvWzSF/7/x5aXU95agvj+ZkWci/tzzsczaXj0X5e/lo
5Mn38PvbA49hv2/vx+/ZbJ7Dged//Nh2jh/z96aMsXLU10U2mLKQvrcOrF/G
vIYpn6U5lo+Q//0m37D3gGzCWOC2+ftm/zd9c5Bv9CXAZ8fnP/f0rZk6J209
MuWor4P0vbKQf28ddtvI1zLB7qQ5lhfKJcgxyK/n5+fd81+edk9PL+EW9zGv
gp73ug1yjnEqm83X3ePDQ3js/uEuqfdN7ccQ10ef9r8VY1D+XllI31uPuXr0
Sd/LC2QV7JWQZdyD4DHYszGmkDu45esg4758+RLu0+YJ+Yj3b542Sbl37pxk
DLF6662L9qJlIf/eetg1aUpeg/L38oOxg/4GvYy9tmMdHnLuvtXt7HjhOmCu
AvTFWDadm7/HWBblqK+P4jnLQvreutjaGefmNWiO5Wevz73pa/Tt0bbJ10Cv
g1zDc7E9E89hHG8Sz1Emwg56Sg7fzuSoq7feukjfKwv599YH8XW0Q52j80nf
8wNtmYxvgf2Seh9lG464t4J9LiX3kL+H3rNj5yZjWT5++qG8hQzI91AW0vfW
h3EHWKOCznfiGqW9pS8wno3s+xxkH3XxPtlGXRCvTz0HuXdKDl+ctyBdb100
J8tC/r082DjzU/fmTf6e9paeCL7bNtYF8gyyC7Gct62dMx7jgw309sgPRztn
kw84PM5xLMucNdDFOCT3ykL6Xh6wVmGNgp/vVF+M5phPbBwLZOCQvtfn3ztl
TjKWRXkL+ZDvoSzk38sH+zWcGuOiOZYXyCzEm8CXZ2UWxhOPwUYJ+Rfk4P19
kG3Q/fi6MfGcY/P3FMvig9ueOgTCH9L38hH3Ax1r75S+lxerq9lxgJxjXh7k
Yrj/3Ng+bbwL5WPI33vTC7s+f+g8FMviB+1Fy0L+vbwwHgFr19janYodywvk
GeQa4i1ZbwwHHmMdMqyBrNfC+BXIOrwOuiDWyZRvD4zdi1r7pmJZ8qK9aFlI
38sP9uyn2DuVv5cXyjPk17EGGeQYbqEDBt2uHUPW86TsO7z+9ijfj4zJW2eP
IdVl8YHkXlnIv5cfrGHsVTQmvlNzLD+sjbJ5aWtytvU5MS5xPCVrk2Gu4XWo
0Ul9MPXZ9P3htV3fzfhN2Td9IBtMWUjf88Fu+75XUd9aJrnnB8ggW5NzzGuH
XtfXdzbojy/v7QNT/w9iOpqTZSH/nh/or4GvD2tbVx6W8vfq5iD3bhJ648Gn
px7qfpDvoSyk7/khtZdPyT7tLesGNlHYOeNa1pB57C+knAVfaE6Whfx7vrC5
DZB9Kb1PMdN1E8e1MF+Bte2G7OBifdR/ryyk7/lja3KRKfvs3l57y7rhnKTf
EHIO18HU/lViOTQny0L+PZ9Q9tHmib/Zq1axY3WD9fPTp7sw5vTl4RqQnucX
zcmykL7nF+Y32LWvkYV32ltWDPx7H69u9nkKGPNzezWKdZC+Vxby7/kG+Q3Q
87D2MaYBa6LmWL0wnvPTpy9h7KXj+UfxnGUhfa8MGM8H+RfXhRR1wf57mpfl
oFizspB/rywa/57mWM305a0Ln8jOWRbS98pDc6xubN/Z3OcixqE5WRby75WH
YsfqZkxdauELzcmy0BwrD/nQ64b6HvoV6SjjYA/h3OehY9yBsdIcK+uIa1iJ
ukB/P/Sj3TxtQt9a/a2/9bf+1t+b0Ms79/oshBBCCCGEEEIIIYQQQgghhBBC
CCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBC
CCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEKIvPw/3szzqQ==

    "], {{0, 0}, {446, 257}}, {0, 255},
    ColorFunction->RGBColor]},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0., 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->{446, 257},
  Method->{
   "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0., 120.}, {-0.02425749, 0.023092976}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.778876116501263*^9, 3.778876206426923*^9}},
 CellLabel->"Out[57]=",ImageCache->GraphicsData["CompressedBitmap", "\<\
eJzlXH2wVdV1P7778R7yIWoUBQxElC8xWkEEBVFEQAPKt4KCIvp8aBRUEkMN
tXSSSVLTP/ijHTMtSdupnUknSafNaFPb2CaZTJwSBzPOaCdN2loTSdRWrY0x
Gnv7W+u31z57n7Pu5SU+m86Uedy5d529vj/22vvsc1Zv3zN0yx3b9+zcsX3q
iru37x7aueOeqct33Q1Q45iiOOYx/D/mlALfO0XB//Lv7/C/KKbJZ2NwcFBh
Hb30mXfpil14t+iP8JVWvPKzl55++2ev6vVPKs4bPz4MgHwdU44fiOOf++Pz
nv2DM57/wvL/+Oa+//r+lwW0X0a0f/76C688ceDHD1/3b587CyNefepzYzPr
FA0MBxJQiz4MKBovPbY7cBIq++RL/+vPfY0c8PnCV2565ckH33z5+0VJKdWp
oZqA779//V5g/OChhZBdad2nV/7752+AH6+AbnG8S6UlH82f/Ouj5Bt02msU
jvz5akBf/JudYqUTXAptpQA5oBqU/+nzjwv4IzoKOtAYxXtc3H7Ffeu1H0BG
CABlBfxhHUXhXzn0QHGSizuguNAZTH/4+UtARMB7dBRcAVwYpjjZxR2lv6E1
RsFnarV7lB7EBwxyQ3kf99iEAxykuHcpLmwEPfCHLxO64zZB+kd/uQFiB313
6yjEAyiKp05xcUcrLlCACLeAiIDv1FFwG3BhseLULOo0hhuwf7CkYNxh/oLB
YTfQOdXlp1HXYEQjTRT3g4mksFQxsQcmHAJMs+7tCqN1Rc5JLuY42vbQAxgF
7yjmbQqDxpAXUvfCFMvSA8E6Q4n+EoWTXdzjEhvCr8r1VrMSiNHaPu74xEoi
nQAHFfby4x8LVjqtByYsi1GwqGLeYjBQQ9IV71VM9fxxhw8O6r/9jxwhhcMH
7WvlEn4WTa05cWzRV+Gu1aABHuBu3r25AiN3jdm2ECU1+6L1Z1Qd3ukceWT/
4MHDIbtrPKmxaCfAHQkMFiumKM+mfI458sjB/fHfQaENyonO4EEp2nU49RXD
yC/WOSn74xPfSK4Jyk0KY0qKD6ckeoOyEqBaGUcP3jD+HeqQaK/VswH6zF/l
vL1T1iHRfmrOeZi6klOUiDNDwvnETj2rbuyErEJ8i84p5y6+HnB8rRJEW/fi
H3KzrFzbOmXWSW6+r4z1ZhrQOkP116Jfgqzo0yiPwBpnnXWS/Bfg1kQaVgpy
rubne2rjBHx9heLpLq7OWI3XvvvFhO91CT1Mlfji456ceAaDFHdLwlU8OK0H
JqPJuG5WGGcmibozXMwJxjOpYtd2ykwRniWmIBIDGRQiVzCuSSIc2VSc6fLS
2U2qTMJrU8JLKk8vzLJWCHBjwlNqynQX81SH5waDBZ69MHOe6xOY8JzhYk5M
eFqFXVeB9cIsdRLg2oocM13MSRU7CnBNJ69uvTBL3wnw6iSehOesLAImV2JS
MK6qxO4slxcxYz1QzNWV2J3tYp6W8PzPp/9UMT/QCXmFZoZsfdz3JrJZDFyp
MPZyosNZPTDzWL+iYq85LuYUJwZWKow9lMB6YbLbsxhYkcSA9LZnu5hTkxgw
vyw33UMM9MAMXSwrlICXdcpaJv3u+11craEN+CTpii9Teuyh2GmWuIJ6eiUy
BWepwtj7y/x8jsvt9MQSZp1LFYb1QICd62JOS6xj8/8Si6BooB64WQUX8MVJ
TErk/pqLq9XTeszQiS82+6Cz5bzo456ZRIyt8RYpDOuUEFnndccMHiglvjD1
KPrduS7udEfihTWJfdwZjsQLKhLP645ZxgxXyJ35iY1F4vOzONKKFvJT8kIw
zrdoCPk53+U2K4kG2EMx55qXYTCoiWVMD9xsnIDVDw0uyYXiBS6uVqiwliv9
cm7iF9FjgYt7VjLK1g2aJU2uG0jPx9VaE7LLOgStBZL1MDfX4Au744a1Kxc2
AiZFrH9CtdHYYhc3dpgrltC1xUaaexIJ57OTmICEUFPAsxNLS0xcpJx7drAO
vO8ovLVilbsMEELAjDjOG1JrNBtHbNWSSyOrFlqAs2PZQWuGNllz4QFAFyU2
GP7K5Wg2YFwy+5C/GjWsLFzPI+IQPotz3p7Go+tw4frI4e68tSKGDLXcnmbR
zh0MZN7FR/f9aG+lGgPR5Z3msvF+X8KbsbikjPj6uiWDWJwH1Wv85jr8ptT4
XdLxsnOeg3taDfdSF1drZZO4iOYQXdqFNrkjSeylLrZWxyZzAVEYKrb26k3M
HnF37jIXW+tjk7GFyA5V9OQadJmLrVWuiVoILtwAFbCuN2X3kiqhXsnu5eWR
ghDgTAYEqAZkkBBM3aGQPVXWOOBLF7vc5a2VrgXREP7lWLk0znIDIrEdWulS
0IrVgmxchICO7Pbe3wl1FgTwByO0pLxJb4yfMuI3E4tDfFy4wqW/2KwIBanj
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
f1erfPy/esPuiF0pjvkffDovUA==\
\>"],ExpressionUUID->"58d2f3b1-b5be-46e0-a5d6-655f4db8eaed"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Rasterize", "@", "f1", " "}]], "Input",
 CellChangeTimes->{{3.778876175234751*^9, 3.7788761777932987`*^9}},
 CellLabel->"In[53]:=",ExpressionUUID->"e712b727-1258-4054-815a-04f8c5dc688d"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
s6DkWUPUEpQFrXK5mtntXBiubpcP1hDlSdy8I1eWl4dioYaIGr4NEedzqhj6
4BEihRhhNBJB7tN6s9Gh9tzwS/M5SQNZfrupWy/dwlUTvcn0ZtjIYi1h5YTS
ULdu9/xdXI++7kSsOVWE6PtRZSXlR47qa9T/5m4JtkCq26qDvZKase2InV5J
FdQNV9vqc/Er98wAypWsDP009oTPGpxiX7YFX8kbaD9nnBEimXnFcsofKIto
3dn4x/lykQeoJArf2VhbTsrOItboPabbzjaUAbbsz7nUlbuxe4+rJvl90+Ve
aFql7ScpErHmLLSYQ2wIxyg94ak5C1h1ZGuCbpZO3xiuV7XGj3zXthquTk/4
5omjnctdfRau85PBowJx+zkPh4NIFDR/s0ffEaK2b2bNfYhSrD7s2ou4RVPE
ZIExd2S9dtmHqOXah/sQ1RJxf876DYLv3+/7bhhbB3Jfuzaz604NLZdIyFRc
wt6XX933lL9j70ubJIb5iPrzKzrNKaOiHNduQP72Ts+/G8bWC/utpzaz25Vf
bzat3fK5Hc2iXLlfK/Zbv82dk/g1t9867WdkNUQyKuwGwTdBsU++cHIollxD
VLCZDdsM3aSjWz7mlbutAJLZoZOubrf3ZSVJYf2+AElfS3Q1RMoYtrm/0Lzo
fbMJ47pZpOZUt5W7L3Dqgrv/gnef6BN35R5LnXtuhd7V9dSH4yizn4ttIBBf
bP2qyyFfXl5EfKLGOf/zBDtgYluiYD7ehcXWs7TAUi9NL+4drmpVi3Sdua/c
bT/8u/+W7n7O2veCgi+b/4mksj5eeQZE5ucEKOoR25g2dnu1vT7M9pS6UnKA
fPhaFpPPmQWA5IYy+6f3F4/zCGhmxny+K3e7QvdZJvcdrEzsPnqLsp/xac4U
VdEjd5koT7FXaAgvtnS725jtL8OG16OvIbL15qtUDvWlM138hmvi7s0xt2z5
pNQX7s437+HnbMC07rf6UwZA3CGkiGuINKbLh06xLhxBiTifE4lG1uWVbvA9
yF/aR0Bzfvuz26IebI7smVM3ZIJcgg3jkMLkhOBncJG7Eq/mnBYxdplL3KC5
PJBbZuhE2Z6Ga2JLPicfHc5yKfsKxPTn56wj+XL2dJ7DRb6HKP2c4PPzKoNE
jsDlQpXEFVvPVo5ZACiI96NLPmczCYQcVpfTFJ9uy6Nyw727CVWUkUthKrda
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
EEIIIYQQQsjd/C+VQxh3
    "], {{0, 257}, {446, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSizeRaw->{446, 257},
  PlotRange->{{0, 446}, {0, 257}}]], "Output",
 CellChangeTimes->{{3.778876171854662*^9, 3.7788761784988675`*^9}},
 CellLabel->"Out[53]=",ExpressionUUID->"aafc6116-eddf-41ae-9d7e-bf6b0a0801a0"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"3", 
    RowBox[{"n", "^", "2"}]}], "+", 
   RowBox[{"3", "n"}], "+", "1"}], "/.", 
  RowBox[{"n", "\[Rule]", 
   RowBox[{"Range", "[", 
    RowBox[{"0", ",", "3"}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.779026398653099*^9, 3.779026422555473*^9}},
 CellLabel->"In[60]:=",ExpressionUUID->"11c8eea6-df1a-4435-bc69-ea2dfad89aad"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "7", ",", "19", ",", "37"}], "}"}]], "Output",
 CellChangeTimes->{{3.7790264150647297`*^9, 3.7790264234629545`*^9}},
 CellLabel->"Out[60]=",ExpressionUUID->"9adce64d-4e8a-472f-b252-049ea96ac78d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"3", 
    RowBox[{"n", "^", "2"}]}], "+", 
   RowBox[{"3", "n"}], "+", "1", "-", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"3", 
       RowBox[{"n", "^", "2"}]}], "+", 
      RowBox[{"3", "n"}], "+", "1"}], "/.", 
     RowBox[{"n", "\[Rule]", 
      RowBox[{"n", "-", "1"}]}]}], ")"}]}], "//", "Simplify"}]], "Input",
 CellChangeTimes->{{3.779026479148144*^9, 3.779026493478961*^9}},
 CellLabel->"In[62]:=",ExpressionUUID->"39b59e1b-a66b-479c-a037-02be2bed18cf"],

Cell[BoxData[
 RowBox[{"6", " ", "n"}]], "Output",
 CellChangeTimes->{{3.7790264912052593`*^9, 3.7790264942155595`*^9}},
 CellLabel->"Out[62]=",ExpressionUUID->"304b8e9b-5226-405c-b87b-ee285557745b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"RotationMatrix", "[", "0", "]"}], ".", 
  RowBox[{"{", 
   RowBox[{"0", ",", "1"}], "}"}]}]], "Input",
 CellChangeTimes->{{3.779026605566995*^9, 3.779026628046155*^9}, {
  3.779027511313871*^9, 3.7790275236696568`*^9}, {3.7790276083103504`*^9, 
  3.779027608476238*^9}},
 CellLabel->"In[88]:=",ExpressionUUID->"194a153e-626a-4c63-a69e-44ebc52419ff"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0", ",", "1"}], "}"}]], "Output",
 CellChangeTimes->{{3.7790266206883364`*^9, 3.779026628364971*^9}, {
   3.7790275122923317`*^9, 3.77902752418338*^9}, 3.779027609019927*^9},
 CellLabel->"Out[88]=",ExpressionUUID->"3aa2a2a4-877b-4586-a87e-314d8d8fc5a1"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"shell", "[", 
   RowBox[{"n_", ",", "a_"}], "]"}], ":=", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"a1", "=", 
       RowBox[{"a", ".", 
        RowBox[{"{", 
         RowBox[{
          FractionBox[
           SqrtBox["3"], "2"], ",", 
          FractionBox["1", "2"]}], "}"}]}]}], ",", 
      RowBox[{"a2", "=", 
       RowBox[{"a", ".", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", 
           FractionBox[
            SqrtBox["3"], "2"]}], ",", 
          FractionBox["1", "2"]}], "}"}]}]}], ",", "list"}], "}"}], ",", 
    RowBox[{
     RowBox[{"list", "=", 
      RowBox[{"Flatten", "[", 
       RowBox[{
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"i", ",", "j"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", 
            RowBox[{"-", "n"}], ",", "n"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"j", ",", 
            RowBox[{"Max", "[", 
             RowBox[{
              RowBox[{"-", "n"}], ",", 
              RowBox[{"i", "-", "n"}]}], "]"}], ",", 
            RowBox[{"Min", "[", 
             RowBox[{"n", ",", 
              RowBox[{"i", "+", "n"}]}], "]"}]}], "}"}]}], "]"}], ",", "1"}], 
       "]"}]}], ";", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"Transpose", "[", 
         RowBox[{"{", 
          RowBox[{"a1", ",", "a2"}], "}"}], "]"}], ".", "#"}], "&"}], "/@", 
      "list"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7790265584618826`*^9, 3.7790266336789193`*^9}, {
  3.779026811683295*^9, 3.7790268614459047`*^9}, {3.779026908319149*^9, 
  3.7790269547676287`*^9}, {3.779027059737698*^9, 3.779027082079921*^9}, {
  3.7790271287063274`*^9, 3.7790271335595317`*^9}, {3.779027399694598*^9, 
  3.7790274112979918`*^9}, {3.7790275613891425`*^9, 3.7790275685940065`*^9}, {
  3.779030713257676*^9, 3.77903073363407*^9}},
 CellLabel->
  "In[153]:=",ExpressionUUID->"b3bdcf02-80bd-4b5f-bf05-41114d3fa43b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"shell", "[", 
  RowBox[{"1", ",", 
   RowBox[{"RotationMatrix", "[", "0", "]"}]}], "]"}]], "Input",
 CellLabel->
  "In[100]:=",ExpressionUUID->"b896db03-5b14-4226-b0d1-879e0fe130bb"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", 
      FractionBox[
       SqrtBox["3"], "2"]}], ",", 
     RowBox[{"-", 
      FractionBox["1", "2"]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     RowBox[{"-", "1"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", 
      FractionBox[
       SqrtBox["3"], "2"]}], ",", 
     FractionBox["1", "2"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox[
      SqrtBox["3"], "2"], ",", 
     RowBox[{"-", 
      FractionBox["1", "2"]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox[
      SqrtBox["3"], "2"], ",", 
     FractionBox["1", "2"]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.779027857831895*^9},
 CellLabel->
  "Out[100]=",ExpressionUUID->"7e55ecf2-f154-47ef-9852-830f2362e7f7"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Flatten", "[", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{
     RowBox[{"f", "[", 
      RowBox[{"#1", ",", "#1"}], "]"}], "&"}], "/@", 
    RowBox[{"{", 
     RowBox[{"a", ",", "b", ",", "c"}], "}"}]}], ")"}], "]"}]], "Input",
 CellChangeTimes->{{3.779027962547095*^9, 3.7790280347748847`*^9}},
 CellLabel->
  "In[106]:=",ExpressionUUID->"ebc46e3b-57b7-45c3-a4a7-c044b7669056"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"f", "[", 
    RowBox[{"a", ",", "a"}], "]"}], ",", 
   RowBox[{"f", "[", 
    RowBox[{"b", ",", "b"}], "]"}], ",", 
   RowBox[{"f", "[", 
    RowBox[{"c", ",", "c"}], "]"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.7790279944109197`*^9, 3.77902803539952*^9}},
 CellLabel->
  "Out[106]=",ExpressionUUID->"d6ae7baa-a5b8-4380-a31f-b8493b70ae08"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Flatten", "[", 
  RowBox[{
   RowBox[{"Outer", "[", 
    RowBox[{"Plus", ",", 
     RowBox[{"shell", "[", 
      RowBox[{"2", ",", 
       RowBox[{
        RowBox[{"1", "/", "4"}], 
        RowBox[{"RotationMatrix", "[", 
         RowBox[{"\[Pi]", "/", "6"}], "]"}]}]}], "]"}], ",", 
     RowBox[{"shell", "[", 
      RowBox[{"0", ",", 
       RowBox[{"RotationMatrix", "[", "0", "]"}]}], "]"}], ",", "1"}], "]"}], 
   ",", "1"}], "]"}]], "Input",
 CellChangeTimes->{{3.779028056841281*^9, 3.779028058926097*^9}, {
  3.7790282503428144`*^9, 3.7790282851699057`*^9}, {3.7790283382246175`*^9, 
  3.7790283543904114`*^9}, {3.7790284117086897`*^9, 3.7790284142712*^9}, {
  3.779028446602768*^9, 3.7790284610614862`*^9}},
 CellLabel->
  "In[118]:=",ExpressionUUID->"8a129996-e148-48cc-95e3-39b7b771ed95"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", 
      FractionBox["1", "4"]}], ",", 
     RowBox[{"-", 
      FractionBox[
       SqrtBox["3"], "4"]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     RowBox[{"-", 
      FractionBox[
       SqrtBox["3"], "4"]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "4"], ",", 
     RowBox[{"-", 
      FractionBox[
       SqrtBox["3"], "4"]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", 
      FractionBox["3", "8"]}], ",", 
     RowBox[{"-", 
      FractionBox[
       SqrtBox["3"], "8"]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", 
      FractionBox["1", "8"]}], ",", 
     RowBox[{"-", 
      FractionBox[
       SqrtBox["3"], "8"]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "8"], ",", 
     RowBox[{"-", 
      FractionBox[
       SqrtBox["3"], "8"]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["3", "8"], ",", 
     RowBox[{"-", 
      FractionBox[
       SqrtBox["3"], "8"]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", 
      FractionBox["1", "2"]}], ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", 
      FractionBox["1", "4"]}], ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "4"], ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "2"], ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", 
      FractionBox["3", "8"]}], ",", 
     FractionBox[
      SqrtBox["3"], "8"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", 
      FractionBox["1", "8"]}], ",", 
     FractionBox[
      SqrtBox["3"], "8"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "8"], ",", 
     FractionBox[
      SqrtBox["3"], "8"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["3", "8"], ",", 
     FractionBox[
      SqrtBox["3"], "8"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", 
      FractionBox["1", "4"]}], ",", 
     FractionBox[
      SqrtBox["3"], "4"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     FractionBox[
      SqrtBox["3"], "4"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "4"], ",", 
     FractionBox[
      SqrtBox["3"], "4"]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.779028270713176*^9, {3.7790283386793737`*^9, 3.7790283549590597`*^9}, 
   3.779028414835876*^9, {3.7790284503595943`*^9, 3.7790284614602566`*^9}},
 CellLabel->
  "Out[118]=",ExpressionUUID->"9e39d9a1-4fc0-4cee-a008-e6bbe3bb6f1c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"shell", "[", 
  RowBox[{"2", ",", 
   RowBox[{
    RowBox[{"1", "/", "4"}], 
    RowBox[{"RotationMatrix", "[", 
     RowBox[{"\[Pi]", "/", "6"}], "]"}]}]}], "]"}]], "Input",
 CellLabel->
  "In[114]:=",ExpressionUUID->"0968a5ab-e0ad-4b6b-a265-316b320bd3c8"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", 
      FractionBox["1", "4"]}], ",", 
     RowBox[{"-", 
      FractionBox[
       SqrtBox["3"], "4"]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     RowBox[{"-", 
      FractionBox[
       SqrtBox["3"], "4"]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "4"], ",", 
     RowBox[{"-", 
      FractionBox[
       SqrtBox["3"], "4"]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", 
      FractionBox["3", "8"]}], ",", 
     RowBox[{"-", 
      FractionBox[
       SqrtBox["3"], "8"]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", 
      FractionBox["1", "8"]}], ",", 
     RowBox[{"-", 
      FractionBox[
       SqrtBox["3"], "8"]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "8"], ",", 
     RowBox[{"-", 
      FractionBox[
       SqrtBox["3"], "8"]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["3", "8"], ",", 
     RowBox[{"-", 
      FractionBox[
       SqrtBox["3"], "8"]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", 
      FractionBox["1", "2"]}], ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", 
      FractionBox["1", "4"]}], ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "4"], ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "2"], ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", 
      FractionBox["3", "8"]}], ",", 
     FractionBox[
      SqrtBox["3"], "8"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", 
      FractionBox["1", "8"]}], ",", 
     FractionBox[
      SqrtBox["3"], "8"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "8"], ",", 
     FractionBox[
      SqrtBox["3"], "8"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["3", "8"], ",", 
     FractionBox[
      SqrtBox["3"], "8"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", 
      FractionBox["1", "4"]}], ",", 
     FractionBox[
      SqrtBox["3"], "4"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     FractionBox[
      SqrtBox["3"], "4"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "4"], ",", 
     FractionBox[
      SqrtBox["3"], "4"]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.779028368664235*^9},
 CellLabel->
  "Out[114]=",ExpressionUUID->"43292526-df98-46fb-9e23-265391f5fd5e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  FractionBox["1", 
   SqrtBox["3"]], "*", 
  RowBox[{
   RowBox[{"RotationMatrix", "[", 
    RowBox[{"\[Pi]", "/", "6"}], "]"}], ".", 
   RowBox[{"{", 
    RowBox[{"0", ",", "1"}], "}"}]}]}]], "Input",
 CellChangeTimes->{{3.779029086592361*^9, 3.779029090118369*^9}, {
  3.7790291993120265`*^9, 3.779029234088154*^9}},
 CellLabel->
  "In[136]:=",ExpressionUUID->"053fe5f4-d9a4-4c2f-a289-7707fd90712f"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", 
    FractionBox["1", 
     RowBox[{"2", " ", 
      SqrtBox["3"]}]]}], ",", 
   FractionBox["1", "2"]}], "}"}]], "Output",
 CellChangeTimes->{
  3.7790283789943557`*^9, 3.779029090396209*^9, {3.7790292013838253`*^9, 
   3.779029234386983*^9}},
 CellLabel->
  "Out[136]=",ExpressionUUID->"e77a42bb-3463-46c9-954c-033514ddf05d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"RotationMatrix", "[", 
   RowBox[{"\[Pi]", "/", "6"}], "]"}], ".", 
  RowBox[{"{", 
   RowBox[{"0", ",", "1"}], "}"}]}]], "Input",
 CellLabel->
  "In[132]:=",ExpressionUUID->"ea169560-df39-4487-8853-ecc4f70078d2"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", 
    FractionBox["1", "2"]}], ",", 
   FractionBox[
    SqrtBox["3"], "2"]}], "}"}]], "Output",
 CellChangeTimes->{3.779029130591259*^9},
 CellLabel->
  "Out[132]=",ExpressionUUID->"e5bfbb2e-cfe6-4e95-bdd2-69e319d19166"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"RotationMatrix", "[", 
    RowBox[{"\[Pi]", "/", "6"}], "]"}], ".", 
   RowBox[{"{", 
    RowBox[{"1", ",", "0"}], "}"}]}], "*", 
  SqrtBox["3"]}]], "Input",
 CellChangeTimes->{{3.7790346538727303`*^9, 3.7790347046457167`*^9}, {
  3.7790347581811543`*^9, 3.7790348155104227`*^9}, {3.7790348477640266`*^9, 
  3.779034848053842*^9}},
 CellLabel->
  "In[162]:=",ExpressionUUID->"ec1eddcc-658e-41b7-8ecc-2a657addb077"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   FractionBox["3", "2"], ",", 
   FractionBox[
    SqrtBox["3"], "2"]}], "}"}]], "Output",
 CellChangeTimes->{
  3.7790319213678207`*^9, 3.779034681506925*^9, {3.7790348103923426`*^9, 
   3.779034815936178*^9}, 3.7790348485545564`*^9},
 CellLabel->
  "Out[162]=",ExpressionUUID->"56fc58bc-dc84-4826-a42c-5bfb61004d73"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Graphics", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"Black", ",", 
      RowBox[{"Point", "/@", 
       RowBox[{"shell", "[", 
        RowBox[{"2", ",", 
         RowBox[{"RotationMatrix", "[", "0", "]"}]}], "]"}]}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"Red", ",", 
      RowBox[{"Point", "/@", 
       RowBox[{"shell", "[", 
        RowBox[{"2", ",", 
         RowBox[{
          FractionBox["1", "2"], "*", 
          FractionBox["1", 
           SqrtBox["3"]], "*", 
          RowBox[{"RotationMatrix", "[", 
           RowBox[{"\[Pi]", "/", "6"}], "]"}]}]}], "]"}]}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"Blue", ",", 
      RowBox[{"Point", "/@", 
       RowBox[{"Flatten", "[", 
        RowBox[{
         RowBox[{"Outer", "[", 
          RowBox[{"Plus", ",", 
           RowBox[{"shell", "[", 
            RowBox[{"2", ",", 
             RowBox[{
              FractionBox["1", "2"], "*", 
              FractionBox["1", 
               SqrtBox["3"]], 
              RowBox[{"RotationMatrix", "[", 
               RowBox[{"\[Pi]", "/", "6"}], "]"}]}]}], "]"}], ",", 
           RowBox[{"shell", "[", 
            RowBox[{"2", ",", 
             RowBox[{"RotationMatrix", "[", "0", "]"}]}], "]"}], ",", "1"}], 
          "]"}], ",", "1"}], "]"}]}]}], "}"}]}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.7790268655605545`*^9, 3.7790268801641994`*^9}, {
   3.7790271396090765`*^9, 3.7790271668605194`*^9}, {3.7790274138495398`*^9, 
   3.7790274774931784`*^9}, {3.779027571742211*^9, 3.7790275918067803`*^9}, {
   3.779027622709138*^9, 3.779027680101347*^9}, {3.7790277550205746`*^9, 
   3.779027825775206*^9}, {3.779028289323533*^9, 3.779028316816839*^9}, {
   3.7790284684412994`*^9, 3.7790285192162848`*^9}, 3.7790285495469675`*^9, {
   3.7790289078793907`*^9, 3.7790289313070426`*^9}, {3.779029245097887*^9, 
   3.7790292680977373`*^9}, {3.7790307439411774`*^9, 3.7790307518176603`*^9}},
 CellLabel->
  "In[155]:=",ExpressionUUID->"66a40839-aedd-4db9-bf2c-11943036ef81"],

Cell[BoxData[
 GraphicsBox[{
   {GrayLevel[0], PointBox[{0, -2}], 
    PointBox[NCache[{
      Rational[-1, 2] 3^Rational[1, 2], 
       Rational[-3, 2]}, {-0.8660254037844386, -1.5}]], 
    PointBox[NCache[{-3^Rational[1, 2], -1}, {-1.7320508075688772`, -1}]], 
    PointBox[NCache[{Rational[1, 2] 3^Rational[1, 2], Rational[-3, 2]}, {
      0.8660254037844386, -1.5}]], PointBox[{0, -1}], 
    PointBox[NCache[{
      Rational[-1, 2] 3^Rational[1, 2], 
       Rational[-1, 2]}, {-0.8660254037844386, -0.5}]], 
    PointBox[NCache[{-3^Rational[1, 2], 0}, {-1.7320508075688772`, 0}]], 
    PointBox[NCache[{3^Rational[1, 2], -1}, {1.7320508075688772`, -1}]], 
    PointBox[NCache[{Rational[1, 2] 3^Rational[1, 2], Rational[-1, 2]}, {
      0.8660254037844386, -0.5}]], PointBox[{0, 0}], 
    PointBox[NCache[{
      Rational[-1, 2] 3^Rational[1, 2], Rational[1, 2]}, {-0.8660254037844386,
       0.5}]], PointBox[
     NCache[{-3^Rational[1, 2], 1}, {-1.7320508075688772`, 1}]], 
    PointBox[NCache[{3^Rational[1, 2], 0}, {1.7320508075688772`, 0}]], 
    PointBox[NCache[{Rational[1, 2] 3^Rational[1, 2], Rational[1, 2]}, {
      0.8660254037844386, 0.5}]], PointBox[{0, 1}], 
    PointBox[NCache[{
      Rational[-1, 2] 3^Rational[1, 2], Rational[3, 2]}, {-0.8660254037844386,
       1.5}]], PointBox[
     NCache[{3^Rational[1, 2], 1}, {1.7320508075688772`, 1}]], 
    PointBox[NCache[{Rational[1, 2] 3^Rational[1, 2], Rational[3, 2]}, {
      0.8660254037844386, 1.5}]], PointBox[{0, 2}]}, 
   {RGBColor[1, 0, 0], 
    PointBox[NCache[{(-2) (Rational[-1, 8] 3^Rational[-1, 2] + 
         Rational[-1, 8] 3^Rational[1, 2]) - 
       2 (Rational[-1, 8] 3^Rational[-1, 2] + 
        Rational[1, 8] 3^Rational[1, 2]), Rational[-1, 2]}, {
      0.28867513459481287`, -0.5}]], 
    PointBox[NCache[{
      Rational[1, 8] 3^Rational[-1, 2] + Rational[1, 8] 3^Rational[1, 2] - 
       2 (Rational[-1, 8] 3^Rational[-1, 2] + 
        Rational[1, 8] 3^Rational[1, 2]), Rational[-1, 2]}, {0., -0.5}]], 
    PointBox[NCache[{(-2) (Rational[-1, 8] 3^Rational[-1, 2] + 
        Rational[1, 8] 3^Rational[1, 2]), 
       Rational[-1, 2]}, {-0.28867513459481287`, -0.5}]], 
    PointBox[NCache[{
      Rational[1, 8] 3^Rational[-1, 2] + Rational[-1, 8] 3^Rational[1, 2] - 
       2 (Rational[-1, 8] 3^Rational[-1, 2] + 
        Rational[-1, 8] 3^Rational[1, 2]), Rational[-1, 4]}, {
      0.4330127018922193, -0.25}]], 
    PointBox[NCache[{Rational[1, 4] 3^Rational[-1, 2], Rational[-1, 4]}, {
      0.14433756729740646`, -0.25}]], 
    PointBox[NCache[{
      Rational[1, 8] 3^Rational[-1, 2] + Rational[-1, 8] 3^Rational[1, 2], 
       Rational[-1, 4]}, {-0.14433756729740643`, -0.25}]], 
    PointBox[NCache[{
      Rational[-1, 4] 3^Rational[1, 2], 
       Rational[-1, 4]}, {-0.4330127018922193, -0.25}]], 
    PointBox[NCache[{(-2) (Rational[-1, 8] 3^Rational[-1, 2] + 
        Rational[-1, 8] 3^Rational[1, 2]), 0}, {0.5773502691896257, 0}]], 
    PointBox[NCache[{
      Rational[1, 8] 3^Rational[-1, 2] + Rational[1, 8] 3^Rational[1, 2], 
       0}, {0.28867513459481287`, 0}]], PointBox[{0, 0}], 
    PointBox[NCache[{
      Rational[-1, 8] 3^Rational[-1, 2] + Rational[-1, 8] 3^Rational[1, 2], 
       0}, {-0.28867513459481287`, 0}]], 
    PointBox[NCache[{
      2 (Rational[-1, 8] 3^Rational[-1, 2] + 
        Rational[-1, 8] 3^Rational[1, 2]), 0}, {-0.5773502691896257, 0}]], 
    PointBox[NCache[{Rational[1, 4] 3^Rational[1, 2], Rational[1, 4]}, {
      0.4330127018922193, 0.25}]], 
    PointBox[NCache[{
      Rational[-1, 8] 3^Rational[-1, 2] + Rational[1, 8] 3^Rational[1, 2], 
       Rational[1, 4]}, {0.14433756729740643`, 0.25}]], 
    PointBox[NCache[{
      Rational[-1, 4] 3^Rational[-1, 2], Rational[
       1, 4]}, {-0.14433756729740646`, 0.25}]], 
    PointBox[NCache[{
      Rational[-1, 8] 3^Rational[-1, 2] + Rational[1, 8] 3^Rational[1, 2] + 
       2 (Rational[-1, 8] 3^Rational[-1, 2] + 
         Rational[-1, 8] 3^Rational[1, 2]), Rational[
       1, 4]}, {-0.4330127018922193, 0.25}]], 
    PointBox[NCache[{
      2 (Rational[-1, 8] 3^Rational[-1, 2] + Rational[1, 8] 3^Rational[1, 2]),
        Rational[1, 2]}, {0.28867513459481287`, 0.5}]], 
    PointBox[NCache[{
      Rational[-1, 8] 3^Rational[-1, 2] + Rational[-1, 8] 3^Rational[1, 2] + 
       2 (Rational[-1, 8] 3^Rational[-1, 2] + 
         Rational[1, 8] 3^Rational[1, 2]), Rational[1, 2]}, {0., 0.5}]], 
    PointBox[NCache[{
      2 (Rational[-1, 8] 3^Rational[-1, 2] + 
         Rational[-1, 8] 3^Rational[1, 2]) + 
       2 (Rational[-1, 8] 3^Rational[-1, 2] + 
         Rational[1, 8] 3^Rational[1, 2]), Rational[
       1, 2]}, {-0.28867513459481287`, 0.5}]]}, 
   {RGBColor[0, 0, 1], 
    PointBox[NCache[{(-2) (Rational[-1, 8] 3^Rational[-1, 2] + 
         Rational[-1, 8] 3^Rational[1, 2]) - 
       2 (Rational[-1, 8] 3^Rational[-1, 2] + 
        Rational[1, 8] 3^Rational[1, 2]), Rational[-5, 2]}, {
      0.28867513459481287`, -2.5}]], 
    PointBox[NCache[{
      Rational[-1, 2] 3^Rational[1, 2] - 
       2 (Rational[-1, 8] 3^Rational[-1, 2] + 
        Rational[-1, 8] 3^Rational[1, 2]) - 
       2 (Rational[-1, 8] 3^Rational[-1, 2] + 
        Rational[1, 8] 3^Rational[1, 2]), -2}, {-0.5773502691896257, -2}]], 
    PointBox[NCache[{-3^Rational[1, 2] - 
       2 (Rational[-1, 8] 3^Rational[-1, 2] + 
        Rational[-1, 8] 3^Rational[1, 2]) - 
       2 (Rational[-1, 8] 3^Rational[-1, 2] + 
        Rational[1, 8] 3^Rational[1, 2]), 
       Rational[-3, 2]}, {-1.4433756729740643`, -1.5}]], 
    PointBox[NCache[{
      Rational[1, 2] 3^Rational[1, 2] - 
       2 (Rational[-1, 8] 3^Rational[-1, 2] + 
        Rational[-1, 8] 3^Rational[1, 2]) - 
       2 (Rational[-1, 8] 3^Rational[-1, 2] + 
        Rational[1, 8] 3^Rational[1, 2]), -2}, {1.1547005383792515`, -2}]], 
    PointBox[NCache[{(-2) (Rational[-1, 8] 3^Rational[-1, 2] + 
         Rational[-1, 8] 3^Rational[1, 2]) - 
       2 (Rational[-1, 8] 3^Rational[-1, 2] + 
        Rational[1, 8] 3^Rational[1, 2]), Rational[-3, 2]}, {
      0.28867513459481287`, -1.5}]], 
    PointBox[NCache[{
      Rational[-1, 2] 3^Rational[1, 2] - 
       2 (Rational[-1, 8] 3^Rational[-1, 2] + 
        Rational[-1, 8] 3^Rational[1, 2]) - 
       2 (Rational[-1, 8] 3^Rational[-1, 2] + 
        Rational[1, 8] 3^Rational[1, 2]), -1}, {-0.5773502691896257, -1}]], 
    PointBox[NCache[{-3^Rational[1, 2] - 
       2 (Rational[-1, 8] 3^Rational[-1, 2] + 
        Rational[-1, 8] 3^Rational[1, 2]) - 
       2 (Rational[-1, 8] 3^Rational[-1, 2] + 
        Rational[1, 8] 3^Rational[1, 2]), 
       Rational[-1, 2]}, {-1.4433756729740643`, -0.5}]], 
    PointBox[NCache[{
      3^Rational[1, 2] - 
       2 (Rational[-1, 8] 3^Rational[-1, 2] + 
        Rational[-1, 8] 3^Rational[1, 2]) - 
       2 (Rational[-1, 8] 3^Rational[-1, 2] + 
        Rational[1, 8] 3^Rational[1, 2]), Rational[-3, 2]}, {
      2.02072594216369, -1.5}]], 
    PointBox[NCache[{
      Rational[1, 2] 3^Rational[1, 2] - 
       2 (Rational[-1, 8] 3^Rational[-1, 2] + 
        Rational[-1, 8] 3^Rational[1, 2]) - 
       2 (Rational[-1, 8] 3^Rational[-1, 2] + 
        Rational[1, 8] 3^Rational[1, 2]), -1}, {1.1547005383792515`, -1}]], 
    PointBox[NCache[{(-2) (Rational[-1, 8] 3^Rational[-1, 2] + 
         Rational[-1, 8] 3^Rational[1, 2]) - 
       2 (Rational[-1, 8] 3^Rational[-1, 2] + 
        Rational[1, 8] 3^Rational[1, 2]), Rational[-1, 2]}, {
      0.28867513459481287`, -0.5}]], 
    PointBox[NCache[{
      Rational[-1, 2] 3^Rational[1, 2] - 
       2 (Rational[-1, 8] 3^Rational[-1, 2] + 
        Rational[-1, 8] 3^Rational[1, 2]) - 
       2 (Rational[-1, 8] 3^Rational[-1, 2] + 
        Rational[1, 8] 3^Rational[1, 2]), 0}, {-0.5773502691896257, 0}]], 
    PointBox[NCache[{-3^Rational[1, 2] - 
       2 (Rational[-1, 8] 3^Rational[-1, 2] + 
        Rational[-1, 8] 3^Rational[1, 2]) - 
       2 (Rational[-1, 8] 3^Rational[-1, 2] + 
        Rational[1, 8] 3^Rational[1, 2]), Rational[
       1, 2]}, {-1.4433756729740643`, 0.5}]], 
    PointBox[NCache[{
      3^Rational[1, 2] - 
       2 (Rational[-1, 8] 3^Rational[-1, 2] + 
        Rational[-1, 8] 3^Rational[1, 2]) - 
       2 (Rational[-1, 8] 3^Rational[-1, 2] + 
        Rational[1, 8] 3^Rational[1, 2]), Rational[-1, 2]}, {
      2.02072594216369, -0.5}]], 
    PointBox[NCache[{
      Rational[1, 2] 3^Rational[1, 2] - 
       2 (Rational[-1, 8] 3^Rational[-1, 2] + 
        Rational[-1, 8] 3^Rational[1, 2]) - 
       2 (Rational[-1, 8] 3^Rational[-1, 2] + 
        Rational[1, 8] 3^Rational[1, 2]), 0}, {1.1547005383792515`, 0}]], 
    PointBox[NCache[{(-2) (Rational[-1, 8] 3^Rational[-1, 2] + 
         Rational[-1, 8] 3^Rational[1, 2]) - 
       2 (Rational[-1, 8] 3^Rational[-1, 2] + 
        Rational[1, 8] 3^Rational[1, 2]), Rational[1, 2]}, {
      0.28867513459481287`, 0.5}]], 
    PointBox[NCache[{
      Rational[-1, 2] 3^Rational[1, 2] - 
       2 (Rational[-1, 8] 3^Rational[-1, 2] + 
        Rational[-1, 8] 3^Rational[1, 2]) - 
       2 (Rational[-1, 8] 3^Rational[-1, 2] + 
        Rational[1, 8] 3^Rational[1, 2]), 1}, {-0.5773502691896257, 1}]], 
    PointBox[NCache[{
      3^Rational[1, 2] - 
       2 (Rational[-1, 8] 3^Rational[-1, 2] + 
        Rational[-1, 8] 3^Rational[1, 2]) - 
       2 (Rational[-1, 8] 3^Rational[-1, 2] + 
        Rational[1, 8] 3^Rational[1, 2]), Rational[1, 2]}, {2.02072594216369, 
      0.5}]], PointBox[
     NCache[{Rational[1, 2] 3^Rational[1, 2] - 
       2 (Rational[-1, 8] 3^Rational[-1, 2] + 
        Rational[-1, 8] 3^Rational[1, 2]) - 
       2 (Rational[-1, 8] 3^Rational[-1, 2] + 
        Rational[1, 8] 3^Rational[1, 2]), 1}, {1.1547005383792515`, 1}]], 
    PointBox[NCache[{(-2) (Rational[-1, 8] 3^Rational[-1, 2] + 
         Rational[-1, 8] 3^Rational[1, 2]) - 
       2 (Rational[-1, 8] 3^Rational[-1, 2] + 
        Rational[1, 8] 3^Rational[1, 2]), Rational[3, 2]}, {
      0.28867513459481287`, 1.5}]], 
    PointBox[NCache[{
      Rational[1, 8] 3^Rational[-1, 2] + Rational[1, 8] 3^Rational[1, 2] - 
       2 (Rational[-1, 8] 3^Rational[-1, 2] + 
        Rational[1, 8] 3^Rational[1, 2]), Rational[-5, 2]}, {0., -2.5}]], 
    PointBox[NCache[{
      Rational[1, 8] 3^Rational[-1, 2] + Rational[-3, 8] 3^Rational[1, 2] - 
       2 (Rational[-1, 8] 3^Rational[-1, 2] + 
        Rational[1, 8] 3^Rational[1, 2]), -2}, {-0.8660254037844386, -2}]], 
    PointBox[NCache[{
      Rational[1, 8] 3^Rational[-1, 2] + Rational[-7, 8] 3^Rational[1, 2] - 
       2 (Rational[-1, 8] 3^Rational[-1, 2] + 
        Rational[1, 8] 3^Rational[1, 2]), 
       Rational[-3, 2]}, {-1.7320508075688772`, -1.5}]], 
    PointBox[NCache[{
      Rational[1, 8] 3^Rational[-1, 2] + Rational[5, 8] 3^Rational[1, 2] - 
       2 (Rational[-1, 8] 3^Rational[-1, 2] + 
        Rational[1, 8] 3^Rational[1, 2]), -2}, {0.8660254037844386, -2}]], 
    PointBox[NCache[{
      Rational[1, 8] 3^Rational[-1, 2] + Rational[1, 8] 3^Rational[1, 2] - 
       2 (Rational[-1, 8] 3^Rational[-1, 2] + 
        Rational[1, 8] 3^Rational[1, 2]), Rational[-3, 2]}, {0., -1.5}]], 
    PointBox[
     NCache[{Rational[1, 8] 3^Rational[-1, 2] + 
       Rational[-3, 8] 3^Rational[1, 2] - 
       2 (Rational[-1, 8] 3^Rational[-1, 2] + 
        Rational[1, 8] 3^Rational[1, 2]), -1}, {-0.8660254037844386, -1}]], 
    PointBox[NCache[{
      Rational[1, 8] 3^Rational[-1, 2] + Rational[-7, 8] 3^Rational[1, 2] - 
       2 (Rational[-1, 8] 3^Rational[-1, 2] + 
        Rational[1, 8] 3^Rational[1, 2]), 
       Rational[-1, 2]}, {-1.7320508075688772`, -0.5}]], 
    PointBox[NCache[{
      Rational[1, 8] 3^Rational[-1, 2] + Rational[9, 8] 3^Rational[1, 2] - 
       2 (Rational[-1, 8] 3^Rational[-1, 2] + 
        Rational[1, 8] 3^Rational[1, 2]), Rational[-3, 2]}, {
      1.732050807568877, -1.5}]], 
    PointBox[NCache[{
      Rational[1, 8] 3^Rational[-1, 2] + Rational[5, 8] 3^Rational[1, 2] - 
       2 (Rational[-1, 8] 3^Rational[-1, 2] + 
        Rational[1, 8] 3^Rational[1, 2]), -1}, {0.8660254037844386, -1}]], 
    PointBox[NCache[{
      Rational[1, 8] 3^Rational[-1, 2] + Rational[1, 8] 3^Rational[1, 2] - 
       2 (Rational[-1, 8] 3^Rational[-1, 2] + 
        Rational[1, 8] 3^Rational[1, 2]), Rational[-1, 2]}, {0., -0.5}]], 
    PointBox[NCache[{
      Rational[1, 8] 3^Rational[-1, 2] + Rational[-3, 8] 3^Rational[1, 2] - 
       2 (Rational[-1, 8] 3^Rational[-1, 2] + 
        Rational[1, 8] 3^Rational[1, 2]), 0}, {-0.8660254037844386, 0}]], 
    PointBox[NCache[{
      Rational[1, 8] 3^Rational[-1, 2] + Rational[-7, 8] 3^Rational[1, 2] - 
       2 (Rational[-1, 8] 3^Rational[-1, 2] + 
        Rational[1, 8] 3^Rational[1, 2]), Rational[
       1, 2]}, {-1.7320508075688772`, 0.5}]], 
    PointBox[NCache[{
      Rational[1, 8] 3^Rational[-1, 2] + Rational[9, 8] 3^Rational[1, 2] - 
       2 (Rational[-1, 8] 3^Rational[-1, 2] + 
        Rational[1, 8] 3^Rational[1, 2]), Rational[-1, 2]}, {
      1.732050807568877, -0.5}]], 
    PointBox[NCache[{
      Rational[1, 8] 3^Rational[-1, 2] + Rational[5, 8] 3^Rational[1, 2] - 
       2 (Rational[-1, 8] 3^Rational[-1, 2] + 
        Rational[1, 8] 3^Rational[1, 2]), 0}, {0.8660254037844386, 0}]], 
    PointBox[NCache[{
      Rational[1, 8] 3^Rational[-1, 2] + Rational[1, 8] 3^Rational[1, 2] - 
       2 (Rational[-1, 8] 3^Rational[-1, 2] + 
        Rational[1, 8] 3^Rational[1, 2]), Rational[1, 2]}, {0., 0.5}]], 
    PointBox[NCache[{
      Rational[1, 8] 3^Rational[-1, 2] + Rational[-3, 8] 3^Rational[1, 2] - 
       2 (Rational[-1, 8] 3^Rational[-1, 2] + 
        Rational[1, 8] 3^Rational[1, 2]), 1}, {-0.8660254037844386, 1}]], 
    PointBox[NCache[{
      Rational[1, 8] 3^Rational[-1, 2] + Rational[9, 8] 3^Rational[1, 2] - 
       2 (Rational[-1, 8] 3^Rational[-1, 2] + 
        Rational[1, 8] 3^Rational[1, 2]), Rational[1, 2]}, {1.732050807568877,
       0.5}]], PointBox[
     NCache[{Rational[1, 8] 3^Rational[-1, 2] + 
       Rational[5, 8] 3^Rational[1, 2] - 
       2 (Rational[-1, 8] 3^Rational[-1, 2] + 
        Rational[1, 8] 3^Rational[1, 2]), 1}, {0.8660254037844386, 1}]], 
    PointBox[NCache[{
      Rational[1, 8] 3^Rational[-1, 2] + Rational[1, 8] 3^Rational[1, 2] - 
       2 (Rational[-1, 8] 3^Rational[-1, 2] + 
        Rational[1, 8] 3^Rational[1, 2]), Rational[3, 2]}, {0., 1.5}]], 
    PointBox[NCache[{(-2) (Rational[-1, 8] 3^Rational[-1, 2] + 
        Rational[1, 8] 3^Rational[1, 2]), 
       Rational[-5, 2]}, {-0.28867513459481287`, -2.5}]], 
    PointBox[NCache[{
      Rational[-1, 2] 3^Rational[1, 2] - 
       2 (Rational[-1, 8] 3^Rational[-1, 2] + 
        Rational[1, 8] 3^Rational[1, 2]), -2}, {-1.1547005383792515`, -2}]], 
    PointBox[NCache[{-3^Rational[1, 2] - 
       2 (Rational[-1, 8] 3^Rational[-1, 2] + 
        Rational[1, 8] 3^Rational[1, 2]), 
       Rational[-3, 2]}, {-2.02072594216369, -1.5}]], 
    PointBox[NCache[{
      Rational[1, 2] 3^Rational[1, 2] - 
       2 (Rational[-1, 8] 3^Rational[-1, 2] + 
        Rational[1, 8] 3^Rational[1, 2]), -2}, {0.5773502691896257, -2}]], 
    PointBox[NCache[{(-2) (Rational[-1, 8] 3^Rational[-1, 2] + 
        Rational[1, 8] 3^Rational[1, 2]), 
       Rational[-3, 2]}, {-0.28867513459481287`, -1.5}]], 
    PointBox[NCache[{
      Rational[-1, 2] 3^Rational[1, 2] - 
       2 (Rational[-1, 8] 3^Rational[-1, 2] + 
        Rational[1, 8] 3^Rational[1, 2]), -1}, {-1.1547005383792515`, -1}]], 
    PointBox[NCache[{-3^Rational[1, 2] - 
       2 (Rational[-1, 8] 3^Rational[-1, 2] + 
        Rational[1, 8] 3^Rational[1, 2]), 
       Rational[-1, 2]}, {-2.02072594216369, -0.5}]], 
    PointBox[NCache[{
      3^Rational[1, 2] - 
       2 (Rational[-1, 8] 3^Rational[-1, 2] + 
        Rational[1, 8] 3^Rational[1, 2]), Rational[-3, 2]}, {
      1.4433756729740643`, -1.5}]], 
    PointBox[NCache[{
      Rational[1, 2] 3^Rational[1, 2] - 
       2 (Rational[-1, 8] 3^Rational[-1, 2] + 
        Rational[1, 8] 3^Rational[1, 2]), -1}, {0.5773502691896257, -1}]], 
    PointBox[NCache[{(-2) (Rational[-1, 8] 3^Rational[-1, 2] + 
        Rational[1, 8] 3^Rational[1, 2]), 
       Rational[-1, 2]}, {-0.28867513459481287`, -0.5}]], 
    PointBox[NCache[{
      Rational[-1, 2] 3^Rational[1, 2] - 
       2 (Rational[-1, 8] 3^Rational[-1, 2] + 
        Rational[1, 8] 3^Rational[1, 2]), 0}, {-1.1547005383792515`, 0}]], 
    PointBox[NCache[{-3^Rational[1, 2] - 
       2 (Rational[-1, 8] 3^Rational[-1, 2] + 
        Rational[1, 8] 3^Rational[1, 2]), Rational[1, 2]}, {-2.02072594216369,
       0.5}]], PointBox[
     NCache[{3^Rational[1, 2] - 
       2 (Rational[-1, 8] 3^Rational[-1, 2] + 
        Rational[1, 8] 3^Rational[1, 2]), Rational[-1, 2]}, {
      1.4433756729740643`, -0.5}]], 
    PointBox[NCache[{
      Rational[1, 2] 3^Rational[1, 2] - 
       2 (Rational[-1, 8] 3^Rational[-1, 2] + 
        Rational[1, 8] 3^Rational[1, 2]), 0}, {0.5773502691896257, 0}]], 
    PointBox[NCache[{(-2) (Rational[-1, 8] 3^Rational[-1, 2] + 
        Rational[1, 8] 3^Rational[1, 2]), Rational[
       1, 2]}, {-0.28867513459481287`, 0.5}]], 
    PointBox[NCache[{
      Rational[-1, 2] 3^Rational[1, 2] - 
       2 (Rational[-1, 8] 3^Rational[-1, 2] + 
        Rational[1, 8] 3^Rational[1, 2]), 1}, {-1.1547005383792515`, 1}]], 
    PointBox[NCache[{
      3^Rational[1, 2] - 
       2 (Rational[-1, 8] 3^Rational[-1, 2] + 
        Rational[1, 8] 3^Rational[1, 2]), Rational[1, 2]}, {
      1.4433756729740643`, 0.5}]], 
    PointBox[NCache[{
      Rational[1, 2] 3^Rational[1, 2] - 
       2 (Rational[-1, 8] 3^Rational[-1, 2] + 
        Rational[1, 8] 3^Rational[1, 2]), 1}, {0.5773502691896257, 1}]], 
    PointBox[NCache[{(-2) (Rational[-1, 8] 3^Rational[-1, 2] + 
        Rational[1, 8] 3^Rational[1, 2]), Rational[
       3, 2]}, {-0.28867513459481287`, 1.5}]], 
    PointBox[NCache[{
      Rational[1, 8] 3^Rational[-1, 2] + Rational[-1, 8] 3^Rational[1, 2] - 
       2 (Rational[-1, 8] 3^Rational[-1, 2] + 
        Rational[-1, 8] 3^Rational[1, 2]), Rational[-9, 4]}, {
      0.4330127018922193, -2.25}]], 
    PointBox[NCache[{
      Rational[1, 8] 3^Rational[-1, 2] + Rational[-5, 8] 3^Rational[1, 2] - 
       2 (Rational[-1, 8] 3^Rational[-1, 2] + 
        Rational[-1, 8] 3^Rational[1, 2]), 
       Rational[-7, 4]}, {-0.4330127018922192, -1.75}]], 
    PointBox[NCache[{
      Rational[1, 8] 3^Rational[-1, 2] + Rational[-9, 8] 3^Rational[1, 2] - 
       2 (Rational[-1, 8] 3^Rational[-1, 2] + 
        Rational[-1, 8] 3^Rational[1, 2]), 
       Rational[-5, 4]}, {-1.2990381056766578`, -1.25}]], 
    PointBox[NCache[{
      Rational[1, 8] 3^Rational[-1, 2] + Rational[3, 8] 3^Rational[1, 2] - 
       2 (Rational[-1, 8] 3^Rational[-1, 2] + 
        Rational[-1, 8] 3^Rational[1, 2]), Rational[-7, 4]}, {
      1.299038105676658, -1.75}]], 
    PointBox[NCache[{
      Rational[1, 8] 3^Rational[-1, 2] + Rational[-1, 8] 3^Rational[1, 2] - 
       2 (Rational[-1, 8] 3^Rational[-1, 2] + 
        Rational[-1, 8] 3^Rational[1, 2]), Rational[-5, 4]}, {
      0.4330127018922193, -1.25}]], 
    PointBox[NCache[{
      Rational[1, 8] 3^Rational[-1, 2] + Rational[-5, 8] 3^Rational[1, 2] - 
       2 (Rational[-1, 8] 3^Rational[-1, 2] + 
        Rational[-1, 8] 3^Rational[1, 2]), 
       Rational[-3, 4]}, {-0.4330127018922192, -0.75}]], 
    PointBox[NCache[{
      Rational[1, 8] 3^Rational[-1, 2] + Rational[-9, 8] 3^Rational[1, 2] - 
       2 (Rational[-1, 8] 3^Rational[-1, 2] + 
        Rational[-1, 8] 3^Rational[1, 2]), 
       Rational[-1, 4]}, {-1.2990381056766578`, -0.25}]], 
    PointBox[NCache[{
      Rational[1, 8] 3^Rational[-1, 2] + Rational[7, 8] 3^Rational[1, 2] - 
       2 (Rational[-1, 8] 3^Rational[-1, 2] + 
        Rational[-1, 8] 3^Rational[1, 2]), Rational[-5, 4]}, {
      2.1650635094610964`, -1.25}]], 
    PointBox[NCache[{
      Rational[1, 8] 3^Rational[-1, 2] + Rational[3, 8] 3^Rational[1, 2] - 
       2 (Rational[-1, 8] 3^Rational[-1, 2] + 
        Rational[-1, 8] 3^Rational[1, 2]), Rational[-3, 4]}, {
      1.299038105676658, -0.75}]], 
    PointBox[NCache[{
      Rational[1, 8] 3^Rational[-1, 2] + Rational[-1, 8] 3^Rational[1, 2] - 
       2 (Rational[-1, 8] 3^Rational[-1, 2] + 
        Rational[-1, 8] 3^Rational[1, 2]), Rational[-1, 4]}, {
      0.4330127018922193, -0.25}]], 
    PointBox[NCache[{
      Rational[1, 8] 3^Rational[-1, 2] + Rational[-5, 8] 3^Rational[1, 2] - 
       2 (Rational[-1, 8] 3^Rational[-1, 2] + 
        Rational[-1, 8] 3^Rational[1, 2]), Rational[
       1, 4]}, {-0.4330127018922192, 0.25}]], 
    PointBox[NCache[{
      Rational[1, 8] 3^Rational[-1, 2] + Rational[-9, 8] 3^Rational[1, 2] - 
       2 (Rational[-1, 8] 3^Rational[-1, 2] + 
        Rational[-1, 8] 3^Rational[1, 2]), Rational[
       3, 4]}, {-1.2990381056766578`, 0.75}]], 
    PointBox[NCache[{
      Rational[1, 8] 3^Rational[-1, 2] + Rational[7, 8] 3^Rational[1, 2] - 
       2 (Rational[-1, 8] 3^Rational[-1, 2] + 
        Rational[-1, 8] 3^Rational[1, 2]), Rational[-1, 4]}, {
      2.1650635094610964`, -0.25}]], 
    PointBox[NCache[{
      Rational[1, 8] 3^Rational[-1, 2] + Rational[3, 8] 3^Rational[1, 2] - 
       2 (Rational[-1, 8] 3^Rational[-1, 2] + 
        Rational[-1, 8] 3^Rational[1, 2]), Rational[1, 4]}, {
      1.299038105676658, 0.25}]], 
    PointBox[NCache[{
      Rational[1, 8] 3^Rational[-1, 2] + Rational[-1, 8] 3^Rational[1, 2] - 
       2 (Rational[-1, 8] 3^Rational[-1, 2] + 
        Rational[-1, 8] 3^Rational[1, 2]), Rational[3, 4]}, {
      0.4330127018922193, 0.75}]], 
    PointBox[NCache[{
      Rational[1, 8] 3^Rational[-1, 2] + Rational[-5, 8] 3^Rational[1, 2] - 
       2 (Rational[-1, 8] 3^Rational[-1, 2] + 
        Rational[-1, 8] 3^Rational[1, 2]), Rational[
       5, 4]}, {-0.4330127018922192, 1.25}]], 
    PointBox[NCache[{
      Rational[1, 8] 3^Rational[-1, 2] + Rational[7, 8] 3^Rational[1, 2] - 
       2 (Rational[-1, 8] 3^Rational[-1, 2] + 
        Rational[-1, 8] 3^Rational[1, 2]), Rational[3, 4]}, {
      2.1650635094610964`, 0.75}]], 
    PointBox[NCache[{
      Rational[1, 8] 3^Rational[-1, 2] + Rational[3, 8] 3^Rational[1, 2] - 
       2 (Rational[-1, 8] 3^Rational[-1, 2] + 
        Rational[-1, 8] 3^Rational[1, 2]), Rational[5, 4]}, {
      1.299038105676658, 1.25}]], 
    PointBox[NCache[{
      Rational[1, 8] 3^Rational[-1, 2] + Rational[-1, 8] 3^Rational[1, 2] - 
       2 (Rational[-1, 8] 3^Rational[-1, 2] + 
        Rational[-1, 8] 3^Rational[1, 2]), Rational[7, 4]}, {
      0.4330127018922193, 1.75}]], 
    PointBox[NCache[{Rational[1, 4] 3^Rational[-1, 2], Rational[-9, 4]}, {
      0.14433756729740646`, -2.25}]], 
    PointBox[NCache[{
      Rational[1, 4] 3^Rational[-1, 2] + Rational[-1, 2] 3^Rational[1, 2], 
       Rational[-7, 4]}, {-0.7216878364870322, -1.75}]], 
    PointBox[NCache[{
      Rational[1, 4] 3^Rational[-1, 2] - 3^Rational[1, 2], 
       Rational[-5, 4]}, {-1.5877132402714706`, -1.25}]], 
    PointBox[NCache[{
      Rational[1, 4] 3^Rational[-1, 2] + Rational[1, 2] 3^Rational[1, 2], 
       Rational[-7, 4]}, {1.0103629710818451`, -1.75}]], 
    PointBox[NCache[{Rational[1, 4] 3^Rational[-1, 2], Rational[-5, 4]}, {
      0.14433756729740646`, -1.25}]], 
    PointBox[NCache[{
      Rational[1, 4] 3^Rational[-1, 2] + Rational[-1, 2] 3^Rational[1, 2], 
       Rational[-3, 4]}, {-0.7216878364870322, -0.75}]], 
    PointBox[NCache[{
      Rational[1, 4] 3^Rational[-1, 2] - 3^Rational[1, 2], 
       Rational[-1, 4]}, {-1.5877132402714706`, -0.25}]], 
    PointBox[NCache[{
      Rational[1, 4] 3^Rational[-1, 2] + 3^Rational[1, 2], Rational[-5, 4]}, {
      1.8763883748662837`, -1.25}]], 
    PointBox[NCache[{
      Rational[1, 4] 3^Rational[-1, 2] + Rational[1, 2] 3^Rational[1, 2], 
       Rational[-3, 4]}, {1.0103629710818451`, -0.75}]], 
    PointBox[NCache[{Rational[1, 4] 3^Rational[-1, 2], Rational[-1, 4]}, {
      0.14433756729740646`, -0.25}]], 
    PointBox[NCache[{
      Rational[1, 4] 3^Rational[-1, 2] + Rational[-1, 2] 3^Rational[1, 2], 
       Rational[1, 4]}, {-0.7216878364870322, 0.25}]], 
    PointBox[NCache[{
      Rational[1, 4] 3^Rational[-1, 2] - 3^Rational[1, 2], Rational[
       3, 4]}, {-1.5877132402714706`, 0.75}]], 
    PointBox[NCache[{
      Rational[1, 4] 3^Rational[-1, 2] + 3^Rational[1, 2], Rational[-1, 4]}, {
      1.8763883748662837`, -0.25}]], 
    PointBox[
     NCache[{Rational[1, 4] 3^Rational[-1, 2] + 
       Rational[1, 2] 3^Rational[1, 2], Rational[1, 4]}, {1.0103629710818451`,
       0.25}]], 
    PointBox[NCache[{Rational[1, 4] 3^Rational[-1, 2], Rational[3, 4]}, {
      0.14433756729740646`, 0.75}]], 
    PointBox[NCache[{
      Rational[1, 4] 3^Rational[-1, 2] + Rational[-1, 2] 3^Rational[1, 2], 
       Rational[5, 4]}, {-0.7216878364870322, 1.25}]], 
    PointBox[NCache[{
      Rational[1, 4] 3^Rational[-1, 2] + 3^Rational[1, 2], Rational[3, 4]}, {
      1.8763883748662837`, 0.75}]], 
    PointBox[NCache[{
      Rational[1, 4] 3^Rational[-1, 2] + Rational[1, 2] 3^Rational[1, 2], 
       Rational[5, 4]}, {1.0103629710818451`, 1.25}]], 
    PointBox[NCache[{Rational[1, 4] 3^Rational[-1, 2], Rational[7, 4]}, {
      0.14433756729740646`, 1.75}]], 
    PointBox[NCache[{
      Rational[1, 8] 3^Rational[-1, 2] + Rational[-1, 8] 3^Rational[1, 2], 
       Rational[-9, 4]}, {-0.14433756729740643`, -2.25}]], 
    PointBox[NCache[{
      Rational[1, 8] 3^Rational[-1, 2] + Rational[-5, 8] 3^Rational[1, 2], 
       Rational[-7, 4]}, {-1.010362971081845, -1.75}]], 
    PointBox[NCache[{
      Rational[1, 8] 3^Rational[-1, 2] + Rational[-9, 8] 3^Rational[1, 2], 
       Rational[-5, 4]}, {-1.8763883748662835`, -1.25}]], 
    PointBox[NCache[{
      Rational[1, 8] 3^Rational[-1, 2] + Rational[3, 8] 3^Rational[1, 2], 
       Rational[-7, 4]}, {0.7216878364870323, -1.75}]], 
    PointBox[NCache[{
      Rational[1, 8] 3^Rational[-1, 2] + Rational[-1, 8] 3^Rational[1, 2], 
       Rational[-5, 4]}, {-0.14433756729740643`, -1.25}]], 
    PointBox[NCache[{
      Rational[1, 8] 3^Rational[-1, 2] + Rational[-5, 8] 3^Rational[1, 2], 
       Rational[-3, 4]}, {-1.010362971081845, -0.75}]], 
    PointBox[NCache[{
      Rational[1, 8] 3^Rational[-1, 2] + Rational[-9, 8] 3^Rational[1, 2], 
       Rational[-1, 4]}, {-1.8763883748662835`, -0.25}]], 
    PointBox[NCache[{
      Rational[1, 8] 3^Rational[-1, 2] + Rational[7, 8] 3^Rational[1, 2], 
       Rational[-5, 4]}, {1.5877132402714709`, -1.25}]], 
    PointBox[NCache[{
      Rational[1, 8] 3^Rational[-1, 2] + Rational[3, 8] 3^Rational[1, 2], 
       Rational[-3, 4]}, {0.7216878364870323, -0.75}]], 
    PointBox[NCache[{
      Rational[1, 8] 3^Rational[-1, 2] + Rational[-1, 8] 3^Rational[1, 2], 
       Rational[-1, 4]}, {-0.14433756729740643`, -0.25}]], 
    PointBox[NCache[{
      Rational[1, 8] 3^Rational[-1, 2] + Rational[-5, 8] 3^Rational[1, 2], 
       Rational[1, 4]}, {-1.010362971081845, 0.25}]], 
    PointBox[NCache[{
      Rational[1, 8] 3^Rational[-1, 2] + Rational[-9, 8] 3^Rational[1, 2], 
       Rational[3, 4]}, {-1.8763883748662835`, 0.75}]], 
    PointBox[NCache[{
      Rational[1, 8] 3^Rational[-1, 2] + Rational[7, 8] 3^Rational[1, 2], 
       Rational[-1, 4]}, {1.5877132402714709`, -0.25}]], 
    PointBox[NCache[{
      Rational[1, 8] 3^Rational[-1, 2] + Rational[3, 8] 3^Rational[1, 2], 
       Rational[1, 4]}, {0.7216878364870323, 0.25}]], 
    PointBox[NCache[{
      Rational[1, 8] 3^Rational[-1, 2] + Rational[-1, 8] 3^Rational[1, 2], 
       Rational[3, 4]}, {-0.14433756729740643`, 0.75}]], 
    PointBox[NCache[{
      Rational[1, 8] 3^Rational[-1, 2] + Rational[-5, 8] 3^Rational[1, 2], 
       Rational[5, 4]}, {-1.010362971081845, 1.25}]], 
    PointBox[NCache[{
      Rational[1, 8] 3^Rational[-1, 2] + Rational[7, 8] 3^Rational[1, 2], 
       Rational[3, 4]}, {1.5877132402714709`, 0.75}]], 
    PointBox[NCache[{
      Rational[1, 8] 3^Rational[-1, 2] + Rational[3, 8] 3^Rational[1, 2], 
       Rational[5, 4]}, {0.7216878364870323, 1.25}]], 
    PointBox[NCache[{
      Rational[1, 8] 3^Rational[-1, 2] + Rational[-1, 8] 3^Rational[1, 2], 
       Rational[7, 4]}, {-0.14433756729740643`, 1.75}]], 
    PointBox[NCache[{
      Rational[-1, 4] 3^Rational[1, 2], 
       Rational[-9, 4]}, {-0.4330127018922193, -2.25}]], 
    PointBox[NCache[{
      Rational[-3, 4] 3^Rational[1, 2], 
       Rational[-7, 4]}, {-1.299038105676658, -1.75}]], 
    PointBox[NCache[{
      Rational[-5, 4] 3^Rational[1, 2], 
       Rational[-5, 4]}, {-2.1650635094610964`, -1.25}]], 
    PointBox[NCache[{Rational[1, 4] 3^Rational[1, 2], Rational[-7, 4]}, {
      0.4330127018922193, -1.75}]], 
    PointBox[NCache[{
      Rational[-1, 4] 3^Rational[1, 2], 
       Rational[-5, 4]}, {-0.4330127018922193, -1.25}]], 
    PointBox[
     NCache[{Rational[-3, 4] 3^Rational[1, 2], 
       Rational[-3, 4]}, {-1.299038105676658, -0.75}]], 
    PointBox[NCache[{
      Rational[-5, 4] 3^Rational[1, 2], 
       Rational[-1, 4]}, {-2.1650635094610964`, -0.25}]], 
    PointBox[NCache[{Rational[3, 4] 3^Rational[1, 2], Rational[-5, 4]}, {
      1.299038105676658, -1.25}]], 
    PointBox[NCache[{Rational[1, 4] 3^Rational[1, 2], Rational[-3, 4]}, {
      0.4330127018922193, -0.75}]], 
    PointBox[NCache[{
      Rational[-1, 4] 3^Rational[1, 2], 
       Rational[-1, 4]}, {-0.4330127018922193, -0.25}]], 
    PointBox[NCache[{
      Rational[-3, 4] 3^Rational[1, 2], Rational[1, 4]}, {-1.299038105676658, 
      0.25}]], PointBox[
     NCache[{Rational[-5, 4] 3^Rational[1, 2], Rational[
       3, 4]}, {-2.1650635094610964`, 0.75}]], 
    PointBox[NCache[{Rational[3, 4] 3^Rational[1, 2], Rational[-1, 4]}, {
      1.299038105676658, -0.25}]], 
    PointBox[NCache[{Rational[1, 4] 3^Rational[1, 2], Rational[1, 4]}, {
      0.4330127018922193, 0.25}]], 
    PointBox[NCache[{
      Rational[-1, 4] 3^Rational[1, 2], Rational[3, 4]}, {-0.4330127018922193,
       0.75}]], 
    PointBox[NCache[{
      Rational[-3, 4] 3^Rational[1, 2], Rational[5, 4]}, {-1.299038105676658, 
      1.25}]], PointBox[
     NCache[{Rational[3, 4] 3^Rational[1, 2], Rational[3, 4]}, {
      1.299038105676658, 0.75}]], 
    PointBox[NCache[{Rational[1, 4] 3^Rational[1, 2], Rational[5, 4]}, {
      0.4330127018922193, 1.25}]], 
    PointBox[NCache[{
      Rational[-1, 4] 3^Rational[1, 2], Rational[7, 4]}, {-0.4330127018922193,
       1.75}]], 
    PointBox[NCache[{(-2) (Rational[-1, 8] 3^Rational[-1, 2] + 
        Rational[-1, 8] 3^Rational[1, 2]), -2}, {0.5773502691896257, -2}]], 
    PointBox[NCache[{
      Rational[-1, 2] 3^Rational[1, 2] - 
       2 (Rational[-1, 8] 3^Rational[-1, 2] + 
        Rational[-1, 8] 3^Rational[1, 2]), 
       Rational[-3, 2]}, {-0.28867513459481287`, -1.5}]], 
    PointBox[NCache[{-3^Rational[1, 2] - 
       2 (Rational[-1, 8] 3^Rational[-1, 2] + 
        Rational[-1, 8] 3^Rational[1, 2]), -1}, {-1.1547005383792515`, -1}]], 
    PointBox[NCache[{
      Rational[1, 2] 3^Rational[1, 2] - 
       2 (Rational[-1, 8] 3^Rational[-1, 2] + 
        Rational[-1, 8] 3^Rational[1, 2]), Rational[-3, 2]}, {
      1.4433756729740643`, -1.5}]], 
    PointBox[NCache[{(-2) (Rational[-1, 8] 3^Rational[-1, 2] + 
        Rational[-1, 8] 3^Rational[1, 2]), -1}, {0.5773502691896257, -1}]], 
    PointBox[NCache[{
      Rational[-1, 2] 3^Rational[1, 2] - 
       2 (Rational[-1, 8] 3^Rational[-1, 2] + 
        Rational[-1, 8] 3^Rational[1, 2]), 
       Rational[-1, 2]}, {-0.28867513459481287`, -0.5}]], 
    PointBox[NCache[{-3^Rational[1, 2] - 
       2 (Rational[-1, 8] 3^Rational[-1, 2] + 
        Rational[-1, 8] 3^Rational[1, 2]), 0}, {-1.1547005383792515`, 0}]], 
    PointBox[NCache[{
      3^Rational[1, 2] - 
       2 (Rational[-1, 8] 3^Rational[-1, 2] + 
        Rational[-1, 8] 3^Rational[1, 2]), -1}, {2.309401076758503, -1}]], 
    PointBox[NCache[{
      Rational[1, 2] 3^Rational[1, 2] - 
       2 (Rational[-1, 8] 3^Rational[-1, 2] + 
        Rational[-1, 8] 3^Rational[1, 2]), Rational[-1, 2]}, {
      1.4433756729740643`, -0.5}]], 
    PointBox[NCache[{(-2) (Rational[-1, 8] 3^Rational[-1, 2] + 
        Rational[-1, 8] 3^Rational[1, 2]), 0}, {0.5773502691896257, 0}]], 
    PointBox[NCache[{
      Rational[-1, 2] 3^Rational[1, 2] - 
       2 (Rational[-1, 8] 3^Rational[-1, 2] + 
        Rational[-1, 8] 3^Rational[1, 2]), Rational[
       1, 2]}, {-0.28867513459481287`, 0.5}]], 
    PointBox[NCache[{-3^Rational[1, 2] - 
       2 (Rational[-1, 8] 3^Rational[-1, 2] + 
        Rational[-1, 8] 3^Rational[1, 2]), 1}, {-1.1547005383792515`, 1}]], 
    PointBox[NCache[{
      3^Rational[1, 2] - 
       2 (Rational[-1, 8] 3^Rational[-1, 2] + 
        Rational[-1, 8] 3^Rational[1, 2]), 0}, {2.309401076758503, 0}]], 
    PointBox[NCache[{
      Rational[1, 2] 3^Rational[1, 2] - 
       2 (Rational[-1, 8] 3^Rational[-1, 2] + 
        Rational[-1, 8] 3^Rational[1, 2]), Rational[1, 2]}, {
      1.4433756729740643`, 0.5}]], 
    PointBox[NCache[{(-2) (Rational[-1, 8] 3^Rational[-1, 2] + 
        Rational[-1, 8] 3^Rational[1, 2]), 1}, {0.5773502691896257, 1}]], 
    PointBox[NCache[{
      Rational[-1, 2] 3^Rational[1, 2] - 
       2 (Rational[-1, 8] 3^Rational[-1, 2] + 
        Rational[-1, 8] 3^Rational[1, 2]), Rational[
       3, 2]}, {-0.28867513459481287`, 1.5}]], 
    PointBox[NCache[{
      3^Rational[1, 2] - 
       2 (Rational[-1, 8] 3^Rational[-1, 2] + 
        Rational[-1, 8] 3^Rational[1, 2]), 1}, {2.309401076758503, 1}]], 
    PointBox[NCache[{
      Rational[1, 2] 3^Rational[1, 2] - 
       2 (Rational[-1, 8] 3^Rational[-1, 2] + 
        Rational[-1, 8] 3^Rational[1, 2]), Rational[3, 2]}, {
      1.4433756729740643`, 1.5}]], 
    PointBox[NCache[{(-2) (Rational[-1, 8] 3^Rational[-1, 2] + 
        Rational[-1, 8] 3^Rational[1, 2]), 2}, {0.5773502691896257, 2}]], 
    PointBox[NCache[{
      Rational[1, 8] 3^Rational[-1, 2] + 
       Rational[1, 8] 3^Rational[1, 2], -2}, {0.28867513459481287`, -2}]], 
    PointBox[NCache[{
      Rational[1, 8] 3^Rational[-1, 2] + Rational[-3, 8] 3^Rational[1, 2], 
       Rational[-3, 2]}, {-0.5773502691896257, -1.5}]], 
    PointBox[NCache[{
      Rational[1, 8] 3^Rational[-1, 2] + 
       Rational[-7, 8] 3^Rational[1, 2], -1}, {-1.4433756729740643`, -1}]], 
    PointBox[NCache[{
      Rational[1, 8] 3^Rational[-1, 2] + Rational[5, 8] 3^Rational[1, 2], 
       Rational[-3, 2]}, {1.1547005383792515`, -1.5}]], 
    PointBox[NCache[{
      Rational[1, 8] 3^Rational[-1, 2] + 
       Rational[1, 8] 3^Rational[1, 2], -1}, {0.28867513459481287`, -1}]], 
    PointBox[NCache[{
      Rational[1, 8] 3^Rational[-1, 2] + Rational[-3, 8] 3^Rational[1, 2], 
       Rational[-1, 2]}, {-0.5773502691896257, -0.5}]], 
    PointBox[NCache[{
      Rational[1, 8] 3^Rational[-1, 2] + Rational[-7, 8] 3^Rational[1, 2], 
       0}, {-1.4433756729740643`, 0}]], 
    PointBox[NCache[{
      Rational[1, 8] 3^Rational[-1, 2] + 
       Rational[9, 8] 3^Rational[1, 2], -1}, {2.02072594216369, -1}]], 
    PointBox[NCache[{
      Rational[1, 8] 3^Rational[-1, 2] + Rational[5, 8] 3^Rational[1, 2], 
       Rational[-1, 2]}, {1.1547005383792515`, -0.5}]], 
    PointBox[NCache[{
      Rational[1, 8] 3^Rational[-1, 2] + Rational[1, 8] 3^Rational[1, 2], 
       0}, {0.28867513459481287`, 0}]], 
    PointBox[NCache[{
      Rational[1, 8] 3^Rational[-1, 2] + Rational[-3, 8] 3^Rational[1, 2], 
       Rational[1, 2]}, {-0.5773502691896257, 0.5}]], 
    PointBox[NCache[{
      Rational[1, 8] 3^Rational[-1, 2] + Rational[-7, 8] 3^Rational[1, 2], 
       1}, {-1.4433756729740643`, 1}]], 
    PointBox[NCache[{
      Rational[1, 8] 3^Rational[-1, 2] + Rational[9, 8] 3^Rational[1, 2], 
       0}, {2.02072594216369, 0}]], 
    PointBox[NCache[{
      Rational[1, 8] 3^Rational[-1, 2] + Rational[5, 8] 3^Rational[1, 2], 
       Rational[1, 2]}, {1.1547005383792515`, 0.5}]], 
    PointBox[NCache[{
      Rational[1, 8] 3^Rational[-1, 2] + Rational[1, 8] 3^Rational[1, 2], 
       1}, {0.28867513459481287`, 1}]], 
    PointBox[NCache[{
      Rational[1, 8] 3^Rational[-1, 2] + Rational[-3, 8] 3^Rational[1, 2], 
       Rational[3, 2]}, {-0.5773502691896257, 1.5}]], 
    PointBox[NCache[{
      Rational[1, 8] 3^Rational[-1, 2] + Rational[9, 8] 3^Rational[1, 2], 
       1}, {2.02072594216369, 1}]], 
    PointBox[NCache[{
      Rational[1, 8] 3^Rational[-1, 2] + Rational[5, 8] 3^Rational[1, 2], 
       Rational[3, 2]}, {1.1547005383792515`, 1.5}]], 
    PointBox[NCache[{
      Rational[1, 8] 3^Rational[-1, 2] + Rational[1, 8] 3^Rational[1, 2], 
       2}, {0.28867513459481287`, 2}]], PointBox[{0, -2}], 
    PointBox[NCache[{
      Rational[-1, 2] 3^Rational[1, 2], 
       Rational[-3, 2]}, {-0.8660254037844386, -1.5}]], 
    PointBox[NCache[{-3^Rational[1, 2], -1}, {-1.7320508075688772`, -1}]], 
    PointBox[NCache[{Rational[1, 2] 3^Rational[1, 2], Rational[-3, 2]}, {
      0.8660254037844386, -1.5}]], PointBox[{0, -1}], 
    PointBox[NCache[{
      Rational[-1, 2] 3^Rational[1, 2], 
       Rational[-1, 2]}, {-0.8660254037844386, -0.5}]], 
    PointBox[NCache[{-3^Rational[1, 2], 0}, {-1.7320508075688772`, 0}]], 
    PointBox[NCache[{3^Rational[1, 2], -1}, {1.7320508075688772`, -1}]], 
    PointBox[NCache[{Rational[1, 2] 3^Rational[1, 2], Rational[-1, 2]}, {
      0.8660254037844386, -0.5}]], PointBox[{0, 0}], 
    PointBox[NCache[{
      Rational[-1, 2] 3^Rational[1, 2], Rational[1, 2]}, {-0.8660254037844386,
       0.5}]], PointBox[
     NCache[{-3^Rational[1, 2], 1}, {-1.7320508075688772`, 1}]], 
    PointBox[NCache[{3^Rational[1, 2], 0}, {1.7320508075688772`, 0}]], 
    PointBox[NCache[{Rational[1, 2] 3^Rational[1, 2], Rational[1, 2]}, {
      0.8660254037844386, 0.5}]], PointBox[{0, 1}], 
    PointBox[NCache[{
      Rational[-1, 2] 3^Rational[1, 2], Rational[3, 2]}, {-0.8660254037844386,
       1.5}]], PointBox[
     NCache[{3^Rational[1, 2], 1}, {1.7320508075688772`, 1}]], 
    PointBox[NCache[{Rational[1, 2] 3^Rational[1, 2], Rational[3, 2]}, {
      0.8660254037844386, 1.5}]], PointBox[{0, 2}], 
    PointBox[NCache[{
      Rational[-1, 8] 3^Rational[-1, 2] + 
       Rational[-1, 8] 3^Rational[1, 2], -2}, {-0.28867513459481287`, -2}]], 
    PointBox[NCache[{
      Rational[-1, 8] 3^Rational[-1, 2] + Rational[-5, 8] 3^Rational[1, 2], 
       Rational[-3, 2]}, {-1.1547005383792515`, -1.5}]], 
    PointBox[NCache[{
      Rational[-1, 8] 3^Rational[-1, 2] + 
       Rational[-9, 8] 3^Rational[1, 2], -1}, {-2.02072594216369, -1}]], 
    PointBox[NCache[{
      Rational[-1, 8] 3^Rational[-1, 2] + Rational[3, 8] 3^Rational[1, 2], 
       Rational[-3, 2]}, {0.5773502691896257, -1.5}]], 
    PointBox[NCache[{
      Rational[-1, 8] 3^Rational[-1, 2] + 
       Rational[-1, 8] 3^Rational[1, 2], -1}, {-0.28867513459481287`, -1}]], 
    PointBox[NCache[{
      Rational[-1, 8] 3^Rational[-1, 2] + Rational[-5, 8] 3^Rational[1, 2], 
       Rational[-1, 2]}, {-1.1547005383792515`, -0.5}]], 
    PointBox[NCache[{
      Rational[-1, 8] 3^Rational[-1, 2] + Rational[-9, 8] 3^Rational[1, 2], 
       0}, {-2.02072594216369, 0}]], 
    PointBox[NCache[{
      Rational[-1, 8] 3^Rational[-1, 2] + 
       Rational[7, 8] 3^Rational[1, 2], -1}, {1.4433756729740643`, -1}]], 
    PointBox[NCache[{
      Rational[-1, 8] 3^Rational[-1, 2] + Rational[3, 8] 3^Rational[1, 2], 
       Rational[-1, 2]}, {0.5773502691896257, -0.5}]], 
    PointBox[NCache[{
      Rational[-1, 8] 3^Rational[-1, 2] + Rational[-1, 8] 3^Rational[1, 2], 
       0}, {-0.28867513459481287`, 0}]], 
    PointBox[NCache[{
      Rational[-1, 8] 3^Rational[-1, 2] + Rational[-5, 8] 3^Rational[1, 2], 
       Rational[1, 2]}, {-1.1547005383792515`, 0.5}]], 
    PointBox[
     NCache[{Rational[-1, 8] 3^Rational[-1, 2] + 
       Rational[-9, 8] 3^Rational[1, 2], 1}, {-2.02072594216369, 1}]], 
    PointBox[NCache[{
      Rational[-1, 8] 3^Rational[-1, 2] + Rational[7, 8] 3^Rational[1, 2], 
       0}, {1.4433756729740643`, 0}]], 
    PointBox[NCache[{
      Rational[-1, 8] 3^Rational[-1, 2] + Rational[3, 8] 3^Rational[1, 2], 
       Rational[1, 2]}, {0.5773502691896257, 0.5}]], 
    PointBox[NCache[{
      Rational[-1, 8] 3^Rational[-1, 2] + Rational[-1, 8] 3^Rational[1, 2], 
       1}, {-0.28867513459481287`, 1}]], 
    PointBox[NCache[{
      Rational[-1, 8] 3^Rational[-1, 2] + Rational[-5, 8] 3^Rational[1, 2], 
       Rational[3, 2]}, {-1.1547005383792515`, 1.5}]], 
    PointBox[NCache[{
      Rational[-1, 8] 3^Rational[-1, 2] + Rational[7, 8] 3^Rational[1, 2], 
       1}, {1.4433756729740643`, 1}]], 
    PointBox[NCache[{
      Rational[-1, 8] 3^Rational[-1, 2] + Rational[3, 8] 3^Rational[1, 2], 
       Rational[3, 2]}, {0.5773502691896257, 1.5}]], 
    PointBox[NCache[{
      Rational[-1, 8] 3^Rational[-1, 2] + Rational[-1, 8] 3^Rational[1, 2], 
       2}, {-0.28867513459481287`, 2}]], 
    PointBox[NCache[{
      2 (Rational[-1, 8] 3^Rational[-1, 2] + 
        Rational[-1, 8] 3^Rational[1, 2]), -2}, {-0.5773502691896257, -2}]], 
    PointBox[NCache[{
      Rational[-1, 2] 3^Rational[1, 2] + 
       2 (Rational[-1, 8] 3^Rational[-1, 2] + 
         Rational[-1, 8] 3^Rational[1, 2]), 
       Rational[-3, 2]}, {-1.4433756729740643`, -1.5}]], 
    PointBox[NCache[{-3^Rational[1, 2] + 
       2 (Rational[-1, 8] 3^Rational[-1, 2] + 
         Rational[-1, 8] 3^Rational[1, 2]), -1}, {-2.309401076758503, -1}]], 
    PointBox[NCache[{
      Rational[1, 2] 3^Rational[1, 2] + 
       2 (Rational[-1, 8] 3^Rational[-1, 2] + 
         Rational[-1, 8] 3^Rational[1, 2]), Rational[-3, 2]}, {
      0.28867513459481287`, -1.5}]], 
    PointBox[NCache[{
      2 (Rational[-1, 8] 3^Rational[-1, 2] + 
        Rational[-1, 8] 3^Rational[1, 2]), -1}, {-0.5773502691896257, -1}]], 
    PointBox[NCache[{
      Rational[-1, 2] 3^Rational[1, 2] + 
       2 (Rational[-1, 8] 3^Rational[-1, 2] + 
         Rational[-1, 8] 3^Rational[1, 2]), 
       Rational[-1, 2]}, {-1.4433756729740643`, -0.5}]], 
    PointBox[NCache[{-3^Rational[1, 2] + 
       2 (Rational[-1, 8] 3^Rational[-1, 2] + 
         Rational[-1, 8] 3^Rational[1, 2]), 0}, {-2.309401076758503, 0}]], 
    PointBox[NCache[{
      3^Rational[1, 2] + 
       2 (Rational[-1, 8] 3^Rational[-1, 2] + 
         Rational[-1, 8] 3^Rational[1, 2]), -1}, {1.1547005383792515`, -1}]], 
    PointBox[NCache[{
      Rational[1, 2] 3^Rational[1, 2] + 
       2 (Rational[-1, 8] 3^Rational[-1, 2] + 
         Rational[-1, 8] 3^Rational[1, 2]), Rational[-1, 2]}, {
      0.28867513459481287`, -0.5}]], 
    PointBox[NCache[{
      2 (Rational[-1, 8] 3^Rational[-1, 2] + 
        Rational[-1, 8] 3^Rational[1, 2]), 0}, {-0.5773502691896257, 0}]], 
    PointBox[NCache[{
      Rational[-1, 2] 3^Rational[1, 2] + 
       2 (Rational[-1, 8] 3^Rational[-1, 2] + 
         Rational[-1, 8] 3^Rational[1, 2]), Rational[
       1, 2]}, {-1.4433756729740643`, 0.5}]], 
    PointBox[NCache[{-3^Rational[1, 2] + 
       2 (Rational[-1, 8] 3^Rational[-1, 2] + 
         Rational[-1, 8] 3^Rational[1, 2]), 1}, {-2.309401076758503, 1}]], 
    PointBox[NCache[{
      3^Rational[1, 2] + 
       2 (Rational[-1, 8] 3^Rational[-1, 2] + 
         Rational[-1, 8] 3^Rational[1, 2]), 0}, {1.1547005383792515`, 0}]], 
    PointBox[NCache[{
      Rational[1, 2] 3^Rational[1, 2] + 
       2 (Rational[-1, 8] 3^Rational[-1, 2] + 
         Rational[-1, 8] 3^Rational[1, 2]), Rational[1, 2]}, {
      0.28867513459481287`, 0.5}]], 
    PointBox[NCache[{
      2 (Rational[-1, 8] 3^Rational[-1, 2] + 
        Rational[-1, 8] 3^Rational[1, 2]), 1}, {-0.5773502691896257, 1}]], 
    PointBox[NCache[{
      Rational[-1, 2] 3^Rational[1, 2] + 
       2 (Rational[-1, 8] 3^Rational[-1, 2] + 
         Rational[-1, 8] 3^Rational[1, 2]), Rational[
       3, 2]}, {-1.4433756729740643`, 1.5}]], 
    PointBox[NCache[{
      3^Rational[1, 2] + 
       2 (Rational[-1, 8] 3^Rational[-1, 2] + 
         Rational[-1, 8] 3^Rational[1, 2]), 1}, {1.1547005383792515`, 1}]], 
    PointBox[NCache[{
      Rational[1, 2] 3^Rational[1, 2] + 
       2 (Rational[-1, 8] 3^Rational[-1, 2] + 
         Rational[-1, 8] 3^Rational[1, 2]), Rational[3, 2]}, {
      0.28867513459481287`, 1.5}]], 
    PointBox[NCache[{
      2 (Rational[-1, 8] 3^Rational[-1, 2] + 
        Rational[-1, 8] 3^Rational[1, 2]), 2}, {-0.5773502691896257, 2}]], 
    PointBox[NCache[{Rational[1, 4] 3^Rational[1, 2], Rational[-7, 4]}, {
      0.4330127018922193, -1.75}]], 
    PointBox[NCache[{
      Rational[-1, 4] 3^Rational[1, 2], 
       Rational[-5, 4]}, {-0.4330127018922193, -1.25}]], 
    PointBox[NCache[{
      Rational[-3, 4] 3^Rational[1, 2], 
       Rational[-3, 4]}, {-1.299038105676658, -0.75}]], 
    PointBox[NCache[{Rational[3, 4] 3^Rational[1, 2], Rational[-5, 4]}, {
      1.299038105676658, -1.25}]], 
    PointBox[NCache[{Rational[1, 4] 3^Rational[1, 2], Rational[-3, 4]}, {
      0.4330127018922193, -0.75}]], 
    PointBox[NCache[{
      Rational[-1, 4] 3^Rational[1, 2], 
       Rational[-1, 4]}, {-0.4330127018922193, -0.25}]], 
    PointBox[NCache[{
      Rational[-3, 4] 3^Rational[1, 2], Rational[1, 4]}, {-1.299038105676658, 
      0.25}]], PointBox[
     NCache[{Rational[5, 4] 3^Rational[1, 2], Rational[-3, 4]}, {
      2.1650635094610964`, -0.75}]], 
    PointBox[NCache[{Rational[3, 4] 3^Rational[1, 2], Rational[-1, 4]}, {
      1.299038105676658, -0.25}]], 
    PointBox[NCache[{Rational[1, 4] 3^Rational[1, 2], Rational[1, 4]}, {
      0.4330127018922193, 0.25}]], 
    PointBox[NCache[{
      Rational[-1, 4] 3^Rational[1, 2], Rational[3, 4]}, {-0.4330127018922193,
       0.75}]], 
    PointBox[NCache[{
      Rational[-3, 4] 3^Rational[1, 2], Rational[5, 4]}, {-1.299038105676658, 
      1.25}]], PointBox[
     NCache[{Rational[5, 4] 3^Rational[1, 2], Rational[1, 4]}, {
      2.1650635094610964`, 0.25}]], 
    PointBox[NCache[{Rational[3, 4] 3^Rational[1, 2], Rational[3, 4]}, {
      1.299038105676658, 0.75}]], 
    PointBox[NCache[{Rational[1, 4] 3^Rational[1, 2], Rational[5, 4]}, {
      0.4330127018922193, 1.25}]], 
    PointBox[NCache[{
      Rational[-1, 4] 3^Rational[1, 2], Rational[7, 4]}, {-0.4330127018922193,
       1.75}]], 
    PointBox[NCache[{Rational[5, 4] 3^Rational[1, 2], Rational[5, 4]}, {
      2.1650635094610964`, 1.25}]], 
    PointBox[NCache[{Rational[3, 4] 3^Rational[1, 2], Rational[7, 4]}, {
      1.299038105676658, 1.75}]], 
    PointBox[NCache[{Rational[1, 4] 3^Rational[1, 2], Rational[9, 4]}, {
      0.4330127018922193, 2.25}]], 
    PointBox[NCache[{
      Rational[-1, 8] 3^Rational[-1, 2] + Rational[1, 8] 3^Rational[1, 2], 
       Rational[-7, 4]}, {0.14433756729740643`, -1.75}]], 
    PointBox[NCache[{
      Rational[-1, 8] 3^Rational[-1, 2] + Rational[-3, 8] 3^Rational[1, 2], 
       Rational[-5, 4]}, {-0.7216878364870323, -1.25}]], 
    PointBox[NCache[{
      Rational[-1, 8] 3^Rational[-1, 2] + Rational[-7, 8] 3^Rational[1, 2], 
       Rational[-3, 4]}, {-1.5877132402714709`, -0.75}]], 
    PointBox[NCache[{
      Rational[-1, 8] 3^Rational[-1, 2] + Rational[5, 8] 3^Rational[1, 2], 
       Rational[-5, 4]}, {1.010362971081845, -1.25}]], 
    PointBox[NCache[{
      Rational[-1, 8] 3^Rational[-1, 2] + Rational[1, 8] 3^Rational[1, 2], 
       Rational[-3, 4]}, {0.14433756729740643`, -0.75}]], 
    PointBox[NCache[{
      Rational[-1, 8] 3^Rational[-1, 2] + Rational[-3, 8] 3^Rational[1, 2], 
       Rational[-1, 4]}, {-0.7216878364870323, -0.25}]], 
    PointBox[NCache[{
      Rational[-1, 8] 3^Rational[-1, 2] + Rational[-7, 8] 3^Rational[1, 2], 
       Rational[1, 4]}, {-1.5877132402714709`, 0.25}]], 
    PointBox[NCache[{
      Rational[-1, 8] 3^Rational[-1, 2] + Rational[9, 8] 3^Rational[1, 2], 
       Rational[-3, 4]}, {1.8763883748662835`, -0.75}]], 
    PointBox[NCache[{
      Rational[-1, 8] 3^Rational[-1, 2] + Rational[5, 8] 3^Rational[1, 2], 
       Rational[-1, 4]}, {1.010362971081845, -0.25}]], 
    PointBox[NCache[{
      Rational[-1, 8] 3^Rational[-1, 2] + Rational[1, 8] 3^Rational[1, 2], 
       Rational[1, 4]}, {0.14433756729740643`, 0.25}]], 
    PointBox[NCache[{
      Rational[-1, 8] 3^Rational[-1, 2] + Rational[-3, 8] 3^Rational[1, 2], 
       Rational[3, 4]}, {-0.7216878364870323, 0.75}]], 
    PointBox[NCache[{
      Rational[-1, 8] 3^Rational[-1, 2] + Rational[-7, 8] 3^Rational[1, 2], 
       Rational[5, 4]}, {-1.5877132402714709`, 1.25}]], 
    PointBox[NCache[{
      Rational[-1, 8] 3^Rational[-1, 2] + Rational[9, 8] 3^Rational[1, 2], 
       Rational[1, 4]}, {1.8763883748662835`, 0.25}]], 
    PointBox[
     NCache[{Rational[-1, 8] 3^Rational[-1, 2] + 
       Rational[5, 8] 3^Rational[1, 2], Rational[3, 4]}, {1.010362971081845, 
      0.75}]], PointBox[
     NCache[{Rational[-1, 8] 3^Rational[-1, 2] + 
       Rational[1, 8] 3^Rational[1, 2], Rational[5, 4]}, {
      0.14433756729740643`, 1.25}]], 
    PointBox[NCache[{
      Rational[-1, 8] 3^Rational[-1, 2] + Rational[-3, 8] 3^Rational[1, 2], 
       Rational[7, 4]}, {-0.7216878364870323, 1.75}]], 
    PointBox[NCache[{
      Rational[-1, 8] 3^Rational[-1, 2] + Rational[9, 8] 3^Rational[1, 2], 
       Rational[5, 4]}, {1.8763883748662835`, 1.25}]], 
    PointBox[NCache[{
      Rational[-1, 8] 3^Rational[-1, 2] + Rational[5, 8] 3^Rational[1, 2], 
       Rational[7, 4]}, {1.010362971081845, 1.75}]], 
    PointBox[NCache[{
      Rational[-1, 8] 3^Rational[-1, 2] + Rational[1, 8] 3^Rational[1, 2], 
       Rational[9, 4]}, {0.14433756729740643`, 2.25}]], 
    PointBox[NCache[{
      Rational[-1, 4] 3^Rational[-1, 2], 
       Rational[-7, 4]}, {-0.14433756729740646`, -1.75}]], 
    PointBox[NCache[{
      Rational[-1, 4] 3^Rational[-1, 2] + Rational[-1, 2] 3^Rational[1, 2], 
       Rational[-5, 4]}, {-1.0103629710818451`, -1.25}]], 
    PointBox[NCache[{
      Rational[-1, 4] 3^Rational[-1, 2] - 3^Rational[1, 2], 
       Rational[-3, 4]}, {-1.8763883748662837`, -0.75}]], 
    PointBox[NCache[{
      Rational[-1, 4] 3^Rational[-1, 2] + Rational[1, 2] 3^Rational[1, 2], 
       Rational[-5, 4]}, {0.7216878364870322, -1.25}]], 
    PointBox[NCache[{
      Rational[-1, 4] 3^Rational[-1, 2], 
       Rational[-3, 4]}, {-0.14433756729740646`, -0.75}]], 
    PointBox[NCache[{
      Rational[-1, 4] 3^Rational[-1, 2] + Rational[-1, 2] 3^Rational[1, 2], 
       Rational[-1, 4]}, {-1.0103629710818451`, -0.25}]], 
    PointBox[NCache[{
      Rational[-1, 4] 3^Rational[-1, 2] - 3^Rational[1, 2], Rational[
       1, 4]}, {-1.8763883748662837`, 0.25}]], 
    PointBox[NCache[{
      Rational[-1, 4] 3^Rational[-1, 2] + 3^Rational[1, 2], 
       Rational[-3, 4]}, {1.5877132402714706`, -0.75}]], 
    PointBox[NCache[{
      Rational[-1, 4] 3^Rational[-1, 2] + Rational[1, 2] 3^Rational[1, 2], 
       Rational[-1, 4]}, {0.7216878364870322, -0.25}]], 
    PointBox[NCache[{
      Rational[-1, 4] 3^Rational[-1, 2], Rational[
       1, 4]}, {-0.14433756729740646`, 0.25}]], 
    PointBox[NCache[{
      Rational[-1, 4] 3^Rational[-1, 2] + Rational[-1, 2] 3^Rational[1, 2], 
       Rational[3, 4]}, {-1.0103629710818451`, 0.75}]], 
    PointBox[NCache[{
      Rational[-1, 4] 3^Rational[-1, 2] - 3^Rational[1, 2], Rational[
       5, 4]}, {-1.8763883748662837`, 1.25}]], 
    PointBox[NCache[{
      Rational[-1, 4] 3^Rational[-1, 2] + 3^Rational[1, 2], Rational[1, 4]}, {
      1.5877132402714706`, 0.25}]], 
    PointBox[NCache[{
      Rational[-1, 4] 3^Rational[-1, 2] + Rational[1, 2] 3^Rational[1, 2], 
       Rational[3, 4]}, {0.7216878364870322, 0.75}]], 
    PointBox[NCache[{
      Rational[-1, 4] 3^Rational[-1, 2], Rational[
       5, 4]}, {-0.14433756729740646`, 1.25}]], 
    PointBox[NCache[{
      Rational[-1, 4] 3^Rational[-1, 2] + Rational[-1, 2] 3^Rational[1, 2], 
       Rational[7, 4]}, {-1.0103629710818451`, 1.75}]], 
    PointBox[NCache[{
      Rational[-1, 4] 3^Rational[-1, 2] + 3^Rational[1, 2], Rational[5, 4]}, {
      1.5877132402714706`, 1.25}]], 
    PointBox[NCache[{
      Rational[-1, 4] 3^Rational[-1, 2] + Rational[1, 2] 3^Rational[1, 2], 
       Rational[7, 4]}, {0.7216878364870322, 1.75}]], 
    PointBox[NCache[{
      Rational[-1, 4] 3^Rational[-1, 2], Rational[
       9, 4]}, {-0.14433756729740646`, 2.25}]], 
    PointBox[NCache[{
      Rational[-1, 8] 3^Rational[-1, 2] + Rational[1, 8] 3^Rational[1, 2] + 
       2 (Rational[-1, 8] 3^Rational[-1, 2] + 
         Rational[-1, 8] 3^Rational[1, 2]), 
       Rational[-7, 4]}, {-0.4330127018922193, -1.75}]], 
    PointBox[NCache[{
      Rational[-1, 8] 3^Rational[-1, 2] + Rational[-3, 8] 3^Rational[1, 2] + 
       2 (Rational[-1, 8] 3^Rational[-1, 2] + 
         Rational[-1, 8] 3^Rational[1, 2]), 
       Rational[-5, 4]}, {-1.299038105676658, -1.25}]], 
    PointBox[NCache[{
      Rational[-1, 8] 3^Rational[-1, 2] + Rational[-7, 8] 3^Rational[1, 2] + 
       2 (Rational[-1, 8] 3^Rational[-1, 2] + 
         Rational[-1, 8] 3^Rational[1, 2]), 
       Rational[-3, 4]}, {-2.1650635094610964`, -0.75}]], 
    PointBox[
     NCache[{Rational[-1, 8] 3^Rational[-1, 2] + 
       Rational[5, 8] 3^Rational[1, 2] + 
       2 (Rational[-1, 8] 3^Rational[-1, 2] + 
         Rational[-1, 8] 3^Rational[1, 2]), Rational[-5, 4]}, {
      0.4330127018922192, -1.25}]], 
    PointBox[NCache[{
      Rational[-1, 8] 3^Rational[-1, 2] + Rational[1, 8] 3^Rational[1, 2] + 
       2 (Rational[-1, 8] 3^Rational[-1, 2] + 
         Rational[-1, 8] 3^Rational[1, 2]), 
       Rational[-3, 4]}, {-0.4330127018922193, -0.75}]], 
    PointBox[NCache[{
      Rational[-1, 8] 3^Rational[-1, 2] + Rational[-3, 8] 3^Rational[1, 2] + 
       2 (Rational[-1, 8] 3^Rational[-1, 2] + 
         Rational[-1, 8] 3^Rational[1, 2]), 
       Rational[-1, 4]}, {-1.299038105676658, -0.25}]], 
    PointBox[NCache[{
      Rational[-1, 8] 3^Rational[-1, 2] + Rational[-7, 8] 3^Rational[1, 2] + 
       2 (Rational[-1, 8] 3^Rational[-1, 2] + 
         Rational[-1, 8] 3^Rational[1, 2]), Rational[
       1, 4]}, {-2.1650635094610964`, 0.25}]], 
    PointBox[NCache[{
      Rational[-1, 8] 3^Rational[-1, 2] + Rational[9, 8] 3^Rational[1, 2] + 
       2 (Rational[-1, 8] 3^Rational[-1, 2] + 
         Rational[-1, 8] 3^Rational[1, 2]), Rational[-3, 4]}, {
      1.2990381056766578`, -0.75}]], 
    PointBox[NCache[{
      Rational[-1, 8] 3^Rational[-1, 2] + Rational[5, 8] 3^Rational[1, 2] + 
       2 (Rational[-1, 8] 3^Rational[-1, 2] + 
         Rational[-1, 8] 3^Rational[1, 2]), Rational[-1, 4]}, {
      0.4330127018922192, -0.25}]], 
    PointBox[NCache[{
      Rational[-1, 8] 3^Rational[-1, 2] + Rational[1, 8] 3^Rational[1, 2] + 
       2 (Rational[-1, 8] 3^Rational[-1, 2] + 
         Rational[-1, 8] 3^Rational[1, 2]), Rational[
       1, 4]}, {-0.4330127018922193, 0.25}]], 
    PointBox[NCache[{
      Rational[-1, 8] 3^Rational[-1, 2] + Rational[-3, 8] 3^Rational[1, 2] + 
       2 (Rational[-1, 8] 3^Rational[-1, 2] + 
         Rational[-1, 8] 3^Rational[1, 2]), Rational[
       3, 4]}, {-1.299038105676658, 0.75}]], 
    PointBox[NCache[{
      Rational[-1, 8] 3^Rational[-1, 2] + Rational[-7, 8] 3^Rational[1, 2] + 
       2 (Rational[-1, 8] 3^Rational[-1, 2] + 
         Rational[-1, 8] 3^Rational[1, 2]), Rational[
       5, 4]}, {-2.1650635094610964`, 1.25}]], 
    PointBox[NCache[{
      Rational[-1, 8] 3^Rational[-1, 2] + Rational[9, 8] 3^Rational[1, 2] + 
       2 (Rational[-1, 8] 3^Rational[-1, 2] + 
         Rational[-1, 8] 3^Rational[1, 2]), Rational[1, 4]}, {
      1.2990381056766578`, 0.25}]], 
    PointBox[NCache[{
      Rational[-1, 8] 3^Rational[-1, 2] + Rational[5, 8] 3^Rational[1, 2] + 
       2 (Rational[-1, 8] 3^Rational[-1, 2] + 
         Rational[-1, 8] 3^Rational[1, 2]), Rational[3, 4]}, {
      0.4330127018922192, 0.75}]], 
    PointBox[NCache[{
      Rational[-1, 8] 3^Rational[-1, 2] + Rational[1, 8] 3^Rational[1, 2] + 
       2 (Rational[-1, 8] 3^Rational[-1, 2] + 
         Rational[-1, 8] 3^Rational[1, 2]), Rational[
       5, 4]}, {-0.4330127018922193, 1.25}]], 
    PointBox[NCache[{
      Rational[-1, 8] 3^Rational[-1, 2] + Rational[-3, 8] 3^Rational[1, 2] + 
       2 (Rational[-1, 8] 3^Rational[-1, 2] + 
         Rational[-1, 8] 3^Rational[1, 2]), Rational[
       7, 4]}, {-1.299038105676658, 1.75}]], 
    PointBox[NCache[{
      Rational[-1, 8] 3^Rational[-1, 2] + Rational[9, 8] 3^Rational[1, 2] + 
       2 (Rational[-1, 8] 3^Rational[-1, 2] + 
         Rational[-1, 8] 3^Rational[1, 2]), Rational[5, 4]}, {
      1.2990381056766578`, 1.25}]], 
    PointBox[NCache[{
      Rational[-1, 8] 3^Rational[-1, 2] + Rational[5, 8] 3^Rational[1, 2] + 
       2 (Rational[-1, 8] 3^Rational[-1, 2] + 
         Rational[-1, 8] 3^Rational[1, 2]), Rational[7, 4]}, {
      0.4330127018922192, 1.75}]], 
    PointBox[NCache[{
      Rational[-1, 8] 3^Rational[-1, 2] + Rational[1, 8] 3^Rational[1, 2] + 
       2 (Rational[-1, 8] 3^Rational[-1, 2] + 
         Rational[-1, 8] 3^Rational[1, 2]), Rational[
       9, 4]}, {-0.4330127018922193, 2.25}]], 
    PointBox[NCache[{
      2 (Rational[-1, 8] 3^Rational[-1, 2] + Rational[1, 8] 3^Rational[1, 2]),
        Rational[-3, 2]}, {0.28867513459481287`, -1.5}]], 
    PointBox[NCache[{
      Rational[-1, 2] 3^Rational[1, 2] + 
       2 (Rational[-1, 8] 3^Rational[-1, 2] + 
         Rational[1, 8] 3^Rational[1, 2]), -1}, {-0.5773502691896257, -1}]], 
    PointBox[NCache[{-3^Rational[1, 2] + 
       2 (Rational[-1, 8] 3^Rational[-1, 2] + 
         Rational[1, 8] 3^Rational[1, 2]), 
       Rational[-1, 2]}, {-1.4433756729740643`, -0.5}]], 
    PointBox[NCache[{
      Rational[1, 2] 3^Rational[1, 2] + 
       2 (Rational[-1, 8] 3^Rational[-1, 2] + 
         Rational[1, 8] 3^Rational[1, 2]), -1}, {1.1547005383792515`, -1}]], 
    PointBox[NCache[{
      2 (Rational[-1, 8] 3^Rational[-1, 2] + Rational[1, 8] 3^Rational[1, 2]),
        Rational[-1, 2]}, {0.28867513459481287`, -0.5}]], 
    PointBox[NCache[{
      Rational[-1, 2] 3^Rational[1, 2] + 
       2 (Rational[-1, 8] 3^Rational[-1, 2] + 
         Rational[1, 8] 3^Rational[1, 2]), 0}, {-0.5773502691896257, 0}]], 
    PointBox[NCache[{-3^Rational[1, 2] + 
       2 (Rational[-1, 8] 3^Rational[-1, 2] + 
         Rational[1, 8] 3^Rational[1, 2]), Rational[
       1, 2]}, {-1.4433756729740643`, 0.5}]], 
    PointBox[NCache[{
      3^Rational[1, 2] + 
       2 (Rational[-1, 8] 3^Rational[-1, 2] + 
         Rational[1, 8] 3^Rational[1, 2]), Rational[-1, 2]}, {
      2.02072594216369, -0.5}]], 
    PointBox[NCache[{
      Rational[1, 2] 3^Rational[1, 2] + 
       2 (Rational[-1, 8] 3^Rational[-1, 2] + 
         Rational[1, 8] 3^Rational[1, 2]), 0}, {1.1547005383792515`, 0}]], 
    PointBox[NCache[{
      2 (Rational[-1, 8] 3^Rational[-1, 2] + Rational[1, 8] 3^Rational[1, 2]),
        Rational[1, 2]}, {0.28867513459481287`, 0.5}]], 
    PointBox[NCache[{
      Rational[-1, 2] 3^Rational[1, 2] + 
       2 (Rational[-1, 8] 3^Rational[-1, 2] + 
         Rational[1, 8] 3^Rational[1, 2]), 1}, {-0.5773502691896257, 1}]], 
    PointBox[NCache[{-3^Rational[1, 2] + 
       2 (Rational[-1, 8] 3^Rational[-1, 2] + 
         Rational[1, 8] 3^Rational[1, 2]), Rational[
       3, 2]}, {-1.4433756729740643`, 1.5}]], 
    PointBox[NCache[{
      3^Rational[1, 2] + 
       2 (Rational[-1, 8] 3^Rational[-1, 2] + 
         Rational[1, 8] 3^Rational[1, 2]), Rational[1, 2]}, {2.02072594216369,
       0.5}]], PointBox[
     NCache[{Rational[1, 2] 3^Rational[1, 2] + 
       2 (Rational[-1, 8] 3^Rational[-1, 2] + 
         Rational[1, 8] 3^Rational[1, 2]), 1}, {1.1547005383792515`, 1}]], 
    PointBox[NCache[{
      2 (Rational[-1, 8] 3^Rational[-1, 2] + Rational[1, 8] 3^Rational[1, 2]),
        Rational[3, 2]}, {0.28867513459481287`, 1.5}]], 
    PointBox[NCache[{
      Rational[-1, 2] 3^Rational[1, 2] + 
       2 (Rational[-1, 8] 3^Rational[-1, 2] + 
         Rational[1, 8] 3^Rational[1, 2]), 2}, {-0.5773502691896257, 2}]], 
    PointBox[NCache[{
      3^Rational[1, 2] + 
       2 (Rational[-1, 8] 3^Rational[-1, 2] + 
         Rational[1, 8] 3^Rational[1, 2]), Rational[3, 2]}, {2.02072594216369,
       1.5}]], PointBox[
     NCache[{Rational[1, 2] 3^Rational[1, 2] + 
       2 (Rational[-1, 8] 3^Rational[-1, 2] + 
         Rational[1, 8] 3^Rational[1, 2]), 2}, {1.1547005383792515`, 2}]], 
    PointBox[NCache[{
      2 (Rational[-1, 8] 3^Rational[-1, 2] + Rational[1, 8] 3^Rational[1, 2]),
        Rational[5, 2]}, {0.28867513459481287`, 2.5}]], 
    PointBox[NCache[{
      Rational[-1, 8] 3^Rational[-1, 2] + Rational[-1, 8] 3^Rational[1, 2] + 
       2 (Rational[-1, 8] 3^Rational[-1, 2] + 
         Rational[1, 8] 3^Rational[1, 2]), Rational[-3, 2]}, {0., -1.5}]], 
    PointBox[NCache[{
      Rational[-1, 8] 3^Rational[-1, 2] + Rational[-5, 8] 3^Rational[1, 2] + 
       2 (Rational[-1, 8] 3^Rational[-1, 2] + 
         Rational[1, 8] 3^Rational[1, 2]), -1}, {-0.8660254037844386, -1}]], 
    PointBox[NCache[{
      Rational[-1, 8] 3^Rational[-1, 2] + Rational[-9, 8] 3^Rational[1, 2] + 
       2 (Rational[-1, 8] 3^Rational[-1, 2] + 
         Rational[1, 8] 3^Rational[1, 2]), 
       Rational[-1, 2]}, {-1.732050807568877, -0.5}]], 
    PointBox[NCache[{
      Rational[-1, 8] 3^Rational[-1, 2] + Rational[3, 8] 3^Rational[1, 2] + 
       2 (Rational[-1, 8] 3^Rational[-1, 2] + 
         Rational[1, 8] 3^Rational[1, 2]), -1}, {0.8660254037844386, -1}]], 
    PointBox[NCache[{
      Rational[-1, 8] 3^Rational[-1, 2] + Rational[-1, 8] 3^Rational[1, 2] + 
       2 (Rational[-1, 8] 3^Rational[-1, 2] + 
         Rational[1, 8] 3^Rational[1, 2]), Rational[-1, 2]}, {0., -0.5}]], 
    PointBox[NCache[{
      Rational[-1, 8] 3^Rational[-1, 2] + Rational[-5, 8] 3^Rational[1, 2] + 
       2 (Rational[-1, 8] 3^Rational[-1, 2] + 
         Rational[1, 8] 3^Rational[1, 2]), 0}, {-0.8660254037844386, 0}]], 
    PointBox[NCache[{
      Rational[-1, 8] 3^Rational[-1, 2] + Rational[-9, 8] 3^Rational[1, 2] + 
       2 (Rational[-1, 8] 3^Rational[-1, 2] + 
         Rational[1, 8] 3^Rational[1, 2]), Rational[
       1, 2]}, {-1.732050807568877, 0.5}]], 
    PointBox[NCache[{
      Rational[-1, 8] 3^Rational[-1, 2] + Rational[7, 8] 3^Rational[1, 2] + 
       2 (Rational[-1, 8] 3^Rational[-1, 2] + 
         Rational[1, 8] 3^Rational[1, 2]), Rational[-1, 2]}, {
      1.7320508075688772`, -0.5}]], 
    PointBox[NCache[{
      Rational[-1, 8] 3^Rational[-1, 2] + Rational[3, 8] 3^Rational[1, 2] + 
       2 (Rational[-1, 8] 3^Rational[-1, 2] + 
         Rational[1, 8] 3^Rational[1, 2]), 0}, {0.8660254037844386, 0}]], 
    PointBox[NCache[{
      Rational[-1, 8] 3^Rational[-1, 2] + Rational[-1, 8] 3^Rational[1, 2] + 
       2 (Rational[-1, 8] 3^Rational[-1, 2] + 
         Rational[1, 8] 3^Rational[1, 2]), Rational[1, 2]}, {0., 0.5}]], 
    PointBox[NCache[{
      Rational[-1, 8] 3^Rational[-1, 2] + Rational[-5, 8] 3^Rational[1, 2] + 
       2 (Rational[-1, 8] 3^Rational[-1, 2] + 
         Rational[1, 8] 3^Rational[1, 2]), 1}, {-0.8660254037844386, 1}]], 
    PointBox[NCache[{
      Rational[-1, 8] 3^Rational[-1, 2] + Rational[-9, 8] 3^Rational[1, 2] + 
       2 (Rational[-1, 8] 3^Rational[-1, 2] + 
         Rational[1, 8] 3^Rational[1, 2]), Rational[
       3, 2]}, {-1.732050807568877, 1.5}]], 
    PointBox[NCache[{
      Rational[-1, 8] 3^Rational[-1, 2] + Rational[7, 8] 3^Rational[1, 2] + 
       2 (Rational[-1, 8] 3^Rational[-1, 2] + 
         Rational[1, 8] 3^Rational[1, 2]), Rational[1, 2]}, {
      1.7320508075688772`, 0.5}]], 
    PointBox[NCache[{
      Rational[-1, 8] 3^Rational[-1, 2] + Rational[3, 8] 3^Rational[1, 2] + 
       2 (Rational[-1, 8] 3^Rational[-1, 2] + 
         Rational[1, 8] 3^Rational[1, 2]), 1}, {0.8660254037844386, 1}]], 
    PointBox[NCache[{
      Rational[-1, 8] 3^Rational[-1, 2] + Rational[-1, 8] 3^Rational[1, 2] + 
       2 (Rational[-1, 8] 3^Rational[-1, 2] + 
         Rational[1, 8] 3^Rational[1, 2]), Rational[3, 2]}, {0., 1.5}]], 
    PointBox[NCache[{
      Rational[-1, 8] 3^Rational[-1, 2] + Rational[-5, 8] 3^Rational[1, 2] + 
       2 (Rational[-1, 8] 3^Rational[-1, 2] + 
         Rational[1, 8] 3^Rational[1, 2]), 2}, {-0.8660254037844386, 2}]], 
    PointBox[
     NCache[{Rational[-1, 8] 3^Rational[-1, 2] + 
       Rational[7, 8] 3^Rational[1, 2] + 
       2 (Rational[-1, 8] 3^Rational[-1, 2] + 
         Rational[1, 8] 3^Rational[1, 2]), Rational[3, 2]}, {
      1.7320508075688772`, 1.5}]], 
    PointBox[NCache[{
      Rational[-1, 8] 3^Rational[-1, 2] + Rational[3, 8] 3^Rational[1, 2] + 
       2 (Rational[-1, 8] 3^Rational[-1, 2] + 
         Rational[1, 8] 3^Rational[1, 2]), 2}, {0.8660254037844386, 2}]], 
    PointBox[NCache[{
      Rational[-1, 8] 3^Rational[-1, 2] + Rational[-1, 8] 3^Rational[1, 2] + 
       2 (Rational[-1, 8] 3^Rational[-1, 2] + 
         Rational[1, 8] 3^Rational[1, 2]), Rational[5, 2]}, {0., 2.5}]], 
    PointBox[NCache[{
      2 (Rational[-1, 8] 3^Rational[-1, 2] + 
         Rational[-1, 8] 3^Rational[1, 2]) + 
       2 (Rational[-1, 8] 3^Rational[-1, 2] + 
         Rational[1, 8] 3^Rational[1, 2]), 
       Rational[-3, 2]}, {-0.28867513459481287`, -1.5}]], 
    PointBox[NCache[{
      Rational[-1, 2] 3^Rational[1, 2] + 
       2 (Rational[-1, 8] 3^Rational[-1, 2] + 
         Rational[-1, 8] 3^Rational[1, 2]) + 
       2 (Rational[-1, 8] 3^Rational[-1, 2] + 
         Rational[1, 8] 3^Rational[1, 2]), -1}, {-1.1547005383792515`, -1}]], 
    PointBox[NCache[{-3^Rational[1, 2] + 
       2 (Rational[-1, 8] 3^Rational[-1, 2] + 
         Rational[-1, 8] 3^Rational[1, 2]) + 
       2 (Rational[-1, 8] 3^Rational[-1, 2] + 
         Rational[1, 8] 3^Rational[1, 2]), 
       Rational[-1, 2]}, {-2.02072594216369, -0.5}]], 
    PointBox[NCache[{
      Rational[1, 2] 3^Rational[1, 2] + 
       2 (Rational[-1, 8] 3^Rational[-1, 2] + 
         Rational[-1, 8] 3^Rational[1, 2]) + 
       2 (Rational[-1, 8] 3^Rational[-1, 2] + 
         Rational[1, 8] 3^Rational[1, 2]), -1}, {0.5773502691896257, -1}]], 
    PointBox[NCache[{
      2 (Rational[-1, 8] 3^Rational[-1, 2] + 
         Rational[-1, 8] 3^Rational[1, 2]) + 
       2 (Rational[-1, 8] 3^Rational[-1, 2] + 
         Rational[1, 8] 3^Rational[1, 2]), 
       Rational[-1, 2]}, {-0.28867513459481287`, -0.5}]], 
    PointBox[NCache[{
      Rational[-1, 2] 3^Rational[1, 2] + 
       2 (Rational[-1, 8] 3^Rational[-1, 2] + 
         Rational[-1, 8] 3^Rational[1, 2]) + 
       2 (Rational[-1, 8] 3^Rational[-1, 2] + 
         Rational[1, 8] 3^Rational[1, 2]), 0}, {-1.1547005383792515`, 0}]], 
    PointBox[NCache[{-3^Rational[1, 2] + 
       2 (Rational[-1, 8] 3^Rational[-1, 2] + 
         Rational[-1, 8] 3^Rational[1, 2]) + 
       2 (Rational[-1, 8] 3^Rational[-1, 2] + 
         Rational[1, 8] 3^Rational[1, 2]), Rational[
       1, 2]}, {-2.02072594216369, 0.5}]], 
    PointBox[NCache[{
      3^Rational[1, 2] + 
       2 (Rational[-1, 8] 3^Rational[-1, 2] + 
         Rational[-1, 8] 3^Rational[1, 2]) + 
       2 (Rational[-1, 8] 3^Rational[-1, 2] + 
         Rational[1, 8] 3^Rational[1, 2]), Rational[-1, 2]}, {
      1.4433756729740643`, -0.5}]], 
    PointBox[NCache[{
      Rational[1, 2] 3^Rational[1, 2] + 
       2 (Rational[-1, 8] 3^Rational[-1, 2] + 
         Rational[-1, 8] 3^Rational[1, 2]) + 
       2 (Rational[-1, 8] 3^Rational[-1, 2] + 
         Rational[1, 8] 3^Rational[1, 2]), 0}, {0.5773502691896257, 0}]], 
    PointBox[NCache[{
      2 (Rational[-1, 8] 3^Rational[-1, 2] + 
         Rational[-1, 8] 3^Rational[1, 2]) + 
       2 (Rational[-1, 8] 3^Rational[-1, 2] + 
         Rational[1, 8] 3^Rational[1, 2]), Rational[
       1, 2]}, {-0.28867513459481287`, 0.5}]], 
    PointBox[NCache[{
      Rational[-1, 2] 3^Rational[1, 2] + 
       2 (Rational[-1, 8] 3^Rational[-1, 2] + 
         Rational[-1, 8] 3^Rational[1, 2]) + 
       2 (Rational[-1, 8] 3^Rational[-1, 2] + 
         Rational[1, 8] 3^Rational[1, 2]), 1}, {-1.1547005383792515`, 1}]], 
    PointBox[NCache[{-3^Rational[1, 2] + 
       2 (Rational[-1, 8] 3^Rational[-1, 2] + 
         Rational[-1, 8] 3^Rational[1, 2]) + 
       2 (Rational[-1, 8] 3^Rational[-1, 2] + 
         Rational[1, 8] 3^Rational[1, 2]), Rational[
       3, 2]}, {-2.02072594216369, 1.5}]], 
    PointBox[NCache[{
      3^Rational[1, 2] + 
       2 (Rational[-1, 8] 3^Rational[-1, 2] + 
         Rational[-1, 8] 3^Rational[1, 2]) + 
       2 (Rational[-1, 8] 3^Rational[-1, 2] + 
         Rational[1, 8] 3^Rational[1, 2]), Rational[1, 2]}, {
      1.4433756729740643`, 0.5}]], 
    PointBox[NCache[{
      Rational[1, 2] 3^Rational[1, 2] + 
       2 (Rational[-1, 8] 3^Rational[-1, 2] + 
         Rational[-1, 8] 3^Rational[1, 2]) + 
       2 (Rational[-1, 8] 3^Rational[-1, 2] + 
         Rational[1, 8] 3^Rational[1, 2]), 1}, {0.5773502691896257, 1}]], 
    PointBox[
     NCache[{2 (Rational[-1, 8] 3^Rational[-1, 2] + 
         Rational[-1, 8] 3^Rational[1, 2]) + 
       2 (Rational[-1, 8] 3^Rational[-1, 2] + 
         Rational[1, 8] 3^Rational[1, 2]), Rational[
       3, 2]}, {-0.28867513459481287`, 1.5}]], 
    PointBox[NCache[{
      Rational[-1, 2] 3^Rational[1, 2] + 
       2 (Rational[-1, 8] 3^Rational[-1, 2] + 
         Rational[-1, 8] 3^Rational[1, 2]) + 
       2 (Rational[-1, 8] 3^Rational[-1, 2] + 
         Rational[1, 8] 3^Rational[1, 2]), 2}, {-1.1547005383792515`, 2}]], 
    PointBox[NCache[{
      3^Rational[1, 2] + 
       2 (Rational[-1, 8] 3^Rational[-1, 2] + 
         Rational[-1, 8] 3^Rational[1, 2]) + 
       2 (Rational[-1, 8] 3^Rational[-1, 2] + 
         Rational[1, 8] 3^Rational[1, 2]), Rational[3, 2]}, {
      1.4433756729740643`, 1.5}]], 
    PointBox[NCache[{
      Rational[1, 2] 3^Rational[1, 2] + 
       2 (Rational[-1, 8] 3^Rational[-1, 2] + 
         Rational[-1, 8] 3^Rational[1, 2]) + 
       2 (Rational[-1, 8] 3^Rational[-1, 2] + 
         Rational[1, 8] 3^Rational[1, 2]), 2}, {0.5773502691896257, 2}]], 
    PointBox[NCache[{
      2 (Rational[-1, 8] 3^Rational[-1, 2] + 
         Rational[-1, 8] 3^Rational[1, 2]) + 
       2 (Rational[-1, 8] 3^Rational[-1, 2] + 
         Rational[1, 8] 3^Rational[1, 2]), Rational[
       5, 2]}, {-0.28867513459481287`, 2.5}]]}}]], "Output",
 CellChangeTimes->{{3.7790268674744616`*^9, 3.7790268803730974`*^9}, 
   3.77902691586182*^9, {3.779027136415918*^9, 3.7790271675421486`*^9}, 
   3.7790274143942027`*^9, {3.7790274553478413`*^9, 3.779027478062853*^9}, {
   3.7790275926442766`*^9, 3.779027680915881*^9}, {3.7790277921963673`*^9, 
   3.779027826688657*^9}, {3.7790282985222807`*^9, 3.779028318412946*^9}, {
   3.7790284688830376`*^9, 3.779028484027373*^9}, {3.7790285149487386`*^9, 
   3.779028519524127*^9}, 3.7790285505274067`*^9, {3.779028923597436*^9, 
   3.779028931755779*^9}, {3.7790292475234833`*^9, 3.779029268426566*^9}, {
   3.7790307455522375`*^9, 3.7790307534647384`*^9}},
 CellLabel->
  "Out[155]=",ExpressionUUID->"2480d3c1-790a-48a8-89ac-6ea1f4f3063e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"a1x", ",", "a2x"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"a1y", ",", "a2y"}], "}"}]}], "}"}], ".", 
  RowBox[{"{", 
   RowBox[{"i", ",", "j"}], "}"}]}]], "Input",
 CellChangeTimes->{{3.779027090435152*^9, 3.779027104597066*^9}},
 CellLabel->"In[72]:=",ExpressionUUID->"4d8101e8-822b-4efe-a204-edcf30364e79"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"a1x", " ", "i"}], "+", 
    RowBox[{"a2x", " ", "j"}]}], ",", 
   RowBox[{
    RowBox[{"a1y", " ", "i"}], "+", 
    RowBox[{"a2y", " ", "j"}]}]}], "}"}]], "Output",
 CellChangeTimes->{3.7790271049988537`*^9},
 CellLabel->"Out[72]=",ExpressionUUID->"2d3c833c-d305-42fa-963e-252ffa6e4758"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"b1", "=", 
  RowBox[{"4", 
   FractionBox["\[Pi]", 
    RowBox[{
     SqrtBox["3"], "am"}]], "*", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "2"], ",", 
     FractionBox[
      SqrtBox["3"], "2"], ",", "0"}], "}"}]}]}]], "Input",
 CellChangeTimes->{{3.7790303250603027`*^9, 3.779030352211802*^9}, {
  3.779030397613881*^9, 3.779030399338897*^9}},
 CellLabel->
  "In[143]:=",ExpressionUUID->"7a1c1213-9e4f-4171-80bd-50310372c2ef"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   FractionBox[
    RowBox[{"2", " ", "\[Pi]"}], 
    RowBox[{
     SqrtBox["3"], " ", "am"}]], ",", 
   FractionBox[
    RowBox[{"2", " ", "\[Pi]"}], "am"], ",", "0"}], "}"}]], "Output",
 CellChangeTimes->{3.779030352521624*^9, 3.7790304065707674`*^9},
 CellLabel->
  "Out[143]=",ExpressionUUID->"647fb2bd-b256-4be6-83f0-1c147d6ecdaf"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"b2", "=", 
  RowBox[{"4", 
   FractionBox["\[Pi]", 
    RowBox[{
     SqrtBox["3"], "am"}]], "*", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", 
      FractionBox["1", "2"]}], ",", 
     FractionBox[
      SqrtBox["3"], "2"], ",", "0"}], "}"}]}]}]], "Input",
 CellChangeTimes->{{3.7790303536919565`*^9, 3.7790303598454437`*^9}, {
  3.7790304012248197`*^9, 3.779030402498092*^9}},
 CellLabel->
  "In[144]:=",ExpressionUUID->"7e6168c0-f503-4985-94e0-b9fc640e851f"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", 
    FractionBox[
     RowBox[{"2", " ", "\[Pi]"}], 
     RowBox[{
      SqrtBox["3"], " ", "am"}]]}], ",", 
   FractionBox[
    RowBox[{"2", " ", "\[Pi]"}], "am"], ",", "0"}], "}"}]], "Output",
 CellChangeTimes->{3.7790303602632055`*^9, 3.779030407450265*^9},
 CellLabel->
  "Out[144]=",ExpressionUUID->"504e06bc-9637-4d22-8265-207d6e921af6"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"b3", "=", 
  RowBox[{"2", 
   FractionBox["\[Pi]", "am"], "*", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "1"}], "}"}]}]}]], "Input",
 CellChangeTimes->{{3.7790303610527544`*^9, 3.7790303955840626`*^9}, {
  3.7790306094859204`*^9, 3.779030618426843*^9}},
 CellLabel->
  "In[151]:=",ExpressionUUID->"4dda0aa3-8ac8-42a6-98ba-84cb05c34a7b"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0", ",", "0", ",", 
   FractionBox[
    RowBox[{"2", " ", "\[Pi]"}], "am"]}], "}"}]], "Output",
 CellChangeTimes->{
  3.7790304084427176`*^9, {3.779030609970643*^9, 3.779030619028491*^9}},
 CellLabel->
  "Out[151]=",ExpressionUUID->"1f6e8819-d5d6-42af-944c-60c4c5079071"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"2", "\[Pi]", "*", 
   RowBox[{"Inverse", "[", 
    RowBox[{"{", 
     RowBox[{"b1", ",", "b2", ",", "b3"}], "}"}], "]"}]}], "//", 
  "MatrixForm"}]], "Input",
 CellChangeTimes->{{3.7790304099008656`*^9, 3.7790304250412483`*^9}, {
  3.779030546945625*^9, 3.7790305488535357`*^9}},
 CellLabel->
  "In[152]:=",ExpressionUUID->"d5e7bd14-7ac2-4d00-a961-70fb38f0550d"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      FractionBox[
       RowBox[{
        SqrtBox["3"], " ", "am"}], "2"], 
      RowBox[{"-", 
       FractionBox[
        RowBox[{
         SqrtBox["3"], " ", "am"}], "2"]}], "0"},
     {
      FractionBox["am", "2"], 
      FractionBox["am", "2"], "0"},
     {"0", "0", "am"}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.779030412994099*^9, 3.77903042558891*^9}, 
   3.7790305493132925`*^9, {3.7790306113368626`*^9, 3.7790306208234463`*^9}},
 CellLabel->
  "Out[152]//MatrixForm=",ExpressionUUID->"bfd576bf-d5a0-42e1-8f3e-\
f4ae4161d8b0"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"kx", "=", 
   RowBox[{"Import", "[", 
    RowBox[{
     RowBox[{"NotebookDirectory", "[", "]"}], "<>", "\"\<kx.dat\>\""}], 
    "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7843202678979645`*^9, 3.784320281283342*^9}},
 CellLabel->"In[35]:=",ExpressionUUID->"9ab928d2-c391-407c-82ec-d9e2ba8f945e"],

Cell[BoxData[
 RowBox[{
  RowBox[{"ky", "=", 
   RowBox[{"Import", "[", 
    RowBox[{
     RowBox[{"NotebookDirectory", "[", "]"}], "<>", "\"\<ky.dat\>\""}], 
    "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.784320284887286*^9, 3.78432028645539*^9}},
 CellLabel->"In[36]:=",ExpressionUUID->"ada7917c-e3d0-4619-af91-f772514370d7"],

Cell[BoxData[
 RowBox[{
  RowBox[{"bc", "=", 
   RowBox[{"Import", "[", 
    RowBox[{
     RowBox[{"NotebookDirectory", "[", "]"}], "<>", "\"\<berrycur.dat\>\""}], 
    "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7843203005163727`*^9, 3.7843203141835446`*^9}},
 CellLabel->"In[37]:=",ExpressionUUID->"9746045a-28bf-4ed8-bcbb-056494a52bf4"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListDensityPlot", "[", 
  RowBox[{
   RowBox[{"Transpose", "@", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Flatten", "@", "kx"}], ",", 
      RowBox[{"Flatten", "@", "ky"}], ",", 
      RowBox[{"1000", 
       RowBox[{"Flatten", "@", "bc"}]}]}], "}"}]}], ",", 
   RowBox[{"ColorFunction", "\[Rule]", "\"\<TemperatureMap\>\""}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "Full"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7843203190537663`*^9, 3.7843203498411913`*^9}, {
  3.7843203909267645`*^9, 3.78432043522447*^9}, {3.784320672857805*^9, 
  3.784320673457491*^9}, {3.7843207100375834`*^9, 3.7843207232660313`*^9}, {
  3.784320847187295*^9, 3.784320854338213*^9}},
 CellLabel->"In[39]:=",ExpressionUUID->"953b35f7-ec61-4e23-a796-538028eb6167"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[
    GraphicsComplexBox[CompressedData["
1:eJxd3F2opedZxvGttJbAaKxosNQIbdgr6aQZxp3slbQke90zk4+qHcESUxFU
Km1ET4KjUgxYEUocP8iBPbFVhGoxNQnFUq3FVNbVg9IPW9AcKEVnKLFSG1EM
BJVqRWS//wvef09KaTqz9tq/Pvdzfzz3637qsbe965sPDg7mWw4O/v/fv/ze
i6/4nlc8kIPlX488/xuP3fb4/fmjO2545sz1b+y+8YePPX/Xv19a/vO3zs+/
9Of3XXj0Uv7x+v888euP3jQvnhz88eV/uJjLZ/cfPXP95nnHb73lO3/sbRfz
938x//aZp18/r/qJO9796GcvLP/8Zt7zzC++cOXkQn7/hsvf8YOvPzsv/9df
Xv6VP5184Jbb92eu3zG/+/k/+JPfPDs5+9R9h1/9wvm55fzf3n3+wi5XP/lP
L37m6aP59r969Nu+/46TPPG5hz/14at3zf++6z+/8o7X3Lf8+dv5gRs+9fTj
r7w3F17+0Ft/9v575p4P/fCvvu+lNy9/35vncPfC25+99qb83k2f/OfbD+6d
n3vhmZs//bl78vXb3/mRM9fvm5/85XtfvvZnd+ftF878wr8+t5u3fvcXP/8f
H9wun2fmTR/78Q/e+ORxvvTRV1/9u+cuzBOP3PrTtz1+1/L5LvK/n+W/z/Ln
z/K/z/L3z/LnZ/l8s/z9WT7/LJ8vy883y+fP8vPP8vNl+X5m+fmzfH+zfD9Z
vt9Zvr8s3//yec5n+f3M8v1n+f0tf9/ZLL/f5c/fZPn9z/L7zeJjlt9/Fj/L
P39TFl+z+MnP3P3137nxyQfwtZe3Pd7wiDc84g2PeMMj3vCINzziDY94wyPe
8Ig3POINj3jDI97wiDc84g2PeMMj3vCINzziDY+n38+d9Xj6fRzV4w/d+qUX
r5x8X1516eZHPvH+S3y+esQbHvGGR7zhEW94xBse8YZHvOERb3jEGx7xhke8
4RFveMQbHvGGR7zJI36i8y3ytscbHvGGR7zhEW94xBse8YZHvOERb3jEGx7x
hke84RFveMQbHvGGR7zhEW94xBse8YZHvOERb3g8/XnP1+Ppz3euHv/l4Opz
j7/yjfn45Zc+8eGr9/Pz1yPe8Ig3POINj3jDI97wiDc84g2PeMMj3vCINzzi
DY94k8fofKxHxdPofIu87fGGR7zhEW94xBse8YZHvOFxHU839YZHvOERb3jE
Gx7xhke84RFveMQbHvGGR7zhEW94xBse8YZHvOHxvQ+99qFnr72hHk8/7631
ePr5DvPOH/30a9//7gf4/3M94g2PeMMj3vC4jqfbesMj3vCINzziDY94k8fo
fIzidT3q/hbF0+h8i7zt8YZHvOERb3jEGx7xhke84XEdTzf1hke84RFveMQb
HvGGR7zhEW94xBse8YZHvOERb3jEGx7xhke84RFveDz9PLfU41Nnb/nKlZPX
1ePp3/e9y+d/kPtQPeINj3jD4zqebusNj3jDI97kMTofo3gd3R/rUflCdH+L
4ml0vkXe9njDI97wiDc84g2PeMMj3vC4jqebesMj3vCINzyu84WjesMj3vCI
NzziDY94wyPe8Ig3POJtnc8c1iPe8Ig3POINj8/Prz387LXX1OP7Pv7UB258
8rvq8eE3fvbLV05end/+2l9/7Zd+5KHBGx7xhsd1PN3WmzxG52MUr6P7Y5TP
1KPy0yhfiO5vUTyNzrfI2x5veMQbHvGGR7zhEW94xBse1/F0U294xBse8YbH
db5wVG94xBse8YZHvOERb3jE2zqfOaxHvOERb3jEGx7xhke84RFveLz9/r+5
/Oy1G+rxv297z1evnHxTPZ7+55f2pz/PWwZv8hidj1G8ju6PUT4T5df1qHpI
lJ9G+UJ0f4viaXS+Rd72eMMj3vCINzziDY94wyPe8LiOp5t6wyPe8Ig3PK7z
haN6wyPe8Ig3POJtnc8c1iPe8Ig3POINj3jDI97wiDc84g2PeMMj3vDI70Ee
d3jEm+J1dH+M8pkov47qPfWo+ltUD4ny0yhfiO5vUTyNzrfI2x5vfA94wyPe
8Ig3POINj3jD4zqebuoNj3hb13vO1eM6XziqNzzibZ3PHNYj3vCINzziDY94
wyPe8Ig3POINj3jDI97wyPcsjzudj6N4Hd0fo3ymHvGmek9Uf6xH1Xuj+ltU
D4ny0yhfiO5vUTyNzrfI2x5vfE94wyPe1vXwO+sRb3jEGx7X8XRTb3jEGx7x
hsd1vnBUb3jEGx7xhke84RFveMQbHvGGR7zhEW94xBse+R7lcafzcRSvR/fH
esSb8uuo3lOPeFM9vB7VX4jqvVH9LaqHRPlplC9E97conkbnW+Rtj7d1PfzO
esQbHvGGR7yt6z3n6nEdTzf1hke8rfOZw3pc5wtH9YbHdX66rTc84g2PeMMj
3vCINzziDY98T/K40/k4itej++Mon6lHvKneE9Ufo3p4PXLe4VH9rKi/ENV7
o/pbVA+J8tMoX4jub1E8jc63yNseb3zPeMMj3tb1nnP1iDc84g2P63i6qTc8
4g2PeMPjOl84qjc8rvPTbb3hEW94xBse8YZHvgd53Ol8HMXr0f1xlM+M8utR
vace8aZ6eD3iTf3CelT/NOpnRf2FqN4b1d+iekiUn0b5QnR/i+JpdL5F3vZ4
W9d7ztUj3vCINzzibZ3PHNbjOp5u6g2PeMMj3vC4zheO6g2P6/x0W294xBse
+TnlcafzcRSvR/fHUT4zyq9H9Z5R/XFUD4/6M1G/sB457/Cofr3i6TbqZ0X9
hajeG9XfonpIlJ9G+UJ0f4viaXS+Rd72eOP3hDc84m2dzxzWI97wiDc8ruPp
pt7wiDc84g2P63zhqN7wuM5Pt/Umjzudj6N4Pbo/jvKZUX49qveM6o+jevio
P1OPeFP/OpqnqEfNh0T9esXTbdTPivoLUb03qr9F9ZAoP43yhej+FsXT6HyL
vO3xts5nDusRb3jEGx7xhke84XEdTzf1hke84RFveFznC0f1Jo87nY+jeD26
P47ymVF+Par3jOqPo3r4qD8z6heO+tfRPEU031OPmkeK5kOifr3i6TbqZ0X9
hajeG9XfonpIlJ9G+UJ0f4viaXS+Rd72eOP3jDc84g2PeMMj3vCINzyu4+mm
3vCINzzyOeRxp/NxFK9H98dRPjPKr0f1nlH9cVQPH/VnRv3Cely+/9E8RT3i
TfNm9aj5t2geKZoPifr1iqfbqJ8V9Reiem9Uf4vqIVF+GuUL0f0tiqfR+RZ5
2+MNB3jDI97wiDc84g2PeMPjOp5u6k0edzofR/F6dH8c5TP1iDfVe+oRb6qH
j/ozo35hPeJN8xT1uPz+RvNm1It63uFR85bR/Fu94VHzIfWGR/VPo35W1F+I
6r1R/S2qh0T5aZQvRPe3KJ5G51vkbY83nOANj3jDI97wiDc88ufI407n4yhe
j+6Po3xmlF+P6j31iDfVw+sRb+oXjvrXo3mKesSb5s3qcfn91yPnHR4131tv
eNT8W73hUfMhUb9e8XRbb3hUfyGq90b1t6geEuWnUb4Q3d+ieBqdb5G3Pd5w
hDc84g2P/HPyuNP5OIrXo/vjKJ8Z5dejes+o/jiqh9cj3tQvrEe8aZ5iNN8z
mjerR7xpHrceOe+YD9c8eTTfW2941PxbNI8UzYfUGx7VP436WVF/Iar3RvW3
qB4S5adRvhDd36J4Gp1vkbc93g70L3nc6XwcxevR/XGUz9Qj3lTvGdUfR/Xw
UX9m1C+sR7xpnqIe8aZ5s9H842getx4XP6P3CvWo9wv1hkfN90bzltH8W73h
UfMhUb9e8XQb9bOi/kJU743qb1E9JMpPo3whur9F8TQ63yJveNzpfBzF69H9
cZTPjPLrUb2nHvGmevioP1OP63yh/evRPEU94k3zZvWIN83jjubDR+8VlM8c
K5+52+dlPWqePJrvrTc8av4tmkeqt3U+03694uk26mfVGx5V743qb1E9JMpP
o3whur/VmzzudD6O4nXjMN6Uz4zy63rEm+qPo3p4PeJN/cJR/7oe1/lC53tG
82b1iDfN49Yj3vReQfnM8eg9Vz3qfZbfyyhfuFhveNR8bzRvWW/rfKbzSPWG
R/XrFU+3UT8r6i9E9d6o/hbVQ6L8tN7kcafzcRSvR/fHUT5Tj3hTvWdUf6xH
vKk/M+oX1iPeNE8xmu+px3W+0PnHesSb5sPrEW96P1OPeNP7wnrUe0C/z/J7
GeULF6N58npb5zOdt6w3PGoeqd7wqH694uk26mdF/YV6w6Pqb/Umjzudj6N4
Pbo/jvKZUX49qvfUI95UD69HvKlfOOpfj+Yp6hFvmjerR7xpHrce8ab3Cspn
jusRb3pfWI+cd3jU+9PRe0C/z4reyyhfuFhveNR8bzRvWW941DxSNB8S9esV
T7f1hkf1F+pNHnc6H0fxenR/HOUzo/y6HnW+Rd6oh9cj3tQvrEe8aZ5iNN8z
mjerR7xpHrce8ab3CspnjusRb3jEm9671iPnHR713nn0/tTvAf0+q97wqPcL
0Tx5veFR85bR/Fs0jxTNh9QbHtU/rTd53Ol8HMXr0f1xlM/Uo/KF6P4WxdPo
fIu80S+sR7xpnqIe8aZ5s9H8Yz2u42nnw+sRb3o/U4940/vCesQbHvGmfQD1
qPf19YZHvT/1e8B6w6PeyyhfuFhveNR8b73hUfNv9YZHzYfUmzzudD6O4vXo
/jjKZ0b59ajeU4/KF6L7WxRPo/Mt8sY8RT3iTfNm9Yg3zePWI970XkH5zHE9
4k3vC+sRb3p/XY94wyPn3bo/030Oo/f1vN+tR70/9XvAesOj3ssoX7hYb3jU
fG+94VHzb/Umjzudj6N4Pbo/jvKZUX49qveM6o/1qPw0yhei+1sUT6PzLfLG
vFk94k3zuPWIN71XUD5zXI/reNr3hfWIN72/rke8aT9FPXLe4VH7Q+oNj3pf
P3rv7Pen9YZHvc+qNzzq/UK94VHzvfUmjzudj6N4Pbo/jvKZelQ/q95UfxzV
w0f9mXpUfhrlC9H9LYqn0fkWeWMetx7xpvcKymeO6xFvel9Yj+t42vfX9Yg3
7aeoR7xpf4/qPd1XM9ofMtrnMHpf7/fOfn9ab3jU+6x6w6PeL9SbPO50Po7i
9ej+OMpnRvn1qN5Tj+pnRf2FqN4b1d+iekiUn0b5QnR/i+JpdL5F3nivoHzm
uB7xpveF9Yg3vb+ux3U87X6KesSb9vfUI+cdHrUfabSvZrQ/pN7wqPf1fu+s
/PTBesOj3mfVmzzudD6O4vXo/jjKZ0b59ajeU4/q1yuetj8z6hfWo+q9Uf0t
qodE+WmUL0T3tyieRudb5I33XPWIN713rUe84RFv2k9Rj+t42v099Yg37Ter
R+3jGu1Hqjc8an8I+9jqUe/r/d5Z+emD9SaPO52Po3g9uj+O8plRfj2q94zq
j6N6eD2qX6942v71aJ6iHlXvjepvUT0kyk+jfCG6v0XxNDrfIm+8d61HvGkf
QD3iDY940/6eelzf57rfrB457/Co/W/1hkftR6o3PGp/yGifg9/X15s87nQ+
juL16P44ymdG+fWo3jOqP47q4aP+zKhfWI/q1yuedr5nNG9Wj6r3RvW3qB4S
5adRvhDd36J4Gp1vkTf2AdQj3rQvRfWek3rEm/ab1eP6Ptf9j6o/dt/gaP9b
veFR+5FG+2pG+0O8z8Hv6+tN8Xp0fxzlM6P8elTvGdUfR/XwUX9m1C8c9a9H
8xTaB9l+veJp5x/rUf2FqN4b1d+iekiUn0b5QnR/i+JpdL5F3tiXonrPST3i
TfvN6hFv2v9Yj+v73EbxdFNveNT+t9E+rtF+pNG+mtH+EO9z8Pt6v3dWftr8
elTvGdUfR/XwUX9m1C+sR81bRvNv9aZ5s3pUv17xtPPh9aj+QlTvjepvUT0k
yk+jfCG6v0XxNDrfIm/sk6pHvGnfXj3iDY94035czVN0n6ri6Wa0b3C0/220
j2u0H2m0r2a0P6T7fJXPRPm191XUo94D1pv6M6N+YT1qnjya7603zZuN5h9H
87jad9Z+veJp38/Uo/oLUb03qr9F9ZAoP43yhej+FsXT6HyLvLFvrx7xhke8
4RFveOS8w6P29472qSqebkb7Bkf730b7uEb7kepN+Uw9ap/D6H293zv7/anf
A9ab+tejeYp61Dx5NN8bzVtG82/1pvcKymfar1c87fvCelR/Iar3RvW3qB4S
5adRvhDd36J4Gp1vkTf2kdYj3vCIt3U9/FI9al/0aH/vaJ+q4mnPxyhea99Z
93GN9iPVm+o99ah9DqP39d2vqn6h9kH2PaDfZ9Wb5s3qUfPk0Xxvvem9gvKZ
ziNF8yFRv17xtO+v61H9hajeG9XfonqI9pV3v1k96v4WxdPofIu8sa9Z9fBL
9ch5h0ftJx/tix7t7x3tU1U87f0xymei/Dqq90T1x6geXo/a5zB6X19vmqeI
5nuieTPvb65HvV+oN71XUD7Tecto/i2aR4rmQ6J+veJp91PUo/oLUb03qr9F
9RDtK+/+x3rU/S2Kp9H5Fnljn309ct7hUfvwd9pPPtoXPdrfW2941H7LesOj
9r+N9nGN9iPVGx61P6Te8Kj39aP3zqP3p6P3gH6f5fcyfr9Qb3jUfG+94VHz
b9E8UjQfEvXrFU+3UT8r6i9E9d6o/hbVQ7SvfBPlC9H9LYqn0fkWedtz3uHx
/wCOM4iH
     "], {{{
        EdgeForm[], 
        GrayLevel[0.8], 
        GraphicsGroupBox[{
          PolygonBox[CompressedData["
1:eJxNnWW4FlXXgJ88SIoIgiKlooigYiBlK4qKndjYgdiFCTbYiYWiqFjYit2N
iYUvFjYWJmJ96/7WPdc5P9a19165Z2bds+fwxtNj5OitD6mUSqW+rUqlaoy/
1EulX0NeCXkt5KaQKSGrhK15SL+Qbg2l0h+h+z3kdX3w7R22csjyIZNDjg85
LqSiHvvL1Ah5JWSGceS/0fHEkBWMwb9PKfe1gvm2Dtkq5OTw2yFk+3r6rqDf
LbE+pZ72k7WfFPJ2yK0hb9Uzfmv3ebL+5Oob65o1O4WsE7JuyEradwy5PWRc
yG1e7zbWXj7uSTmk1JB5VgypKyumuvRuLP4N+c9cO1j7HfPONO9Y97pyxDSj
vvdiefdNzW2tyz47utcWEdMy5LO4iJu5F1xfyIiQnUv5DBcqZV6e43Yh25dy
vzvV8zrZ15Kx2S4N2QfYd/AaOnk/Fg8ZHzIy5JyQValt/vVCltCns/P1jVtP
/a0ht4WMDekf0jpkdXW3h4wzlrgNHJcwfievp58+2JcMifYtrWaeNuZdI2Rg
yKCQRbwHu7jfDY0jfveQPfRf2HFASBd9NnTOONScbZv4oOsa0s5ag9VtpH6t
kLVDOqjrph4O4OHnUvYufUf/bRGyZUgvhecOP2N8/nBwY8iUkBOa9ERv43me
Rd/x7Oifja1L/QZ1zRT6gb5o7jPkWZ4YclIpe2Rbxz7e9+b6r+r9XE2fE4xr
oa1lyI4hp4Sc6l52tPZK7mNF/VY1z2o+y5Y+y9auF/Z+t/U50iOn+ayL53Z+
yL4h52k73f0N8tks4rMbqW6gurbW2jVkN2N2dS/0Rn/1exlH/Joh7UOGuCbX
nu5xD+eLlrIXhjgfYsxg1+3Mube6DtrJvY/+2HqGDA/ZXB/sa6nDtkwp2Tgw
5CDn67oeFtK9lM+fsZvz9fSFrU1ClgrpoXQ37uBSI38HuWa+WCnfNx2NI37T
kM3cE/uBlVEhh+iDfWl9lnY9yvwH64/vUOcbaF+mSdzoUvbvUH1HO99Y/aHK
Rtp4dmv4/Hp6/5Z1XM45PU1vw8yvIb+FvFpK7mAQ9o4OOabUyCXjsaU8Rzjf
4HFbc/FOhlP4PMG8vEPpc9jh3QVjN+gzRoFfOG7tfunr+SF/hrzhvn4PmVFK
hmB2JePGWAvfBSFvat/Jmlu61+XdC1xzLsDRqu5nN+vCAX2/q/O/Q/4JmWnM
KaXkGJ7HWoOep98Hen3ox3nv99D+Ucj9IbND7ivl+XFvKRk9w3r0PL1N35/p
nrDBCHzAHmfaVPext76D9T/LZ854trULlngvTDAXtc9xz2d7P3fynj0ZL9qv
Q74pZyxxsHZuKd8r5DqglO/z/dXvbe619d2vlD19aSl7eH9t6OnVw0rJ1/SQ
C0IeKmXfHqadWHi7pJScwfG66i8x7+WlZOCyUvJHvsNdH2LdS12PMvfh+m3i
/IhScnKI+Vhvqv1I54WONQy+FvJ6yE3GXuHesR+lz6RSMnOt9on6wN1w/Ybr
yxyW4Ou6UnIBf7BxjTnIRf9uqS9ynLrR7v0KddeX8tuTHj3FZ3u8ecc4Yn9F
/WR18MvZxbsAPrZ3foI2ODvZvNjof75jxlqD9U4+Y3qAvpnifTrR8WZzc77Q
9/Q8nMBh8Y12mvaij/coZb/D9Fvq7i5l38LGtFL2PvPdSo1n2JnmmOo+2d8d
Ie+EvFvKfqVv9zLXntbC5073ByMjtd2u7TRr3Wntu6zFfLz5Rqq/2/3CyD7W
O1v9PaXkaV9t91oP/f3u7z7vJ4zs7/x81w+YF98LtaM/wDm6i1wzf7CUnJ3v
/DxznG9e9nGx/sTBHKzBIQw9Uco+gyN6eaJ6GHs85Epthf5xY+aEPBzyWSmZ
O0xf5Cp1T5ayf8kPB/T3FsY/qR7fI0qN3LK+upSsvRDyYshT5nlSH+xwyTvz
lFL2L7qj1D9v7LXmuc76z5WSvWddH639e3XfuUf8YY7epq/p8ymOcPNSKb9t
+ca93jVz+OY8m6Ee3WTzXW/OV9S9bO6b3T/n21Lxbl66nD7kKs7SV835fin7
8b1S8snfFXA2PGI2CzmqnGfpH6V8n81wZO+8296wHv0OB8W3JD1P79+ubpz3
Fn/4hLVTvdflqLF8SO+Qt0vJIPxyjr5jDvb1tjp4gRVY4rz9Vz94gQnY+KuU
5zExC0Xej2NsVk6e33N/cFScb/AzwXXx3u/h/fnAmpN8/i+om1VKPmEDRmDs
k1Iy87GC7SN15+v3P2t/6H5nOeeMg78LHFnDQ/Ed8D/16OCOHn66lBx9Wkpu
pjt/yL1gu0JfGIU1OHzEHOR6tJQ8P+J4kfMnS8nV1yGPaXvU3Bd4PRPdw5X6
f2Mt+h82YOAq7c9o/7bJ3p/RdrV+rOHzOu833F1jru/MN9fncI12/OHlev1+
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
d+VkCKbg6DBj+O76tpz/+V67StZ8wrxXGQ+DL4T8GPJTOTmAOdj43twdKln7
SvNyXs4L+dl9TXSfV5rzKuPxK/iaZN7J6l4JeTXk15DfyskIfXO613ZtufFv
+BeMp7fgg1570Xzo4eZGba+F/B7yh36sXy8nO/BZ8HOTusnu5QblVXNxfUtU
8hpZzzD/m+VkglxvON6sDpZObVKvqH+TsdhhbKxxxJyiDsbGOXIv4O0tY6Z6
PfPN/a73Cr+ZxpCD/oWpe8rJF2zB3jv64veBtvf1PVu/D8vJ2L3a4PU97eQ7
R9s5rt/Th32Mb2J/MOTjkE/KyQLcwM+guJcjQ/YK+aicnM7WH0YeUHefemLO
1/6g8/PMje9H+ky3DrzDFn838338ZTlZ/TTkM/0e03apvvA4xxhsl+g7Rxu+
8HKZ+b4IaVNJ30ddk+dz1/jC8uXW+8w8xC5cyf08YV7mT+kPn/AFOzAEk3D3
vf5f64ce9q92v1+aC8YXreS74CnXRT5G9Gf4vOgH+IKpa835jPXQwRVM8S7g
ndCpkjpYhjfYhYlfytmPMPC6+/rB3DAELze6/tHcBfM3mI+88xxfsObL2qjx
mnl+N+431y9bn3y/anvF66N373JP7O1mY8g1RR0M3+IIYwVfr+uH7u1ysscI
Y/BFzxV9ClNwCFd/6feWvthgbYG6N/WFGXj5Rx984fFu9/yvfoWNnH+H/GmO
N/QlZlbIf+YkplxJfcE1djj90HGWPhX97m1i579U+r65Top535DtKskhPNZj
3kxuGyp5D+DwQe9LcZ/wazDuRZ8nz5d3wUP6M5/uGn7oYXp594hbI6R/JZmd
ri/z5qFrUck1dReqJHPEwx22lpXk7VPXzBH08Ex/t6/kWdbKePRrxnyfkH0r
2cPwAHdwA0ews0fYBrg/+PpGG/XJ0zr064TsH3KAHMJje2vjw3uibSVZhv11
9T0wZIOQg0NGVZKVjpXkDnZgCt1z7usH7yv2xUMWq6Tue/dKTa4Vfji/Oltj
vUrWXN/5QZVkBo5+tafoDfoEzrrEvKt72tA9svdFKnn9M/SDTfYxz33BUbdY
d/fspD41lqxknV+8vh+9Fnpqtn21U0i/kB2dnxoytpJ12Au1yDvfOnCxQDao
+Yf7WbqSTC5QmMMh3MHYO+r+Ljcyhg3mlqpkDLl7VHKcbxy8wdrylWQJbv6T
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
mms4nm/cAq99gffiLevAETzRF5wVfCeh491RnLEwBEuchbAFq/8YP1M7NpiD
D7iBkX/Nj1+5mnzid495PjQ/e37fNfEwAoO1kL7V5IicsETfwwvsbR+2HUJW
lHnYJwdxxJNrIblfuZrMwRncrSTjxD6knrx8K7YMWa2a3DBHt5Dx5IKlOd6v
z53jw55aGN/SeHRw1CZkjWoywXxh5/ADI/ABXzCyaNjahQyuJltfaevvd+zq
1WT5c58bHOFP3NOu55prEXM9ow5WOsf6l0pyDN9fWwMbfMLSl+ZuY/y3lUZ+
4eo59znXeuSj31/WTn/T2+2rmXeuOvih7ztWc/2DOhiDq8WqqaMO/b9UNXt2
nvuFQ/iCt1fV/WLdX7Sxj8WrGUPuTtUcqbdENWPmmR82YIRvYTiE0S7VzE+u
Jas5/qINln93/rtxvzmfYezQkK4hy4YsV00OqNWjmtcDf/zt+rYjLM20v5vZ
Z8RwbsPPMtX0+0tfbDC1tLkW6AtH8ARj8FSWC9aw17Oa8X/rW5Y79rS093nr
GI8PGSNLVTlcQX57u0bfp5rvnN7mKtiDO6TuGcr7iP1xL07i741qstvHPCvI
eU0dDHEurlJN3mHoYfP1lVme6eI+15bGrFpNrleW+bZyNkAeV5Xr1jK9ulzj
36+a/LeQ49NjPCNkV+NauJ/m+q5ifCtzUmNgtZEnxoI9xkEhHarZ1/CwsO+D
Ab4HWBec4w9r/fVpI9vt5W39ajJML8Noa30WcQ+D9O0gex29X/Q/75Qh5oO1
jvLWwTX7w76mOdYOWUc/dGuZdy1ti/kc2Ms8+WJvMMYIP7CzYTXZYL2uMZ1c
o//VvbVz/+hgCLbWMz8xv8sbtg2M76weXTf328k980yb+/z4N1b+LZX/LA9u
+WaC+X9rwWo9+rOeLGwSsmk12YKLZVxvVs01fGwVclw1mcafuP9kczlj4A3W
GHkXFOwyLmvMptXGGktbA85gompO+IHXzUO2MBdr2IO74dp6at+ymntgj71c
49fb3LB9QjW/pfHZ2lz0T1t7CPuJ1fzu5pyEPbiDv+2qye+2zvvoA3tw90bI
myG3VJP1U6p5To8NGRcyoprPBPZg6VRtO5kD3x3dX2/3h21l9TAJc7tUs/fh
hP4/rZrcot+5moyOUPqZA9uq2scZwxzWz6zmNzbjWdX87ma9ujXfCnk75NaQ
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
0dW15PZy41nTq5y1m/o8WD9rHerBBOzCBazAATxMqiUznKe/hLwc8rP7PsQ9
vhjyQshP1jqy1sj0NeacXEsOOU9/D5kR8pt75xroDfqffqQv4YGe6md99gGj
r7gH9sI5Clecs6+aj7z0H/1O39Jb9CG9uiDkzZA/Q26oJTvF+2Syc2pv716m
up9bFHQ3O57kHFZgBFZg6lT3fbIxxNM39MSB2vl3+rHapqqDzXHm20n7CH1v
c8374CZrs8ftnN9u7G1eJwye6XVz/Xuq29V7c5b2u7xH7P8Ox9udw909Iffq
c6exd6uHXdiAy/Gu7zHuXnXMC05g5KOQ+0Nm15IDzjNYeDDkoVpytUo93mX1
/K2kR2L9aC35gOcH9D3P8XzzXug93su6E8w33dr0NX1/pM+AfAf5vCfbC6zh
CqZgBnb4xn3COd8Fh6qbaO6Hrc34iM+YeNgc5fi4sZc10T3mSD0Y5N3FOwx2
rlI30VpP1Rq/L+nX62rJJSxcaexV7vFJYw7XdpXx6L8x59Pafgx5vpbvm7nq
vzXPIe4XbuH3WutNsv4kdS84XmMu2Py1lizyTpgX8pL+LzbZO+P13nvGl702
nsONyg3moa/pfXqb3n+9ltxN0W+G9+059/Gc18R+TtSviHst5I9aMnOTed6o
Jac3u59XrD1F/5vc43VeCxxMqyULvEumGs/4Vi15fbeWDL3j/mHqNGNP1wYv
cHiX10bc27Xkcpr6mcbeZs73zPGO+pn6n2HMNH3eD/mwlhwWrJIPdservy9k
ln74fOD6bmWWenidoP94xwnqmc9usoZn+pH+op/gtTiHH3T9ca2RmYvUo/uk
lqxO1w7bD6l7UDtr2IGbR9V9qp7xM+Mv1n6JujnWg8WCPziBC/ig559wTdwX
+lxmDLbPa8n4HG1favvWHPD1lb6Pm4v517Xk7invyZ7xXhsYMqCe3BG/aD1Z
5d7BPv3LubxYPWPmartaOz1OP8IUPUmvF73/gusfa418Pq/vpFrjOY29Uz1H
6nWsJ4fXm5PehwH4ggnYKM5dzv/O+r/kGoH3JerJDzHFmcw7oUs9cxVn9e/a
utaTzZtqjXxi61bP9QzX8InfG47znXOWv+kc/qa6hqW/a8nIrdrQ/eXIGoZg
6Q5jFqi/TZ+Z6m8xPwzBFnz8Yyw+/9WST/57iHeaj3XPevqxj2na3jPPNHO9
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
           "]]}]}, {}, {}, {}, {}}}, VertexColors -> CompressedData["
1:eJx8XHk4Vd/3lnkmU5IklSlJCCEbmZMpUTKH0EAISZJMSRLRQKikFEpFkune
65oJZQhFksrYoD5R9Ntr//6+3788z/vc59jnnL32Wut933XWegbYeTMzMTHp
szMxseC/JzvVbe6rT6CYoH3Pk+uoyCBl1idbk474T9W/XsK4+qFy8yctVBRV
/mzdiBYdPWaTT7uzdQLxrpR+/fwdFS0KsXe76tDRa5b13pEaEyjlsy01/jcV
GfkJPMzQo6Nn0+s0zTUnUFKr5Grp5TTkZnpKu8CAju7uaL1Vh/FR35zmsDU0
dGSDxb2AHXR0XctQMAvjoe4xV+ckaKjzkm/1sCEd3Xu4ybIaX19QXFHXjomG
mJC7eQqiI5MPM24H8XqkZQ5cNOijovV9YRmB2nS0nCvAWgevX6TGbEDzCRWF
5Ktp/thKR89PWWz8ojaB7p1Sd3YqpCL7258vV6jTkeBT18U7+PeP51+3cODn
8IjZqu88fg71hUv0BXz9kYrYYz8/U5HvZhXlO7p01HuG9Z0CXqfShiILZz4a
KnvPJqeM7yvnWc3RpxgPsvLIZJKiIVP+yS/6+L4+ng4ZTsD4Auf91AJxGmpd
76mTie+r1nbu7SC+Lzv9c6uXWGio6NAODxZ9OvJUC3/4D/9fp4b4sOQvVPRN
/9XSM/x/S6yHlLdhvEPopnNZFxVtW3uvoHYbHVFOUxKe4fVr35JesY5KRRpZ
lhwv8frtPvj+TMV4HvuU0plqKnKWu2img/GDJyu31mNc//K/mXs0Knr74+HV
fxgvfPH0hDa+fqhdhfhbfP3Kh9PX6vH1ZxuurG7BeE664OHVH6joivXa9gn8
3stmJod08fqXZAr9P36looM34+xvbacjMZOL35wxbnbMh1o7h39/HGmsxvuh
8L3cIhfGJ/g2GTRPUJEem07oML4vn8oNIdb4+vU1f8Q8X1NRstrYnAh+j3ZS
8geO4HU+8rON0XlORUyq0xxPNOjI131lBw2/x6odyulv86morcUpVAG/R17h
mqBbGC/y1lkazKMiBxHF0kI1OjK29+hZia8TuftchupDKtosePRvEN4PudYx
Id8wLn/FilO8mYr41x7+VIT3+Z820Ty434nJDeKb8P3yfvyvbgrfr2Pzx4rd
eP1ffZfr5f+goocCPz/M4/sNqOcJ8oP92Updp/+LipyeHFy5C98vV5jdi5UY
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
Np84H0V9Dv8HlqLCiA==
      "]], {
    DisplayFunction -> Identity, AspectRatio -> 1, 
     AxesOrigin -> {Automatic, Automatic}, DisplayFunction :> Identity, Frame -> 
     True, FrameLabel -> {None, None}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultColorFunction" -> 
       "M10DefaultDensityGradient", 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "GridLinesInFront" -> True}, 
     PlotRange -> {{-43.109851, 42.032105}, {-48.534494, 48.534494}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
       FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           GraphicsBox[{
             RasterBox[CompressedData["
1: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
0Homltnptizd9AW6i9+eleQrx/8A4XvFVA==
              "], {{
                Rational[-15, 2], -180}, {
                Rational[15, 2], 180}}], {Antialiasing -> False, 
              AbsoluteThickness[0.1], 
              Directive[
               Opacity[0.3], 
               GrayLevel[0]], 
              LineBox[
               NCache[{{
                  Rational[15, 2], -180}, {
                  Rational[-15, 2], -180}, {
                  Rational[-15, 2], 180}, {
                  Rational[15, 2], 180}, {
                  Rational[15, 2], -180}}, {{
                 7.5, -180}, {-7.5, -180}, {-7.5, 180}, {7.5, 180}, {
                 7.5, -180}}]]}, {
              CapForm[None], {}}, 
             StyleBox[{Antialiasing -> False, 
               StyleBox[
                LineBox[{{7.5, -180.}, {7.5, 180.}}], 
                Directive[
                 AbsoluteThickness[0.2], 
                 Opacity[0.3], 
                 GrayLevel[0]], StripOnInput -> False], 
               StyleBox[
                StyleBox[{{
                   StyleBox[
                    LineBox[{{{7.5, -166.15384615384616`}, 
                    Offset[{4., 0}, {7.5, -166.15384615384616`}]}, {{
                    7.5, -96.92307692307693}, 
                    Offset[{4., 0}, {7.5, -96.92307692307693}]}, {{
                    7.5, -27.692307692307693`}, 
                    Offset[{4., 0}, {7.5, -27.692307692307693`}]}, {{7.5, 
                    41.53846153846154}, 
                    Offset[{4., 0}, {7.5, 41.53846153846154}]}, {{7.5, 
                    110.76923076923077`}, 
                    Offset[{4., 0}, {7.5, 110.76923076923077`}]}, {{7.5, 
                    180.}, 
                    Offset[{4., 0}, {7.5, 180.}]}}], 
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]], StripOnInput -> False], 
                   StyleBox[
                    LineBox[{{{7.5, -180.}, 
                    Offset[{2.5, 0.}, {7.5, -180.}]}, {{
                    7.5, -152.30769230769232`}, 
                    Offset[{2.5, 0.}, {7.5, -152.30769230769232`}]}, {{
                    7.5, -138.46153846153848`}, 
                    Offset[{2.5, 0.}, {7.5, -138.46153846153848`}]}, {{
                    7.5, -124.61538461538463`}, 
                    Offset[{2.5, 0.}, {7.5, -124.61538461538463`}]}, {{
                    7.5, -110.76923076923077`}, 
                    Offset[{2.5, 0.}, {7.5, -110.76923076923077`}]}, {{
                    7.5, -83.07692307692308}, 
                    Offset[{2.5, 0.}, {7.5, -83.07692307692308}]}, {{
                    7.5, -69.23076923076924}, 
                    Offset[{2.5, 0.}, {7.5, -69.23076923076924}]}, {{
                    7.5, -55.38461538461539}, 
                    Offset[{2.5, 0.}, {7.5, -55.38461538461539}]}, {{
                    7.5, -41.53846153846154}, 
                    Offset[{2.5, 0.}, {7.5, -41.53846153846154}]}, {{
                    7.5, -13.846153846153847`}, 
                    Offset[{2.5, 0.}, {7.5, -13.846153846153847`}]}, {{7.5, 
                    0.}, 
                    Offset[{2.5, 0.}, {7.5, 0.}]}, {{7.5, 13.846153846153847`}
                    , 
                    Offset[{2.5, 0.}, {7.5, 13.846153846153847`}]}, {{7.5, 
                    27.692307692307693`}, 
                    Offset[{2.5, 0.}, {7.5, 27.692307692307693`}]}, {{7.5, 
                    55.38461538461539}, 
                    Offset[{2.5, 0.}, {7.5, 55.38461538461539}]}, {{7.5, 
                    69.23076923076924}, 
                    Offset[{2.5, 0.}, {7.5, 69.23076923076924}]}, {{7.5, 
                    83.07692307692308}, 
                    Offset[{2.5, 0.}, {7.5, 83.07692307692308}]}, {{7.5, 
                    96.92307692307693}, 
                    Offset[{2.5, 0.}, {7.5, 96.92307692307693}]}, {{7.5, 
                    124.61538461538463`}, 
                    Offset[{2.5, 0.}, {7.5, 124.61538461538463`}]}, {{7.5, 
                    138.46153846153848`}, 
                    Offset[{2.5, 0.}, {7.5, 138.46153846153848`}]}, {{7.5, 
                    152.30769230769232`}, 
                    Offset[{2.5, 0.}, {7.5, 152.30769230769232`}]}, {{7.5, 
                    166.15384615384616`}, 
                    Offset[{2.5, 0.}, {7.5, 166.15384615384616`}]}}], 
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4], 
                    Opacity[0.3]], StripOnInput -> False]}, 
                  StyleBox[
                   StyleBox[{{
                    StyleBox[{
                    InsetBox[
                    FormBox[
                    RowBox[{"-", "250"}], TraditionalForm], 
                    Offset[{7., 0.}, {7.5, -166.15384615384616`}], {-1, 0.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    RowBox[{"-", "200"}], TraditionalForm], 
                    Offset[{7., 0.}, {7.5, -96.92307692307693}], {-1, 0.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    RowBox[{"-", "150"}], TraditionalForm], 
                    Offset[{7., 0.}, {7.5, -27.692307692307693`}], {-1, 0.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    RowBox[{"-", "100"}], TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 41.53846153846154}], {-1, 0.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    RowBox[{"-", "50"}], TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 110.76923076923077`}], {-1, 0.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["0", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 180.}], {-1, 0.}, Automatic, {1, 
                    0}]}, 
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]], {
                    Directive[
                    Opacity[1]], 
                    Directive[
                    Opacity[1]]}, StripOnInput -> False], 
                    
                    StyleBox[{{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}}, 
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4], 
                    Opacity[0.3]], {
                    Directive[
                    Opacity[1]], 
                    Directive[
                    Opacity[1]]}, StripOnInput -> False]}, {}}, {
                    Directive[
                    Opacity[1]], 
                    Directive[
                    Opacity[1]]}, StripOnInput -> False], "GraphicsLabel", 
                   StripOnInput -> False]}, "GraphicsTicks", StripOnInput -> 
                 False], {
                 Directive[
                  AbsoluteThickness[0.2], 
                  GrayLevel[0.4]], 
                 Directive[
                  AbsoluteThickness[0.2], 
                  GrayLevel[0.4], 
                  Opacity[0.3]]}, StripOnInput -> False]}, "GraphicsAxes", 
              StripOnInput -> False]}, PlotRangePadding -> Scaled[0.02], 
            PlotRange -> All, Frame -> True, 
            FrameTicks -> {{False, False}, {True, False}}, FrameStyle -> 
            Opacity[0], FrameTicksStyle -> Opacity[0], 
            ImageSize -> {Automatic, 360}, BaseStyle -> {}], Alignment -> 
           Left, AppearanceElements -> None, ImageMargins -> {{5, 5}, {5, 5}},
            ImageSizeAction -> "ResizeToFit"], LineIndent -> 0, StripOnInput -> 
          False], {FontFamily -> "Arial"}, Background -> Automatic, 
         StripOnInput -> False], TraditionalForm]}, "BarLegend", 
      DisplayFunction -> (#& ), 
      InterpretationFunction :> (RowBox[{"BarLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{
                 RowBox[{
                   InterpretationBox[
                    RowBox[{
                    TagBox["ColorDataFunction", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{
                    Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Name: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"TemperatureMap\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Gradient: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    StyleBox[
                    GraphicsBox[{
                    RasterBox[CompressedData["
1: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

                    "], {{0, 0}, {1, 1}}]}, {
                    ImageSize -> 65, BaselinePosition -> Bottom, AspectRatio -> 
                    NCache[
                    Rational[1, 8], 0.125], PlotRange -> {{0, 1}, {0, 1}}}], 
                    Selectable -> False, StripOnInput -> False], 
                    "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}], True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Name: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"TemperatureMap\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Gradient: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    StyleBox[
                    GraphicsBox[{
                    RasterBox[CompressedData["
1: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

                    "], {{0, 0}, {1, 1}}]}, {
                    ImageSize -> 65, BaselinePosition -> Bottom, AspectRatio -> 
                    NCache[
                    Rational[1, 8], 0.125], PlotRange -> {{0, 1}, {0, 1}}}], 
                    Selectable -> False, StripOnInput -> False], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"0", ",", "1"}], "}"}], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Class: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Gradients\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}], 
                    ColorDataFunction[
                    "TemperatureMap", "Gradients", {0, 1}, Blend[
                    "TemperatureMap", #]& ], Selectable -> False, Editable -> 
                    False, SelectWithContents -> True], "[", "#1", "]"}], 
                 "&"}], ",", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"-", "260.16963`"}], ",", "0.2402964`"}], "}"}]}], 
             "}"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
           RowBox[{"LegendMarkerSize", "\[Rule]", "360"}], ",", 
           RowBox[{"Charting`TickAnnotations", "\[Rule]", "None"}], ",", 
           RowBox[{"ScalingFunctions", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"Identity", ",", "Identity"}], "}"}]}], ",", 
           RowBox[{"Charting`TickSide", "\[Rule]", "Right"}], ",", 
           RowBox[{"ColorFunctionScaling", "\[Rule]", "True"}]}], "]"}]& )], 
     TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.784320351506239*^9, {3.78432039167531*^9, 3.7843204368345327`*^9}, {
   3.7843206647534304`*^9, 3.784320674496869*^9}, {3.7843207146269617`*^9, 
   3.7843207442430563`*^9}, 3.7843207768014717`*^9, 3.7843208112687964`*^9, {
   3.784320844455853*^9, 3.784320855474563*^9}},
 CellLabel->"Out[39]=",ExpressionUUID->"38334ac5-574e-46ce-8ac8-cb6e364f930e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.7843203561385956`*^9, 
  3.784320389047811*^9}},ExpressionUUID->"66d7f81d-b428-4d92-b653-\
1124a6cd30a8"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "42.570978`"}], ",", "0.`", ",", "0.0012697757`"}], 
            "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "42.032105`"}], ",", "0.93335566`", ",", 
             "0.0012650509`"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "41.493232`"}], ",", "1.8667113`", ",", 
             "0.0012616699`"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "40.954359`"}], ",", "2.800067`", ",", 
             "0.0012595915`"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "40.415486`"}], ",", "3.7334226`", ",", 
             "0.0012587551`"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "39.876612`"}], ",", "4.6667783`", ",", 
             "0.0012590807`"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "39.337739`"}], ",", "5.600134`", ",", 
             "0.00126047`"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "38.798866`"}], ",", "6.5334896`", ",", 
             "0.0012628069`"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "38.259993`"}], ",", "7.4668453`", ",", 
             "0.0012659583`"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "37.72112`"}], ",", "8.4002009`", ",", 
             "0.0012697753`"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "37.182247`"}], ",", "9.3335566`", ",", 
             "0.001274095`"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "36.643374`"}], ",", "10.266912`", ",", 
             "0.0012787431`"}], "}"}], ",", 
           TemplateBox[{"6376"},
            "OutputSizeLimit`Skeleton"], ",", 
           RowBox[{"{", 
            RowBox[{"36.643374`", ",", 
             RowBox[{"-", "10.266912`"}], ",", "0.0012787405`"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"37.182247`", ",", 
             RowBox[{"-", "9.3335566`"}], ",", "0.0012740926`"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"37.72112`", ",", 
             RowBox[{"-", "8.4002009`"}], ",", "0.0012697732`"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"38.259993`", ",", 
             RowBox[{"-", "7.4668453`"}], ",", "0.0012659565`"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"38.798866`", ",", 
             RowBox[{"-", "6.5334896`"}], ",", "0.0012628054`"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"39.337739`", ",", 
             RowBox[{"-", "5.600134`"}], ",", "0.0012604688`"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"39.876612`", ",", 
             RowBox[{"-", "4.6667783`"}], ",", "0.0012590798`"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"40.415486`", ",", 
             RowBox[{"-", "3.7334226`"}], ",", "0.0012587546`"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"40.954359`", ",", 
             RowBox[{"-", "2.800067`"}], ",", "0.0012595914`"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"41.493232`", ",", 
             RowBox[{"-", "1.8667113`"}], ",", "0.0012616701`"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"42.032105`", ",", 
             RowBox[{"-", "0.93335566`"}], ",", "0.0012650516`"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"42.570978`", ",", "0.`", ",", "0.0012697769`"}], "}"}]}],
           "}"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          PaneBox[
           TagBox[
            TooltipBox[
             StyleBox[
              StyleBox[
               DynamicBox[ToBoxes[
                 FEPrivate`FrontEndResource[
                 "FEStrings", "sizeBriefExplanation"], StandardForm],
                ImageSizeCache->{65., {3., 9.}}],
               StripOnInput->False,
               DynamicUpdating->True,
               LineSpacing->{1, 2},
               LineIndent->0,
               LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLText",
              StripOnInput->False],
             StyleBox[
              DynamicBox[
               ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
                StandardForm]], DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}, StripOnInput -> False]],
            Annotation[#, 
             Style[
              Dynamic[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
              DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}], "Tooltip"]& ],
           Alignment->Center,
           BaselinePosition->Baseline,
           ImageSize->{Automatic, {25, Full}}], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{52., {1., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 9, 31336927493964903716, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{62., {1., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{62., {1., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 9, 31336927493964903716, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{44., {1., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{44., {1., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 9, 31336927493964903716, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{78., {1., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
     GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[31336927493964903716 === $SessionID, 
   Out[9], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 CellChangeTimes->{{3.7843203571080413`*^9, 3.7843203874387283`*^9}},
 CellLabel->"Out[9]=",ExpressionUUID->"97557856-29f9-4eab-a4f8-0050569578ff"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"gamma", "=", 
   RowBox[{"Import", "[", 
    RowBox[{
     RowBox[{"NotebookDirectory", "[", "]"}], "<>", "\"\<GammaMap.dat\>\""}], 
    "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.78439659543937*^9, 3.784396612039996*^9}},
 CellLabel->"In[2]:=",ExpressionUUID->"0b521edf-5323-4cdf-a4bc-0425678ed6a7"],

Cell[BoxData[
 RowBox[{
  RowBox[{"kp", "=", 
   RowBox[{"Import", "[", 
    RowBox[{
     RowBox[{"NotebookDirectory", "[", "]"}], "<>", "\"\<kpMap.dat\>\""}], 
    "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7843966163315268`*^9, 3.7843966207088013`*^9}},
 CellLabel->"In[3]:=",ExpressionUUID->"07025ad3-d9ca-4cef-844d-6a193040a8ad"],

Cell[BoxData[
 RowBox[{
  RowBox[{"kn", "=", 
   RowBox[{"Import", "[", 
    RowBox[{
     RowBox[{"NotebookDirectory", "[", "]"}], "<>", "\"\<knMap.dat\>\""}], 
    "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7843966229567738`*^9, 3.7843966256156626`*^9}},
 CellLabel->"In[4]:=",ExpressionUUID->"01e70c26-cee4-4487-b59e-e466cb7b77f1"],

Cell[BoxData[
 RowBox[{
  RowBox[{"gammaw20", "=", 
   RowBox[{"Import", "[", 
    RowBox[{
     RowBox[{"NotebookDirectory", "[", "]"}], "<>", 
     "\"\<GammaMapw20.dat\>\""}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.784399940793161*^9, 3.7843999530247574`*^9}},
 CellLabel->"In[60]:=",ExpressionUUID->"db263683-c5f5-49c4-8a00-e1c8bfdf9660"],

Cell[BoxData[
 RowBox[{
  RowBox[{"knw20", "=", 
   RowBox[{"Import", "[", 
    RowBox[{
     RowBox[{"NotebookDirectory", "[", "]"}], "<>", "\"\<knMapw20.dat\>\""}], 
    "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7843999595551386`*^9, 3.7843999634726934`*^9}},
 CellLabel->"In[61]:=",ExpressionUUID->"eae52d3a-2119-4447-b694-1e6ac2f1fc4b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListContourPlot", "[", 
  RowBox[{
   RowBox[{"Transpose", "@", "gamma"}], ",", 
   RowBox[{"DataRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", "20"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", 
        RowBox[{"2", "\[Pi]"}]}], "}"}]}], "}"}]}], ",", 
   RowBox[{"Contours", "\[Rule]", 
    RowBox[{"{", "0", "}"}]}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", "Automatic"}]}], 
  RowBox[{"(*", 
   RowBox[{",", 
    RowBox[{"ColorFunction", "\[Rule]", 
     RowBox[{"(", 
      RowBox[{"White", "&"}], ")"}]}]}], "*)"}], "]"}]], "Input",
 CellChangeTimes->{{3.784397251921527*^9, 3.7843972590574083`*^9}},
 CellLabel->"In[38]:=",ExpressionUUID->"55679bb3-20a8-4258-8263-45ee6ac67165"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[
    GraphicsComplexBox[CompressedData["
1:eJxd3GvIdG1Zx+HVzDiNq2lcOmqW1JulmWbZRoqK9KSkkMBKK9LAdkhGStJ+
gwVZtoEIJagoJKEosH1hhdIOMSk/DAUVSTBZaYxWkhUy7Z+7Oc6b/+WXOFhr
Xb7PM/xY2nkun/DV3/C8F6+maXrzw6fpwf8d//WDb7mevuyhv3pW+tJ+56Pf
9NPf++PvG65f2495cPn5U+X96/Zvveztb3jZ27eVz8/tFzz0Ye/+nK/54Pb/
n7e0v/slv/iIH/m3Rw7nH9vP/YM/ecq3f/pj2m+4+/d7bPsjHhz/ise1X3X3
7/9h7X/6xvlFz/2Dx7e/9O6f58Pbv/vg+Ic91D7e/fN9ZPvzXvPE57zmiU9o
f9fdP++9f+WZz/jzH3jLR7X/9u6f/6PbH/LgH+8lT2x//t2f50nt7/nx57/3
G+ePaf/G3Z/v3u968PgvPrn9+Ls/78e2v+C9D/6AT2m/8u7P/9T2bz3447z3
3u+++/v4uPZDz3nwB3xa+/l3fz8f3/6Bf3vdrz3zGZ/QfuPd39fT2//84PKf
3/tRd39/n9h+2s+f//7Rb7r35979fX5S+ytf8eAv9N7feff3e+8fe/DX86JP
bv/y3d/3vd9694/zKe133P393/v///WMwdP0mk/7+t9869f9/rP0kb609ZHX
r2195P3rtj7y+bmtjzxvaesjzz+29cH6YH2wPlgfrA/WB+uD9cH6YH2wPlgf
rA/WB+uD9cH6YH2wPvr3ufXB+mB9sD5YH6wP1gfrg/XB+mB9sD5YH6wP1gfr
g/WR1sdp6OM09HEa+jgNfZyGPk5DH6ehj9PQx2no4zT0cRr6OA19nIY+TkMf
p6GP09DHaejjNPRxGvo4DX2chj5OQx+noY/T0Mdp6OM09HEa+jgNfZyGPk5D
H6ehj9PQx2no4zT0cRr6OA19nIY+TkMfp6GP09DHaejjNPRxGvo4DX2chj5O
Qx+noY/T0Mdp6OPUfXz5n/3M4Zde+5fdR/rS1kdev7b1kfev2/rI5+e2PvK8
pa2PPP/Y1gfrg/XB+mB9sD5YH6wP1gfrg/XB+mB9sD5YH6wP1gfrg/XB+ujf
59YH64P1wfpgfbA+WB+sD9YH64P1wfpgfbA+WB+sD9ZH2vvjPLw/zsP74zy8
P87D++M8vD/Ow/vjPLw/zsP74zy8P87D++M8vD/Ow/vjPLw/zsP74zy8P87D
++M8vD/Ow/vjPLw/zsP74zy8P87D++M8vD/Ow/vjPLw/zsP74zy8P87D++M8
vD/Ow/vjPLw/zsP74zy8P87D++M8vD/Ow/vjPLw/zsP74zy8P87D++M8vD/O
w/vjPLw/zsP74zy8P87D++M8vD/Ow/vjPLw/zt3Htz7sVX/zGd/3d91H+tLW
R16/tvWR96/b+sjn57Y+8rylrY88/9jWB+uD9cH6YH2wPlgfrA/WB+uD9cH6
YH2wPlgfrA/WB+uD9cH66N/n1gfrg/XB+mB9sD5YH6wP1gfrg/XB+mB9sD5Y
H6wP1kd6ml549z75h+4jfWnrI69f2/rI+9dtfeTzc1sfed7S1keef2zrg/XB
+mB9sD5YH6wP1gfrg/XB+mB9sD5YH6wP1gfrg/XB+mB99O9z64P1wfpgfbA+
WB+sD9YH64P1wfpgfbA+WB+sD9YH6yM9Tc983Rs/86HfeU/3kb609ZHXr219
5P3rtj7y+bmtjzxvaesjzz+29cH6YH2wPlgfrA/WB+uD9cH6YH2wPlgfrA/W
B+uD9cH6YH2wPvr3ufXB+mB9sD5YH6wP1gfrg/XB+mB9sD5YH6wP1gfrg/WR
nqZX3/3nrfd2H+lLWx95/drWR96/busjn5/b+sjzlrY+8vxjWx+sD9YH64P1
wfpgfbA+WB+sD9YH64P1wfpgfbA+WB+sD9YH66N/n1sfrA/WB+uD9cH6YH2w
PlgfrA/WB+uD9cH6YH2wPlgf6Wl65Wvf/8cf8G3/0n2kL2195PVrWx95/7qt
j3x+busjz1va+sjzj219sD5YH6wP1gfrg/XB+mB9sD5YH6wP1gfrg/XB+mB9
sD5YH6yP/n1ufbA+WB+sD9YH64P1wfpgfbA+WB+sD9YH64P1wfpgfaSn6Vvu
/vvIv3Yf6UtbH3n92tZH3r9u6yOfn9v6yPOWtj7y/GNbH6wP1gfrg/XB+mB9
sD5YH6wP1gfrg/XB+mB9sD5YH6wP1gfro3+fWx+sD9YH64P1wfpgfbA+WB+s
D9YH64P1wfpgfbA+WB/pafralx7f/02v/vfuI31p6yOvX9v6yPvXbX3k83Nb
H3ne0tZHnn9s64P1wfpgfbA+WB+sD9YH64P1wfpgfbA+WB+sD9YH64P1wfpg
ffTvc+uD9cH6YH2wPlgfrA/WB+uD9cH6YH2wPlgfrA/WB+sjPU0vuPvv6+/v
PtKXtj7y+rWtj7x/3dZHPj+39ZHnLW195PnHtj5YH6wP1gfrg/XB+mB9sD5Y
H6wP1gfrg/XB+mB9sD5YH6wP1kf/Prc+WB+sD9YH64P1wfpgfbA+WB+sD9YH
64P1wfpgfbA+0tP0+Z/xCU965+uv3Uf60tZHXr+29ZH3r9v6yOfntj7yvKWt
jzz/2NYH64P1wfpgfbA+WB+sD9YH64P1wfpgfbA+WB+sD9YH64P1wfro3+fW
B+uD9cH6YH2wPlgfrA/WB+uD9cH6YH2wPlgfrA/WR3qaPuvu/5/1n91H+tLW
R16/tvWR96/b+sjn57Y+8rylrY88/9jWB+uD9cH6YH2wPlgfrA/WB+uD9cH6
YH2wPlgfrA/WB+uD9cH66N/n1gfrg/XB+mB9sD5YH6wP1gfrg/XB+mB9sD5Y
H6wP1kd6mp6+e87zvuwt/919pC9tfeT1a1sfef+6rY98fm7rI89b2vrI849t
fbA+WB+sD9YH64P1wfpgfbA+WB+sD9YH64P1wfpgfbA+WB+sj/59bn2wPlgf
rA/WB+uD9cH6YH2wPlgfrA/WB+uD9cH6YH2kzT+myvkHX9o5/3D92s75h/vX
7Zx/eH5u5/zDeUs75x/OP7Zz/jFVzj+myvnHVDn/mCrnH1Pl/GOqnH9MlfOP
qXL+MVXOP6bK+cdUOf+YKucf//efU2P+MVXOP6bK+cdUOf+YKucfU+X8Y6qc
f/zf7xPzj6ly/jFVzj+myvnHVDn/mCrnH1Pl/GOqnH9MlfOPqXL+MVXOP6bK
+cdUOf+YKucfU+X8Y6qcf/hu6RmDp2l+968968Uv/4DuI31p6yOvX9v6yPvX
bX3k83NbH3ne0tZHnn9s64P1wfpgfbA+WB+sD9YH64P1wfpgfbA+WB+sD9YH
64P1wfpgffTvc+uD9cH6YH2wPlgfrA/WB+uD9cH6YH2wPlgfrA/WB+sjbT64
6j7Sl3bOB1fdB+d8cFU5H1xVzgdX3QfnfHBVOR9cVc4HV5XzwVXlfHDVfXDO
B1eV88FV5XxwVTkfXFXOB1eV88FV5XxwVTkfXFXOB1eV88FV5XxwVTkfXFXO
B1eV88FV5XxwVTkfXFXOB1eV88FV5XxwVTkfXFXOB1eV88FV5XxwVTkfXFXO
B1eV88FV5XxwVTkfXFXOB1eV88FV5XxwVTkfXFXOB1eV88FV95Gepv/8omd9
6Wtfse4+0pe2PvL6ta2PvH/d1kc+P7f1kectbX3k+ce2PlgfrA/WB+uD9cH6
YH2wPlgfrA/WB+uD9cH6YH2wPlgfrA/WR/8+tz5YH6wP1gfrg/XB+mB9sD5Y
H6wP1gfrg/XB+mB9sD7S5ueb7iN9aef8fNN9cM7PN5Xz803l/HzTfXDOzzeV
8/NN5fx8Uzk/31TOzzfdB+f8fFM5P99Uzs83lfPzTeX8fFM5P99Uzs83lfPz
TeX8fFM5P99Uzs83lfPzTeX8fFM5P99Uzs83lfPzTeX8fFM5P99Uzs83lfPz
TeX8fFM5P99Uzs83lfPzTeX8fFM5P99Uzs83lfPzTeX8fFM5P99Uzs83lfPz
TeX8fFM5P990H+lp+qfffttL/+KHH9Z9pC9tfeT1a1sfef+6rY98fm7rI89b
2vrI849tfbA+WB+sD9YH64P1wfpgfbA+WB+sD9YH64P1wfpgfbA+WB+sj/59
bn2wPlgfrA/WB+uD9cH6YH2wPlgfrA/WB+uD9cH6YH2k7Zdsu4/0pZ37Jdvu
g3O/ZNt9cO6XbLsPzv2SbeV+ybZyv2TbfXDul2y7D879km3lfsm2cr9kW7lf
sq3cL9lW7pdsK/dLtpX7JdvK/ZJt5X7JtnK/ZFu5X7Kt3C/ZVu6XbCv3S7aV
+yXbyv2SbeV+ybZyv2RbuV+yrdwv2Vbul2wr90u2lfsl28r9km3lfsm2cr9k
W7lfsq3cL9lW7pdsK/dLtpX7JdvK/ZJt5X7JtvtIT9P5oRe+cvmJD+w+0pe2
PvL6ta2PvH/d1kc+P7f1kectbX3k+ce2PlgfrA/WB+uD9cH6YH2wPlgfrA/W
B+uD9cH6YH2wPlgfrA/WR/8+tz5YH6wP1gfrg/XB+mB9sD5YH6wP1gfrg/XB
+mB9sD7S9q923Uf60s79q133wbl/tes+OPevdt0H5/7VrnL/ale5f7XrPjj3
r3bdB+f+1a5y/2pXuX+1q9y/2lXuX+0q9692lftXu8r9q13l/tWucv9qV7l/
tavcv9pV7l/tKvevdpX7V7vK/atd5f7VrnL/ale5f7Wr3L/aVe5f7Sr3r3aV
+1e7yv2rXeX+1a5y/2pXuX+1q9y/2lXuX+0q9692lftXu8r9q13l/tWucv9q
132kp+lPX/Wun3zOzz28+0hf2vrI69e2PvL+dVsf+fzc1keet7T1kecf2/pg
fbA+WB+sD9YH64P1wfpgfbA+WB+sD9YH64P1wfpgfbA+WB/9+9z6YH2wPlgf
rA/WB+uD9cH6YH2wPlgfrA/WB+uD9cH6SNtPnLuP9KWd+4lz98G5nzh3H5z7
iXP3wbmfOFfuJ86V+4lz98G5nzh3H5z7iXPlfuJcuZ84V+4nzpX7iXPlfuJc
uZ84V+4nzpX7iXPlfuJcuZ84V+4nzpX7iXPlfuJcuZ84V+4nzpX7iXPlfuJc
uZ84V+4nzpX7iXPlfuJcuZ84V+4nzpX7iXPlfuJcuZ84V+4nzpX7iXPlfuJc
uZ84V+4nzpX7iXPlfuLcfaSn6c3/+M2/+r2//kHdR/rS1kdev7b1kfev2/rI
5+e2PvK8pa2PPP/Y1gfrg/XB+mB9sD5YH6wP1gfrg/XB+mB9sD5YH6wP1gfr
g/XB+ujf59YH64P1wfpgfbA+WB+sD9YH64P1wfpgfbA+WB+sD9ZH2v7uvvtI
X9q5v7vvPjj3d/fdB+f+7r774Nzf3Vfu7+4r93f33Qfn/u6+++Dc391X7u/u
K/d395X7u/vK/d195f7uvnJ/d1+5v7uv3N/dV+7v7iv3d/eV+7v7yv3dfeX+
7r5yf3dfub+7r9zf3Vfu7+4r93f3lfu7+8r93X3l/u6+cn93X7m/u6/c391X
7u/uK/d395X7u/vK/d195f7uvnJ/d1+5v7uv3N/dV+7v7ruP9DS94YtXf/TG
3/vg7iN9aesjr1/b+sj712195PNzWx953tLWR55/bOuD9cH6YH2wPlgfrA/W
B+uD9cH6YH2wPlgfrA/WB+uD9cH6YH3073Prg/XB+mB9sD5YH6wP1gfrg/XB
+mB9sD5YH6wP1gfrI22//dB9pC/t3G8/dB+c++2H7oNzv/3QfXDutx8q99sP
lfvth+6Dc7/90H1w7rcfKvfbD5X77YfK/fZD5X77oXK//VC5336o3G8/VO63
Hyr32w+V++2Hyv32Q+V++6Fyv/1Qud9+qNxvP1Tutx8q99sPlfvth8r99kPl
fvuhcr/9ULnffqjcbz9U7rcfKvfbD5X77YfK/fZD5X77oXK//VC5336o3G8/
VO63Hyr32w/dR3qafuGNP/rX//q2R3Qf6UtbH3n92tZH3r9u6yOfn9v6yPOW
tj7y/GNbH6wP1gfrg/XB+mB9sD5YH6wP1gfrg/XB+mB9sD5YH6wP1gfro3+f
Wx+sD9YH64P1wfpgfbA+WB+sD9YH64P1wfpgfbA+WB9p338sw/cfS/fB+f3H
0n1wfv+xdB+c338s3Qfn9x/L8P3HMnz/sXQfnN9/LMP3H8vw/ccyfP+xDN9/
LMP3H8vw/ccyfP+xDN9/LMP3H8vw/ccyfP+xDN9/LMP3H8vw/ccyfP+xDN9/
LMP3H8vw/ccyfP+xDN9/LMP3H8vw/ccyfP+xDN9/LMP3H8vw/ccyfP+xDN9/
LMP3H8vw/ccyfP+xDN9/LMP3H8vw/ccyfP+xdB/paXruqw/Xx/7jfR/pS1sf
ef3a1kfev27rI5+f2/rI85a2PvL8Y1sfrA/WB+uD9cH6YH2wPlgfrA/WB+uD
9cH6YH2wPlgfrA/WB+ujf59bH6wP1gfrg/XB+mB9sD5YH6wP1gfrg/XB+mB9
sD5YH+lp+qC770Ee2X2kL2195PVrWx95/7qtj3x+busjz1va+sjzj219sD5Y
H6wP1gfrg/XB+mB9sD5YH6wP1gfrg/XB+mB9sD5YH6yP/n1ufbA+WB+sD9YH
64P1wfpgfbA+WB+sD9YH64P1wfpgfaSn6a3P/pLv/4333feRvrT1kdevbX3k
/eu2PvL5ua2PPG9p6yPPP7b1wfpgfbA+WB+sD9YH64P1wfpgfbA+WB+sD9YH
64P1wfpgfbA++ve59cH6YH2wPlgfrA/WB+uD9cH6YH2wPlgfrA/WB+uD9ZGe
pu+/+17qUd1H+tLWR16/tvWR96/b+sjn57Y+8rylrY88/9jWB+uD9cH6YH2w
PlgfrA/WB+uD9cH6YH2wPlgfrA/WB+uD9cH66N/n1gfrg/XB+mB9sD5YH6wP
1gfrg/XB+mB9sD5YH6wP1kd6mj77/T+1fOH1vo/0pa2PvH5t6yPvX7f1kc/P
bX3keUtbH3n+sa0P1gfrg/XB+mB9sD5YH6wP1gfrg/XB+mB9sD5YH6wP1gfr
g/XRv8+tD9YH64P1wfpgfbA+WB+sD9YH64P1wfpgfbA+WB+sj/Q0/c/d94TH
7iN9aesjr1/b+sj712195PNzWx953tLWR55/bOuD9cH6YH2wPlgfrA/WB+uD
9cH6YH2wPlgfrA/WB+uD9cH6YH3073Prg/XB+mB9sD5YH6wP1gfrg/XB+mB9
sD5YH6wP1gfrIz1Nb3r9O37qPdOju4/0pa2PvH5t6yPvX7f1kc/PbX3keUtb
H3n+sa0P1gfrg/XB+mB9sD5YH6wP1gfrg/XB+mB9sD5YH6wP1gfrg/XRv8+t
D9YH64P1wfpgfbA+WB+sD9YH64P1wfpgfbA+WB+sj/Q0fcfd97b3faQvbX3k
9WtbH3n/uq2PfH5u6yPPW9r6yPOPbX2wPlgfrA/WB+uD9cH6YH2wPlgfrA/W
B+uD9cH6YH2wPlgfrI/+fW59sD5YH6wP1gfrg/XB+mB9sD5YH6wP1gfrg/XB
+mB9pKfpU7/iKU/+oQ98TPeRvrT1kdevbX3k/eu2PvL5ua2PPG9p6yPPP7b1
wfpgfbA+WB+sD9YH64P1wfpgfbA+WB+sD9YH64P1wfpgfbA++ve59cH6YH2w
PlgfrA/WB+uD9cH6YH2wPlgfrA/WB+uD9ZGepvfdfY9+30f60tZHXr+29ZH3
r9v6yOfntj7yvKWtjzz/2NYH64P1wfpgfbA+WB+sD9YH64P1wfpgfbA+WB+s
D9YH64P1wfro3+fWB+uD9cH6YH2wPlgfrA/WB+uD9cH6YH2wPlgfrA/WR3qa
fvVRL//1Jx0e232kL2195PVrWx95/7qtj3x+busjz1va+sjzj219sD5YH6wP
1gfrg/XB+mB9sD5YH6wP1gfrg/XB+mB9sD5YH6yP/n1ufbA+WB+sD9YH64P1
wfpgfbA+WB+sD9YH64P1wfpgfaSn6WV3/3sN932kL2195PVrWx95/7qtj3x+
busjz1va+sjzj219sD5YH6wP1gfrg/XB+mB9sD5YH6wP1gfrg/XB+mB9sD5Y
H6yP/n1ufbA+WB+sD9YH64P1wfpgfbA+WB+sD9YH64P1wfpgfaSn6alvecNn
/eGjP6T7SF/a+sjr17Y+8v51Wx/5/NzWR563tPWR5x/b+mB9sD5YH6wP1gfr
g/XB+mB9sD5YH6wP1gfrg/XB+mB9sD5YH/373PpgfbA+WB+sD9YH64P1wfpg
fbA+WB+sD9YH64P1wfpIT9O77v73TO77SF/a+sjr17Y+8v51Wx/5/NzWR563
tPWR5x/b+mB9sD5YH6wP1gfrg/XB+mB9sD5YH6wP1gfrg/XB+mB9sD5YH/37
3PpgfbA+WB+sD9YH64P1wfpgfbA+WB+sD9YH64P1wfpIT9PPfsd/vfVFj39c
95G+tPWR169tfeT967Y+8vm5rY88b2nrI88/tvXB+mB9sD5YH6wP1gfrg/XB
+mB9sD5YH6wP1gfrg/XB+mB9sD7697n1wfpgfbA+WB+sD9YH64P1wfpgfbA+
WB+sD9YH64P1kZ6mr7r73/u57yN9aesjr1/b+sj712195PNzWx953tLWR55/
bOuD9cH6YH2wPlgfrA/WB+uD9cH6YH2wPlgfrA/WB+uD9cH6YH3073Prg/XB
+mB9sD5YH6wP1gfrg/XB+mB9sD5YH6wP1gfrIz1Nj/v4Z3/xfzzhQ7uP9KWt
j7x+besj71+39ZHPz2195HlLWx95/rGtD9YH64P1wfpgfbA+WB+sD9YH64P1
wfpgfbA+WB+sD9YH64P10b/PrQ/WB+uD9cH6YH2wPlgfrA/WB+uD9cH6YH2w
PlgfrA/+X4TkC4U=
     "], {{{}, {
        EdgeForm[], 
        RGBColor[1., 0.95, 0.75], 
        GraphicsGroupBox[{
          PolygonBox[CompressedData["
1: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
           "]]}]}}}], {
    DisplayFunction -> Identity, AspectRatio -> 1, 
     AxesOrigin -> {Automatic, Automatic}, DisplayFunction :> Identity, Frame -> 
     True, FrameLabel -> {None, None}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "GridLinesInFront" -> True}, 
     PlotRange -> {{0., 20.}, {0., 6.283185307179586}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
       FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           GraphicsBox[{
             RasterBox[{{{0.148, 0.33, 0.54}}, {{1., 0.95, 0.75}}}, {{
                Rational[-15, 2], -180}, {
                Rational[15, 2], 180}}], {Antialiasing -> False, 
              AbsoluteThickness[0.1], 
              Directive[
               Opacity[0.3], 
               GrayLevel[0]], 
              LineBox[
               NCache[{{
                  Rational[15, 2], -180}, {
                  Rational[-15, 2], -180}, {
                  Rational[-15, 2], 180}, {
                  Rational[15, 2], 180}, {
                  Rational[15, 2], -180}}, {{
                 7.5, -180}, {-7.5, -180}, {-7.5, 180}, {7.5, 180}, {
                 7.5, -180}}]]}, {
              CapForm[None], {}}, 
             StyleBox[{Antialiasing -> False, 
               StyleBox[
                
                LineBox[{{7.500000000000001, -180.00000000000003`}, {
                 7.500000000000001, 180.00000000000003`}}], 
                Directive[
                 AbsoluteThickness[0.2], 
                 Opacity[0.3], 
                 GrayLevel[0]], StripOnInput -> False], 
               StyleBox[
                StyleBox[{{
                   StyleBox[
                    LineBox[{{{7.500000000000001, 0.}, 
                    Offset[{4., 0}, {7.500000000000001, 0.}]}}], 
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]], StripOnInput -> False]}, 
                  StyleBox[
                   StyleBox[{{
                    StyleBox[{
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox[
                    "\"0.04652\"", 0.0465173, AutoDelete -> True], 
                    NumberForm[#, {
                    DirectedInfinity[1], 5}]& ], TraditionalForm], 
                    Offset[{7., 0.}, {7.500000000000001, 0.}], {-1, 0.}, 
                    Automatic, {1, 0}]}, 
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]], {
                    Directive[
                    Opacity[1]]}, StripOnInput -> False]}, {}}, {
                    Directive[
                    Opacity[1]]}, StripOnInput -> False], "GraphicsLabel", 
                   StripOnInput -> False]}, "GraphicsTicks", StripOnInput -> 
                 False], {
                 Directive[
                  AbsoluteThickness[0.2], 
                  GrayLevel[0.4]]}, StripOnInput -> False]}, "GraphicsAxes", 
              StripOnInput -> False]}, PlotRangePadding -> Scaled[0.02], 
            PlotRange -> All, Frame -> True, 
            FrameTicks -> {{False, False}, {True, False}}, FrameStyle -> 
            Opacity[0], FrameTicksStyle -> Opacity[0], 
            ImageSize -> {Automatic, 360}, BaseStyle -> {}], Alignment -> 
           Left, AppearanceElements -> None, ImageMargins -> {{5, 5}, {5, 5}},
            ImageSizeAction -> "ResizeToFit"], LineIndent -> 0, StripOnInput -> 
          False], {FontFamily -> "Arial"}, Background -> Automatic, 
         StripOnInput -> False], TraditionalForm]}, "BarLegend", 
      DisplayFunction -> (#& ), 
      InterpretationFunction :> (RowBox[{"BarLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{
                 RowBox[{"Blend", "[", 
                   RowBox[{"\"M10DefaultDensityGradient\"", ",", "#1"}], 
                   "]"}], "&"}], ",", 
               RowBox[{"{", 
                 RowBox[{"0.000057737515`", ",", "0.0465173`"}], "}"}]}], 
             "}"}], ",", 
           RowBox[{"{", 
             RowBox[{"{", 
               RowBox[{"0", ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
               "}"}], "}"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
           RowBox[{"LegendMarkerSize", "\[Rule]", "360"}], ",", 
           RowBox[{"Charting`TickAnnotations", "\[Rule]", "None"}], ",", 
           RowBox[{"ScalingFunctions", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"Identity", ",", "Identity"}], "}"}]}], ",", 
           RowBox[{"Charting`TickSide", "\[Rule]", "Right"}], ",", 
           RowBox[{"ColorFunctionScaling", "\[Rule]", "True"}]}], "]"}]& )], 
     TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.7843972612276034`*^9},
 CellLabel->"Out[38]=",ExpressionUUID->"48739109-6b90-41c4-b0f9-2e305596900f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListContourPlot", "[", 
  RowBox[{
   RowBox[{"Transpose", "@", "gamma"}], ",", 
   RowBox[{"DataRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", "20"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", 
        RowBox[{"2", "\[Pi]"}]}], "}"}]}], "}"}]}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", 
      RowBox[{"20", 
       RowBox[{"Min", "[", "gamma", "]"}]}]}], "}"}]}], ",", 
   RowBox[{"ColorFunction", "\[Rule]", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"#", "\[LessEqual]", 
         RowBox[{"20", 
          RowBox[{"Min", "[", "gamma", "]"}]}]}], ",", "Black", ",", 
        "White"}], "]"}], "&"}], ")"}]}]}], 
  RowBox[{"(*", 
   RowBox[{",", 
    RowBox[{"InterpolationOrder", "\[Rule]", "5"}]}], "*)"}], "]"}]], "Input",
 CellChangeTimes->{{3.7843966270907164`*^9, 3.7843966979601727`*^9}, {
   3.784396742340074*^9, 3.784396791700028*^9}, 3.784396932886141*^9, {
   3.7843971567966623`*^9, 3.78439716317959*^9}, {3.7843973837641673`*^9, 
   3.7843975460940437`*^9}, {3.7843976954814615`*^9, 3.7843977066296444`*^9}},
 CellLabel->"In[56]:=",ExpressionUUID->"a43b93ec-99d8-403c-a4b3-de81c83bc6f1"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[
    GraphicsComplexBox[CompressedData["
1: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
ww77dfquKM7MV8V8N8ji1c/hcXL7pJNWG8KyMHsUW39jWI0TaL3H7troqb+G
2G/zts/zhh4/Zmejhpc7avjA/7Ciw+kr+O85lZ854T24Bf/9JNMN79Nef8L8
dKpSXYGTKMlrmzxHYhoxi3ULDxxSwN8zf+Lna2GlYj4n4hs3Q12E9GN8XKtJ
e3gT87SczgO+plSSnQYujUi9wpxm7hFY4Yq/N25fZxYwwMufkB+jm+PYOXof
c2+t1ybBNVSSRw+ENFE/YaYYxq5h+OLvk9H5TGuqNHM7iL83rkyIOnnXCvMX
C7uv06Tx30eavb5RMC0Fs0rxBtv13piVmF+y5Bbj75P9Du8ybDqA2SKb71rg
Ovy9skBvxdwPJzAz/UWIuf74++Vn/rZ5pRH4++U1xkkKY7zt0flA693ofCBG
5wMxOh+I0flAjK4XWu9G1wsxul6I0fVCjK4XYnR/oPVjdH8gRvcfWr9F9x9i
dP8hRvffxL9XZGPbffPvQyZ5vdrvZFsus2OR9ztaP0Xnv1No7bI1fmxAzyda
r0Lnf+OMBVs//sS8t7v4wadPmE/c0p/9+SXm/MMFR9qq2YDiD1ovQvEHMYo/
iFH8mfj3ZjoiMtKWbPjXescxMfMrvpg/bFXQ3uiOeZ/JPCn2esxTlVaMVq3G
fIvPpW2nKV6fKOg2Yp75jXmtsqqJ4DfMo+u4wVs/4O9PI9268ip6MDPn9tKa
uzGfEhnbMvyFA+h9hNZH0PsIMXofTfz7McTBoJGPe/B6wKOAp19278Bsu1np
OcML9/tNlm60UNmDOdskz+aSH2YRi8H1Gp6YPSxN3a+54nyF5Wy/UvsXl+y/
X2q5Z+/dhznX6ezqh98wX34bsnxm07/Y3tH4wBP8fejV2uGozGHMGuk2Ze5d
mHN9Ln1XbcY8m+CT/fEEf0/6wbKvbxdvfpSvoPWF/e1Le1yuaUB6RYmJ45Me
wmXII4O9SxPYbjPPDOb3ECYXH8hoRWsCq2HNRmZnD6Fmq5K8/LwmMJcfmD5z
Zi/B5I/gbL2lCYyK/JaFG3sJvWIHDaPFWqC99eesN6k9xKI5TaFKa7Vgj+2z
Xd1NPYTpdefn1B1aULnk2j0B+V5itd5HpR/HtICuHceW3tBLGATlLLo9RRuk
Urqu3y3sIZhT2tNzniqCh86Fw58u9BE2rY+7nJsUIXFP6djz6j7ixJXCRdxv
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
YW2gpu64K8ib//8AP67SLw==
     "], {{{
        EdgeForm[], 
        GrayLevel[0], 
        GraphicsGroupBox[{
          PolygonBox[CompressedData["
1:eJwtkjFLQzEUhUNe4uJScdDFQQeHjuIm6CIuggUrWAVBdOmixTpY6GZBO9RV
3s/oP3DSRRAHdXDtIhYncXARv8O9Q15OTm5uzjkv80et7dMYQlhmFIwLPkPm
K+ZJRhtcYV5NIbTAXxS/sZ4C18Ab8GfgCbgO60XwE9xttj5d+BPWA/BaYX3F
a/86W88fzh3Dl+AOtQeO68zfjCVwj5qbaPiFmobX6Nwc6z3wM/szfu8l3Hs0
vgqe1RnwI9w0eBf8AP4sTHM7mh/5ajLXHd8l0y39W4VpleZxNK3SIL21bPU6
d56t/4j9/Wz9lU3XvUvjivdUNhXPeSfZEP5L5kf65UN+hv5/FtzLR7Ks1V8+
7qPdK389z6qM5k01/WjZiVeu8ibN+p+H2XhlXPpZcSPPSr373keexp6D3kXV
83+FG2R7D79w6+5RXpuep3LadI96X//FvEph
           "]], 
          
          PolygonBox[{{710, 87, 88, 1048}, {1273, 113, 111, 1415}, {851, 152, 
           140, 836}, {749, 111, 113, 1094}, {715, 88, 89, 1053}, {774, 113, 
           114, 1099}, {1278, 114, 113, 1420}, {846, 140, 152, 856}, {725, 89,
            88, 1058}, {1256, 88, 87, 1395}}]}]}, {
        EdgeForm[], 
        GrayLevel[1], 
        GraphicsGroupBox[{
          PolygonBox[CompressedData["
1:eJwtkk8rRGEUxm/vHyspykLZSEpTdyGzoMbOgp3UWGkWipIyxXKU72ClzIq5
FqauoiywwALNd7DwSXh+nbN4e5977vnzPM955/a628ehKIqWTtTJuSh6uuf1
caMfm8J/wpM6p8Izug+S5ZBb6nwKXyarId4RXlL8S7gv/Kw+beFx4WXhMeEN
3X3lfwgvKreOlk/dQ7Sed8JHwpXwie71bLXNYDXUXqjnRLacnvB5MjyVrQZM
DH70HCp2m0zrG9g5VMp/cg618E8y7XiwqoNHK4o/uieH6FbOrPCv6u6TcfuO
pg0M37NgOTvCa8HmtoT3Pc5//oFH6nGdbNZrtBnMgsuV84Rv6X3QseCel9H0
oxfPutk8fw/Wi56NYL6Qg2e17wjvd5PtdzqaHvjAceQa0Qpv5jK/cv/ZYdP1
4sHQd8cO8YI4O+/4m4Ev7wBuL8HeE3OZzy7pidYt58O7a7j/7IG3iCeDYNro
w/sa+F7YT+me8E7/Ac9jUVQ=
           "]], 
          PolygonBox[CompressedData["
1:eJwtk7svbFEUxk/OOUNBdyUoSNC50Uu4Q+FREDPxSHBDPG5BgQSJmVDNiEeC
0iNRKf0BWioK4t6bMBJKCgwaj4QCvy97Fb/kO2vvffZea32rbGiifdz3PC8K
IcT5iMEIjEI8wjd0oDthED0Aq+g1+I3uhQQ6CT2B53XDMPyBVdZW4J2ff0At
sRoYQ49DJ7oDGqARksQS0Ifuhw3OrsMsei5wZ3S2Dl0PS6wtwit3v/kuprU2
iEE1a8oP6f2yHJTLPv84gHM4g2c2vECX3gSf8AVpSMEMawloRbdAHjrf3qS3
FXJPERSw9gMOueMIttFH3H0IVayfEDuGEuKlodujvUXoYsigz6EcXQF3cAtT
nJ2OuFi5xbSmN+vtac7MQzOxJsghlgsHgctdNdghvhtxb9Gb9li4gEzgeh63
HqqXp+z9G7oeq9dnVqs6iMIjsSfIcvYeJtFTvstBuShH5aocles/9H/f1Ui1
Slltf0Jl6HLO2B7tvYQr3+Ws3K/ZcxM6jzSYh+Ql9Vy9z8KD7zwn78lDSfOc
vCePyCtf1lt5Ut5UjspVOWStZqqdeqxeKyfltgTLNhOaDc2EZmORvQuB86i8
GjPvaQY0C8t2VjOiWdlCb/puhjRLD/b2qNVWnpQ3M9YbeW7G7tBd6nHa/rFl
NVKtKq2Wmpk+mynNlnqkXskT8sY3XJWCwg==
           "]], 
          
          PolygonBox[{{780, 779, 784, 115, 1104}, {699, 85, 709, 1043, 
           1044}, {789, 115, 784, 1108, 1109}, {1252, 1251, 709, 85, 
           1391}}]}]}, {
        EdgeForm[], 
        GrayLevel[1], 
        GraphicsGroupBox[{
          PolygonBox[CompressedData["
1:eJxNkj8ohVEYxk/fd87AZJbyp2QRBsMtdYtSyiIT3ctA370mJqWUwaTuoNQt
RQZWSunewnQHmzIrk1IWJeMt5ff0voPh/Z7nvOec933e53zDGzvL21kIYZrI
iRM+D+BZCqHLRh2+D6+BFaJK/JLfAg+S4RqxTpxytwNegfOcYTvM8rkgHuEj
YCmGUMA/2I/wJfgt/Cm381Pwe/K98DY4Fq3vW2YoHcW/3p/kNzlzCJ+gxkw0
Le/kR5PpOSY3kGyuI/ig62lE66e+0tvw2eXBCuse+AKb/ax34UO5zaq+8qWS
mc7FZCEu7dIhPSVwzuuoXtXv1VxTxz2ru6+q3WVdBpucv8nMH/lUJMufk+tz
31qZrZV/JfcVrcY4+O0+TEZ7D/W6TPYGml0e3EXT9sz+arQZNatqlV1L29/i
BX4dzSu9Vcu1SaPuq45mlb/yUF7qDaRBWn4ym3uPAs3cNOi/+AOozEpD
           "]], 
          PolygonBox[CompressedData["
1:eJwtlW1ol1UYh/88L2qSilqiEUXMD5mpGAlqakpqCww13CSdiuJmqWikgtOJ
ggvfyKAQteaX1AkqTpwU+ALOD6WWrIJUyAwlwbcMJAuMsOviPh8udu/c55zn
nPv3u8//hQXL31mWVSqVVVDAOP4ZC2NK/sJl4ktQRXIg/El8H94kroY7cBtW
MncVHM4rlUNwDNrhOHPb4X1yi+Fz4t0wn3gBvM3aKfAkc3vAKXIn4SnGnoZz
xN/CAOJnYBJrJsKrjI2AvsR9oCf0gg9gOXSQOwvroAlqGZsJo4lHwUjiUXCR
+Ht4jr2fh63EW2A2uTq4ydjvRezp3q2wH1o46x6YQ67OsxL3g8XeFaYxZ3oZ
NatKNbJWe6AFhpAbCgdY05rHnu49mLUvpTN61nXkmqA/uQHQwFh9upN3+4Kx
E+h2EnbkoYnadCXuBi8TzyFXB78xf7pnS2f0rJ3M6U7uCWhn7jCYW4k1fxDv
hl1FaHo43dm7v8h3B5XxDb+lhmppTa2tHtJLaqiWaqiWaq7224k/gTbWHoHh
jL1izZg7DXoz1icPTdTmR+b+lIWGanmBse9gPLxehCf1ppqpXSPxmiw8rJeH
EA+FHnqtCI/pNT2pN39l7FoRmqndDHI1WXhO7+kRvaJH9apn9Kw/QCfcZewe
1BLXwGObiX3e4G89YQM8YP3qMuJF8Ij/T+v5PDRX+7Vl5N6D/7LY071XEK9M
d/Junenb1sBafGON4SFz/4Jm5nyURU2tbUvynjWwFq3EB+At4uosesre8hsr
Ug/YCx3sdQa+ZO5eWAQNUDK3i3Umtxo2weY8etLebGPOUb3DnJ1leFgvq7na
/0zuUhGPzmPG9zG2P4s3xLfEnrP3lpJbAh9aA1jDWKMeJZ4HV+3VStR4JONb
WLsZ/mb8nyw8qlc/JfcZbCf+GB4R/1tET9lbG4mbYRZ7vgsLoT6PN8W3ZS25
JrVlbAZMgslwA67n0ZMNyTN65wxzO2BbEb1pjz7LPleYezmPHrQXfQN8C3al
XrMm1kYN1XICjIeproEN5NYX8eb1TRqoRRW5gXncwbuoSWN6k3yb9GRt0kRt
zjF2Po87eTdrvDTV2Fr7Db/1NfFX9ijfaCvjTfdtP0h8qIwaWSs1UZvJqTZj
YGwentSb11OtBhfxFqnZL9z/VhZe9815rYg7Tk0aqIU1tJbW7ErSfG7SoCZ5
Tu/pMb2mp/W2ntW7elbv2mP2mpqrvR7RK3puX/qNOp56pjn9RvlbZQ/by3pG
71SX8Vb6Zs7OogbWwhpZK2tkrXzTfNv+B3+05tE=
           "]], 
          PolygonBox[CompressedData["
1:eJwtkKFuAkEQhjfcnisJNDWolsCBaBAEU0EpBAOO4EgPBARwVPECfYSSqjpI
wCDQOFAgW1EEKVU4dJHlm8yJL/vvPzM7Mxtvv9QHIWPMDbhQcvXMYVagCo+O
MXkYWGNeiWXRI/QbfKBXeB5FKbQHGUfzOsTP1P/BCbp4ZbwFuoZecl5xD8M1
NVGIwZBYAy+JTkDLqneL3sLG0flkzrnVeaSf9O1x71vNlRp5z+fehDU1q5D2
lf4RvIegVnYrokvwRfwT9vBMLE3sF+2j79Hf6B0cg51ktyeph3d0AW/C+c9b
Bm/s6h/JX01hBgf8H6t5kt8l5y6YWfaVf5T/vADh3i2a
           "]]}]}, {
        EdgeForm[], 
        GrayLevel[1], 
        GraphicsGroupBox[{
          PolygonBox[CompressedData["
1:eJxNkj8vg1EUxm/uffsliIik5pYIktZswECsgpoqtEWic9VmalSt2hqxmyw+
BxFLjSIGi/g9OWcwnDzPe+55zt93qlLfqMUQwiKWsK0shFNwko8Gdgu/zIUw
AB+we6yFoAB+8n7I2zr8Dd1TNC7fDJjHprE14nrgCTFFcAkrY52c1UrgAW8X
8AVin+Hj8Ff4XjTeBAfYMvwumkbaCWJGyWod4X/HduDf5Ij49+FtYreD8Sr2
6HNonlJmvhG6RrQ8yncVbOa+66RX3vNk+g64S/wY/CVZrDSaU4tUzhZ1m5nl
qOArZ5ZDPTZ9rs2c9acaH/jqyXprg0PPd+29qsbQ96r9apddNCXwJpqu73Er
PsMxNX+SxXT9btq9vqt+X91Z99Y+88k00q4mu7E0Z9FqSPeb7DbqX/fR/NpD
BT6f7I66Z8/7HfjNi973V2b7nM3sTtrJXGa3Lf/7Pwqu0e40Vw38A9hET5E=

           "]], 
          PolygonBox[CompressedData["
1:eJwtlnuQj1Uch3/e9/2V/miT7TKtGivLVrRLV+uyZWUlNJhxTcOsqJhxGZRL
trZsgzUxiay1mhBmIkxKmjRD00WpVDNRUzEaZlRKTDfK9Dxzzh/P7HfPe97z
nt855/P5nHY1U4dOSXK53BuQwdP8U87fHvBPmsudgl9gJu2z4F3qPdCJujNs
yedyr8Iu2t6CpdTPwXkG+xcOwdfwB8/+TMMYjrUYGuAm+t4Iy+nzAhyAT+BD
+Ai28842uIU+t0IFbd3gOO+egN7Ud8Nv1KehHX2LoSOUwmTemQQ/0OcILKZe
BH/R92/oSN0BlvJsGbSgzsXf4G9ZS1szlFGX58Nv8rc5hmONhBH5MGfnPpF6
Aqxh7Gb4lrZv4BxzOQ9Xw1UwnLYRUAdPQSHvXAFzYDac493zcB31tbDQb8Jj
1LPgOPUJGE6fYbCXeh8U86wtNFAvsY1v7YX11Bugmmd94XbeuSMJc3JuK6hX
wnDqYVAN/aAcyqAbVDh3xrjSvaHvfriTtgaW7EWYSXseMveNZztgOt+aBvuo
34Mq+veGwTAE7qfvILiUugBaZOEgvkLfjfAAbaNhAkyEgc6VLi/D4/RrxdiX
wRPU87MwB+eyEgbRdxljLE3CGfQszsjCM8cYEM+kZ7OePs/Cx9T7YQv9tmZh
D91L99C9vJAGbfR0DrS3oa0IPqX+DIqYyzWwgLZ6qKR/L+jqGXY96VMGm3i2
OQt74F5sp94BN0ApfEfb9/AB77wPXai7wmbqTbCRb2zyd8M8+I9nF5wnzw67
ttRD4UGejYG51POgC2OXwyn4FQbybADspn7b38G7B6CKvn2gmLa28CX1V3CQ
Z5/D67TthNtgHGsxFs5m4Rt+6yD1F1nQrNpVQ2ppPHVNPuyJe1NH/SjvToIk
DXNwLm/CrixoTu01Uq+GJt5ZnYQxHGure+V8YGca1sC1qOXZk3AsCXPzGz14
v5b/5ydBs2rXNXat9RS9pZExVqkX2AC/03Y6rplrV0vb/DTssXs9xjOahDV0
Le+iroRe1JX5oHG1rqfoLSd5twP/lsC06Fl617306Q89qLtDBX2754Pm1X4D
7y2BNlAUPU6vc01cG9fAtVBjaq0VbZdnQWODo4bUkppVu55Zz65nxLMyCSZH
T9Vb9VS9VU8qjBpTa/fQ1gfO0OcsFKhdeId6D7ykZ8L10D4fxnTsIdRDoZq6
r75NXZUPmlf7Q5xLFn6jv/V5WA6P0PYwXETfi2E09agsrIFr4ZiOrQfqhWpS
bfaDddTrebYuHzSjds6opVzIuLqYQWaRGlErpTE7xvONh6KH6qV6sF58lL5H
4BAcToKG1FJnuBnm8u4cWAiL0pApZotnyrPVPq6NHq1Xr4EmWMGzlXAJtEyD
J+qNo/jGSM8HffrDfdT9k+Dherkeo9f4Tb/dSNuqfDijntVCaJ2GNXPtOkAJ
/AQ/Z8Hz6qOmmqLG1Xpp9CIz0+w008w2PU6v0xP0hnGMPTZmhtmxnT7b8iGz
zW49Tq8zg8yik0nQup7RM66Za+eaHo2ZbDZ7xjxr/mZ/uxpTa9OToB330L18
xnNPvRsWpMGz9W49U+90D93LsphlalJt6sF68WuwNQmZZXbNpM+MNGSy2WwG
m8XzoteaaWabZ74grqFraSabzWaoWWqGmWXeabzbeMfwrrGWsZvTcOfx7mOG
m+Vm5PTo6Xq7fex7OJ61krh3akSttI57q+bUnplsNqtJtTk73iXMFLPFTDPb
9Bi9pmU8azV6QS54kt7kncu71zHqH2NmmV1qUC2aQV2ihtXyrujVZoLZMCUN
2eyeTI0aVstN8ax7Z+wUPU6v807RLd4JvBt4h/Qu6RnyLHmn8W5jpplt3mG8
y3gH9S5qRlVFjagVPUVvUSNqxYwyq8w0s807TXXM5MqoUbWqZhqj5+q9erhe
vjNmi3dc77pqVK3qcXrdhpgVeoxeY+aZfd6ZvTv/D1fvZ1I=
           "]], 
          
          PolygonBox[{{1041, 1040, 693, 81, 703}, {1287, 1286, 804, 118, 
           1425}, {1249, 81, 692, 1386, 1387}, {1364, 27, 614, 637, 638}, {
           1427, 164, 876, 883, 884}, {995, 994, 614, 27, 1220}, {870, 869, 
           1146, 164, 873}, {1074, 95, 738, 1264, 1265}, {678, 677, 692, 81, 
           1031}, {1149, 1148, 876, 164, 872}, {797, 118, 1117, 790, 791}, {
           1031, 81, 693, 685, 686}, {872, 164, 1146, 863, 864}, {1407, 1406, 
           744, 105, 768}}]}]}, {
        EdgeForm[], 
        GrayLevel[1], 
        GraphicsGroupBox[{
          PolygonBox[CompressedData["
1:eJxNVTlPlFEU/XjvTQEKWqFWiBYGGS1QQI07g4k6YOIPEJhGXGAwKlbiALJZ
GAWXmAjDWMmSGE0YiAtaaGKNWkmpJlgZG7ExnuM9JhR37nlv7rv7vV95Kn2y
3UVR9BDkQUOgLtA1UGHMcFOIoinwLGgctAOC/eBncL8OfDNoE2irt3fNuE+D
eoFXQcdpGFgL3AicAz4C/AeyE+CjoDFQD84z4DfBi8E3gNaDJnF+B/4UPIDO
AfdBzycvndDXB/wE+C7uY8DngfuB54PJUHYKOFAffl7gXABcgbfjwPPAOcg/
A70HrgFfDXoAfBnyOci8Br4HPCl/mYtDznQehGwCvAGUBM3hvpGxB4uJcfLd
Ms4p8FrwcvDtoG2g497yfhH3TdC1BfgDcCXuM8AtwD+95fkCdA87k6FsXrpZ
n1+Qa6H/4KWqCe1UgnbRLrmz2Gvxtg06HwNnwDuVQ+ZyVvqmQaec6fpMWeAD
wK14+xXnMmA2T43yVg0ex303cAo+5J3loxD4ZbC6LuD/tDfd7eCXcH+D/gD/
8OZrBu+6ncXLuFlL1vQ77ubA30RWj1nxedmmD+PQd92bXC/43mA9s4S3ncH6
rUX256Rj1lntioLZYQ5Zp65g+WGe9ql2X5zlm3mfUf+yvpSbwH+HOUfBemRS
/03JDt/EY9bP94P1NPFEzPppGDTCPvFWqxFneWf+m5z1a4Fq+NxbvOzZjeqj
+Iq8MLYGyK0B/6gez+u/V7Bdwh7D/S39N656xtUvuWC2OCv0ifM+ENn883wn
srpx3jO6n1asV4L9n/TG+W4Q1OFsrpe8zSFn5y1wlbddsd9bXpgTzj1zeFt5
afBmj/2SlR3mlz3CHcRd0eptZq8G21ncXRW46wim55j2E/UMaSbqIqsZfaJv
KfhYH9n8sie4q07ozDmnz9wlR73ppO466dqt/mCfLGsW2U/sP+pm/5dIV710
s26sH+d0SvOSVz8mJJd2JvMNNrPqMfbaI+1S7tSMZnkAdtuc1ZIzmlSM1MV9
UKp89auOw/K9UrVf0P5NQkexdiB3If3coxgT4jw3K+fMfbMz3YvAv73ttx5n
cnzPc6u+C1XKH2s8Kl31K3Qn5He1t/45G8xf9hnr36UaDkpvueLjN4mx7fS2
p7ivFoPFmZW9AfXviGIuUw2Y11rlIy4//tc1rhga9S3jN43zSfkxZ985xlUU
s2/Yv28Z7P4FNWXShA==
           "]], 
          PolygonBox[CompressedData["
1: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
tVf1fyb/d/ofx7iu2Q==
           "]], 
          PolygonBox[CompressedData["
1:eJwtkT8ohVEYxo/7nRMpRWGymCy3DMRA92ZiMtz8mQhXKHIXlyKDcG+MysBN
sV2DUCyGa6GsmFw2k8nEpvye3m/4dZ7veZ/znvd8p30ml1lOOOfaIMBf5Fya
9QSz6p17h1fowFvDGyE0Ct+ReRt4z9RfII+3AlvoS2qr6Hmyc8H6qW+ZtYf6
NPoT/YP+hXuyFUji1VA7w2sN1kf9mtEtMAkTwc7V+Qesh3Funf17sA959hzh
TaHHYByuyV0J9BO1O9Z6vrfRC+Rr0XUwhD8IqchqOWrn+I/oC7wbuIUmvEbY
jM9qQBfQu95m0Uy6w7By6AyzLsIS9Aa7p+7bB/2wo1ngSzlqnh6n3mbVzF3U
uqFIvQCl+J/qzUrkjr3NpzmT5GapZxP2bvpXerMHIOY68cq6F1Tx3iKbT3NW
8NLsTwXLKT/A+uHtPJ2bVX/4B4seRFM=
           "]]}]}, {
        EdgeForm[], 
        GrayLevel[1], 
        GraphicsGroupBox[{
          PolygonBox[CompressedData["
1:eJxFlFuIUGUUhf//nGM6jUleJsRR0zAxJSVGfSgEbbBGHUXU1KwstTAKZxTs
MmJipiREKhE+OKOCD17qQVIhLQUloQfroTJQmCAVlBmohhRTNO1brA09bNY6
//kve699Gbm8dV5LkVL6HCux1/joC/7Gx/2c0jr4THAE69/BP4Jn+Hr4bPhW
7Cz8M/AgVgu/jK2HnwQ3g7+AvbGfsTf53g+uBtvBA8nfb1cpfQA+wbtr4Fvg
E+EPs28q/CewN9YAPwfewdbCG7P9k59zwSmcXQXvxsd/wAHYN6z/Hj4cgK8A
W5L3NcY9z4J3sffgz4NjwWHYcGwSNka+YZMD9X8J+z4FXwRvlV7byLs9pc9J
2HPhcwn24Xsb/OXQYFeyBtez/XkK3A52xPqR0EYa9efsV2Are9Zk/2sD6xQ/
/DzYiz2b4S/Ab2KrpaFyUvit5dnvt8fbyrFy3Vz4n9ZWZr/XHn6MKa3tY2Br
5Xib4Isr6zYYPqN0vpS3htK18RZ8bGk9l8Enlc6v8rwpu5aGFD6ve4aDX/A9
S1qxZ1Hpt96B3ygcy3R4S7YO/VhbhQ2CX5Vv8Dr4Nfho9i2BX2StD7xJGsKX
Fq7PTvachi9UffD/UuH94+Ffw+fBayrrcDTy0BT+yC9pIx23Rz8oFsXUEWs7
sAl8v647wRpsIvwH8N3K/2dyz4bKZ5aVzqviUnyHC/ss3xWzYr/N2nFsPvxB
1sZx5n3lFH6C9QXw2srxKK6zrG1izzH4h6W1UIyKdQffp+Qr+Ei25r+C+1Sj
0g2rz9bhAjgnO3cFZ5+M/rkKdkd/dWGPZ98/Cvwx2/+HwAFRn6rT5uza0PyY
AW+D3wO/jLwr/2tDB9X71Oi9yTE71L+7+b8gu85V789Fz6p3m7I1+Vc1H3ND
8+P70L/KnkeaS/Wc3Vd6du2srJG0+rjye9OSzw+LXlfPH+HsQPBPbGh2Li6C
j2Zr3gluydZ2KPe/Ev1cA/8k6kRz9Jnod/X9t9lv3I4Zo3jl69PZ8+nv/P/c
0b8p0dfqb80yaaL5urewz3sK51U+bCOWM9n33sf+SPZfcbTFDBmkeR/5Ut5e
ihmhWdUZcQ3J7iv116uF8628H2b9SvIMOQT/K7kfj8J7kvcfg9+L2OTLpeQe
PBgaqJbUJ13RL+qbwVF7qsGF2bPlAd5dl92PdfALybWqmtV8lz/d0W+65xr4
RuXZpRl2K3IpvauoB/Xlf9vSx2Y=
           "]], 
          PolygonBox[CompressedData["
1:eJwtl3nQVmMYxs953/MaLaQVIx9Zqk+ZsSYKJWuhURpbKCKijWmxlDSqEWUr
EVJDKWSUolAZe0lpU9pslWhTKknF79d9/rjn3NdzP2d9rut67lPntu5tuhWS
JPmHyIjXS0lSxsDjaZKMLyZJC+J68uuI88i3ErPI9zJ3MSf8BH4fvB38BXgA
+D3yN4iu5O2JW6nfQrQhb0k8Te0xogfzR3K/KtzvPuqDqD3D2FHgR8D1qI0E
Hw1+FNwA/DdzPiNPiBXUnmUsod4KfCj5NuqzyXcw3InxcYwdy3EwY2OpTQKf
DH4OPAU8lGtUA/cCl1GbTNQFjwBPpz4FXA88EjwTPAC8hfxs4j/GXwHX4tgP
PIL6VHB98PPgD31X8B7yZkSBfB9jX5OXiFXcexBjf5I3JjJqg8Hbyc91Dngd
8QH5X7zPXObvB88Fp8QQ7jMc/DG1acRA8s+J0dS+Bb/J/LFc70jm9WdsFLWP
iFHkc6mPoz6GWnPyRsRz5AXGFlA/xPng0Zx/BMf7wUM5dyB4K3kjnwH8mN+c
/Byi6NoQL5LP53qTuNYkzm2ZxD1eJZ9D/QXq34DHUx9GVGe8D2N1uNZDabyL
7/Qw+ROM7eJ4AbGfuTOI1dTWEB+Rd2Z8NPkE4i7yr7j+SxwXgt/xe5H3Je9D
XEq+lHudyPFH70d9IbgO+RqiNngquDr5Yr8B+ADHB5K4xuU5x+RaG6JiKdbE
tdlFfEtekAs+O3Elc2aDj+b4PVGF+jxwGflK4sgsNKN2XGPX+jCu2ZH8DqJq
KTSm1uS03N5KXp0o8xv5jFxvUK6na9P4pn5b18C1qED9KfBw4ibGeoP/TULD
atk1dq3lpNzUB44lyolPc47JNTWn9ioWQr9e8+acw3JZTsrN/xivT5xFfJWG
BtWiHqFXuCauzctyAHwx9VXg18ALwMOpz8rXX26XU5+XBGflrpyVu3JILn0M
Xgd+C7xE7YM3uPZ+Y/DVnP8beDJ4mV5EvchYa3AFvu9Y8Em+k5oGryWv67MS
5dTap/Ht5FglarMYW0/+tlzieqdz7KbXEL+Tv0r9RL85+Vlcb0gWfNYT9UY1
qTYX+MzkZzD3uyQ4K3fbpbGWfmO/ddU0tKOGqpEP5pzDGO9KfkwpNKbW1Lza
HwWuQ/1JcEPqE4njwEPBk6jXBN9Jfg9Ri3w681fq++BFagd8gr4CPo16Rb8L
9Wa+f75mrt0i8FTmbiPqgX8mTs/iHM/1G/gt9EC9UA/VS1eDK3FuZaJDITxV
b9Vz9V6f0Wd1D3Iv0nP0HvcI9wo9Vq/tTQwrxh7lXjVAHyiGZ+vderxer8fr
9cOIN8k3EDW4d02ieyE8Vq/Vg/XiFWqbWluiNvkPaeTXqovco/VqPU/v28Gx
axIcaJJ7rF5bK98b1hdDr96zayH2OPe6e30H+UwMSWOPcq86ieibhmfr3b/x
DY8HryX6lILDclmOy3U5JtfksFw+phDaUUODGG8KXkY+Ro8uBcfl+jN6uN87
jbVwTX4mOjN/ZxKaUTuNiaVJaFAt6vF6vXuAe0Ezxr7X28FNwDeCNyWhabVd
sxDcVwN6+2XgtUlwXu6rAbUwjlozvZWxH90bwC3ANcBTc/08mIbn6/1TyK+i
fjP1zeB3wS3BzcHLwWPBF4LvBe8GzwBfXYo9y73LPdy93D3cvXwz0a8Ue5B7
kWvgWmynfgb5H8RFWXBO7tkz2DtUZk6HNDxb79Yzy3MPPJCExtSamlW7erre
rgbVYqUsuCXHZjBnWhrclC/bkuC03LYnsjeqmMVcOfqBawUup/6rOiXfQdQn
/4U4k7wK51+odxOts+ip7K3sqeyt3MPcy9oSlcjfS+PecnaLz8H5zRn7xznO
Bzcl3+n31kuJVrk/udfvBp9CbZ38yqLns/ezh7SXXJSGl+hpelsvxrrIQXuu
Uuzx7vX2TPZOnanfnkYPaS9pD2oveo3+RD4/jb1Gj9KrejJ2N8dORBfyfVz3
TPJNxINcb2kaz+oz18o9Uq/U8/Q+9wT3hgzcIYue0N7QHsVe5W+iAXi9espi
Dy7L98w96oZ5pzG2kTiPesb5l5Dbo9qrPsJxH3AOY+3Atd0DyfcSN9lPu2bk
S/SIUmhUrdpT2lt2yaK3sMc4uxgcl+tqUC16Da/lmrl2akptqQm1oQfoBWpa
bashtaSG1FKPNHopNdcz17Ta1kP0EjWm1tS4WpcTckOOybXLqE9IQ8NqWc/S
u07wHln0PPY+9kT2RnJUrsphuSyH5bIckksDmHNK3u/8WYxv5rfbD16ShUfo
FXqK3rKasUPB3xF3UVvH2O1JePT51G5g7JM01sC1cA1dy4ZyLgtP1pu75NyU
k3Lz7pxbckpuyUm5udg9PY0exF7EHsRexB7BXsGext7GPfbgXluM3mQj+DNw
R/fTfL/vDb6P+61Kw/P1fvdk92Z7XntfPUqvktNyW47JNXsWexc9Sq+Sg3JR
z9P7dube3hY8Mw1P1BvVsFrW4/Q6/9n8d/OZ+mfhGXqHmlf7/iyW5f7g3mbP
bO9sT2tvq+bVvhpRK52437w01sS18R/Dfw3XdE8x9mT3ZnsWexf/Ce1/7Gmv
KIYG1EINPY3abVn04vbkDYvBAbnwpR7B3Gf9hyH/grilFD2cvZw9v72/nJAb
hxMT7Q3T6N3kyKlp9PD28nJErtjT2NvoqXprZ8YWpqFRtdoxi38Ln6lBMZ7B
Z/EZfBb/MQ7+a6Txr+E7+C7LiW6l+Cfw38B/Dv89fCafzXt4r/8BGNH+eA==

           "]], 
          PolygonBox[CompressedData["
1:eJwt0l9oj1Ecx/HzPM9vRvuRlAhZlv/WUlsppSSaYmKrYRfb8ufCxf6koRbJ
hVGjuHGhhBuEEkW5UGo/Ny6URWg3YkkoFLF2wet0dvHp+X7e5/P9Ps85z1my
r6+1Nw8hrKQqWsdUe76nG1kIzeBYEcJD9QeshjplHtE87DVtw+7wa2RP8QvU
I9hVfYPYV6yJ+rFf1irUrq7FxuiwzELqUc+ydt/aSb0X1Y3qavw5HZB5UArh
JXYlS98Zv3c3zVH/ocd4m1yT/tN8e8xZP6RvGo3yM2mrtXv4JayiPoudoev6
jmDnsQ6+m8rmrcJPYDv4Ql+XzAh9jnOy9P74HbnsRn4TDWB7ZL7gPer12E8a
kmnAO7Bl/Ar6ztfgbeq9WXp/XymdYTzLYazWnFsyM/BWbH6W/kH8F2vldql3
0qC1gzLnps6vgk16HuUn8vQfNmC/adi8btkS3swfs7barJt5OqMy9oJymcVF
2tMkv4VKVelc4/m28MetNcp8w+r4pVna43K+S2au+kdIdyneqV79b+J9ydJ9
eCrzV7ae/0T7sXHsmuwQv0j9BLvAv5ULWdpb3GO8K53mPYv/Z4rF/W+nsvoj
3cZH9dYV6Yz+8Zvj3CLdt3jvBvjZei6b9Qq7y7/Dp1ML/h/t/VwL
           "]]}]}}, {{}, 
       TagBox[
        TooltipBox[{
          Directive[
           GrayLevel[0], 
           Opacity[0.5], 
           CapForm["Butt"]], 
          
          LineBox[{589, 980, 1213, 979, 1212, 978, 588, 989, 608, 988, 606, 
           987, 607, 999, 623, 998, 621, 997, 622, 1008, 640, 1016, 659, 670, 
           671, 681, 1027, 682, 683, 694, 1033, 695, 1034, 696, 1035, 697}], 
          
          LineBox[{812, 1122, 811, 1121, 810, 1120, 1289, 1119, 809, 1131, 
           821, 1130, 819, 1129, 820, 1137, 841, 1136, 842, 1142, 865, 1150, 
           877, 896, 1159, 897, 898, 910, 1166, 911, 912, 928, 1441, 929, 
           1174, 930}], 
          
          LineBox[{568, 1335, 572, 1339, 576, 1343, 577, 1344, 1195, 1194, 
           964, 1193, 963, 1189, 959, 1185, 955, 553, 568}], 
          
          LineBox[{1347, 583, 562, 967, 1198, 971, 1202, 567, 1351, 587, 
           1347}], 
          
          LineBox[{1354, 602, 580, 974, 1205, 977, 1208, 1211, 1357, 605, 
           1354}], 
          
          LineBox[{615, 1358, 620, 1363, 599, 1219, 986, 1214, 981, 590, 
           615}], 
          
          LineBox[{1365, 1235, 1375, 658, 1374, 652, 630, 1006, 1234, 1007, 
           612, 992, 1221, 996, 1225, 1229, 1369, 639, 1365}], 
          LineBox[CompressedData["
1:eJwl0bsrhWEcwPHHcejkksitSDGIRSSUspCSRTFQTCKSiEIpueRSLIiUf4BN
+QNkMFksBiIhpaREciniI8O3z+/3vO/z1ukUdg+3DsWFEGbVkxDCZTSEfu5G
QujjtX2QtxziofMM8xFH7ffmCT6yWOfOb1RmflKFXlSpV1XpTdV6V40+dOdO
HR+46HsJ8SEsMMp5xnOOcZzhj/em+MVJvrLR/U+u2L/Nq4yow5zrXoGi9nXF
lKRkDXve5Fm7xswpzlKVrixla9F5Hqe9s81lbnKB43/3tGEf4YD61KVWNahW
5er1nRIWKV+d9ky2MY0tTGIzn/2Wet6zllcs5SkLecJ8HjOHB0zjPhO5xxh3
GOEWv3z7wvzNJfs7z+xrkf///xdDCj7u
           "]], 
          
          LineBox[{1437, 916, 909, 1162, 1310, 1165, 1313, 1316, 1440, 919, 
           1437}], 
          
          LineBox[{1444, 933, 922, 1169, 1319, 1173, 1323, 927, 1448, 937, 
           1444}], 
          
          LineBox[{945, 1449, 949, 1453, 953, 1457, 954, 1458, 1334, 1333, 
           1184, 1332, 1183, 1328, 1179, 1324, 1175, 938, 945}]}, "0.001`"], 
        Annotation[#, 0.001, "Tooltip"]& ], 
       TagBox[
        TooltipBox[{
          Directive[
           GrayLevel[0], 
           Opacity[0.5], 
           CapForm["Butt"]], 
          
          LineBox[{609, 990, 610, 1001, 624, 1000, 625, 1010, 641, 1009, 642, 
           1017, 660, 672, 1022, 673, 674, 684}], 
          
          LineBox[{822, 1132, 823, 1140, 845, 1139, 843, 1138, 844, 1143, 866,
            878, 879, 899, 900, 913}], 
          
          LineBox[{1338, 571, 556, 958, 1188, 962, 1192, 559, 1342, 575, 
           1338}], 
          
          LineBox[{1346, 582, 561, 966, 1197, 970, 1201, 566, 1350, 586, 
           1346}], 
          
          LineBox[{1353, 601, 579, 973, 1204, 976, 1207, 1210, 1356, 604, 
           1353}], 
          LineBox[{1362, 619, 594, 985, 1218, 598, 1362}], 
          
          LineBox[{631, 1364, 638, 1368, 1228, 1224, 995, 1220, 991, 611, 
           631}], 
          LineBox[{1373, 651, 629, 1005, 1233, 635, 1373}], 
          LineBox[{1379, 667, 646, 1014, 1239, 656, 1379}], 
          LineBox[CompressedData["
1:eJwl0b8rhHEcwPHv85zrslxEDJdyg1hEslxJuZQsyg0Ui6TrLvlVUop02SyS
slmNyh8gg8lisUgJqSsp0aXUSV4yvHt9vt/n+/yoJzu/UliOQghlFZMhPDSE
sMgnLvEiDqHZfMk166p5g6/s0q39R/Wa39SvDw2opkF96tmZIb5w1/1xIoQK
A3f4Y3+LdW6yxlHnv7hn/W3eZ6Rpc7v7OpSwPlBKpb/32hvWmKY0p5K2XWty
plUV87q9Q/MqyypqVpPKK6c+LTjbzawymrFuYYFpTrCR43z3rSOsMsd79vCG
nbxmhlds4znTPGOSp0zxhBGPWPfsO/Nx/P9/fgHwHTKv
           "]], 
          LineBox[{1433, 905, 890, 1157, 1306, 894, 1433}], 
          
          LineBox[{1436, 915, 908, 1161, 1309, 1164, 1312, 1315, 1439, 918, 
           1436}], 
          
          LineBox[{1443, 932, 921, 1168, 1318, 1172, 1322, 926, 1447, 936, 
           1443}], 
          
          LineBox[{1452, 948, 941, 1178, 1327, 1182, 1331, 944, 1456, 952, 
           1452}]}, "0.0008`"], Annotation[#, 0.0008, "Tooltip"]& ], 
       TagBox[
        TooltipBox[{
          Directive[
           GrayLevel[0], 
           Opacity[0.5], 
           CapForm["Butt"]], 
          
          LineBox[{1337, 570, 555, 957, 1187, 961, 1191, 558, 1341, 574, 
           1337}], 
          
          LineBox[{581, 1345, 585, 1349, 565, 1200, 969, 1196, 965, 560, 
           581}], 
          
          LineBox[{600, 1352, 603, 1355, 1209, 1206, 975, 1203, 972, 578, 
           600}], 
          LineBox[{1361, 618, 593, 984, 1217, 597, 1361}], 
          LineBox[{1367, 637, 614, 994, 1223, 1227, 1367}], 
          LineBox[{1372, 650, 628, 1004, 1232, 634, 1372}], 
          LineBox[{1378, 666, 645, 1013, 1238, 655, 1378}], 
          
          LineBox[{1381, 1246, 1386, 692, 677, 1024, 661, 1018, 1241, 668, 
           1381}], 
          LineBox[CompressedData["
1:eJwl0MFHg3EYwPGn9ZYuI7EO7+Utpi4p3cZEiewS29hYJEq6VZcxRfcu+0+i
S7dOnbp02aVLjBiJKbtEGX3Y4evz/J7f6/V6l48v6udTEbGvh1zEnZIk4p55
PrLAZ6Z8YcYeV/nGEgfc5hcrnJv2TuZZ4wJbTLmkFZ04r7OkHVV1oFNduTti
Q3va0qbO7GdnIormTIfOi2wy7Lv6M9/yx7fsmkfsOP/ymmPe8INl9+/85oaG
WlPf7lVF86fanh/wkk/288nkf/0DusclFw==
           "]], 
          LineBox[{876, 1148, 1295, 1299, 1152, 883, 876}], 
          LineBox[{1432, 904, 889, 1156, 1305, 893, 1432}], 
          
          LineBox[{914, 1435, 917, 1438, 1314, 1311, 1163, 1308, 1160, 907, 
           914}], 
          
          LineBox[{931, 1442, 935, 1446, 925, 1321, 1171, 1317, 1167, 920, 
           931}], 
          
          LineBox[{1451, 947, 940, 1177, 1326, 1181, 1330, 943, 1455, 951, 
           1451}]}, "0.0006`"], Annotation[#, 0.0006, "Tooltip"]& ], 
       TagBox[
        TooltipBox[{
          Directive[
           GrayLevel[0], 
           Opacity[0.5], 
           CapForm["Butt"]], 
          
          LineBox[{569, 1336, 573, 1340, 557, 1190, 960, 1186, 956, 554, 
           569}], 
          LineBox[{584, 1348, 564, 1199, 968, 563, 584}], 
          LineBox[{1360, 617, 592, 983, 1216, 596, 1360}], 
          LineBox[{636, 1366, 1226, 1222, 993, 613, 636}], 
          LineBox[{1371, 649, 627, 1003, 1231, 633, 1371}], 
          LineBox[{1377, 665, 644, 1012, 1237, 654, 1377}], 
          LineBox[{1245, 675, 1023, 676, 691, 1385, 1245}], 
          LineBox[{705, 698, 1036, 699, 1044, 711, 1049, 716, 1054, 721, 731, 
           1067, 726, 1059, 1257, 1396, 1252, 1391, 705}], 
          
          LineBox[{748, 758, 1416, 1274, 1421, 1279, 1109, 789, 1116, 793, 
           785, 1104, 780, 1100, 775, 1095, 750, 1087, 748}], 
          LineBox[{1118, 805, 813, 1126, 1285, 803, 1118}], 
          LineBox[{832, 1134, 828, 837, 852, 862, 1145, 868, 857, 847, 832}], 
          LineBox[{1147, 875, 882, 1151, 1298, 1294, 1147}], 
          LineBox[{1431, 903, 888, 1155, 1304, 892, 1431}], 
          LineBox[{934, 1445, 924, 1320, 1170, 923, 934}], 
          
          LineBox[{946, 1450, 950, 1454, 942, 1329, 1180, 1325, 1176, 939, 
           946}]}, "0.0004`"], Annotation[#, 0.0004, "Tooltip"]& ], 
       TagBox[
        TooltipBox[{
          Directive[
           GrayLevel[0], 
           Opacity[0.5], 
           CapForm["Butt"]], 
          LineBox[{616, 1359, 595, 1215, 982, 591, 616}], 
          LineBox[{648, 1370, 632, 1230, 1002, 626, 648}], 
          LineBox[{664, 1376, 653, 1236, 1011, 643, 664}], 
          
          LineBox[{1251, 709, 1043, 710, 1048, 715, 1053, 720, 730, 1066, 725,
            1058, 1256, 1395, 1251}], 
          
          LineBox[{757, 747, 1086, 749, 1094, 774, 1099, 779, 784, 1108, 1278,
            1420, 1273, 1415, 757}], 
          LineBox[{1133, 831, 846, 856, 867, 1144, 861, 851, 836, 827, 1133}], 
          LineBox[{902, 1430, 891, 1303, 1154, 887, 902}]}, "0.0002`"], 
        Annotation[#, 0.0002, "Tooltip"]& ], {}, {}}}], {
    DisplayFunction -> Identity, AspectRatio -> 1, 
     AxesOrigin -> {Automatic, Automatic}, DisplayFunction :> Identity, Frame -> 
     True, FrameLabel -> {None, None}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "GridLinesInFront" -> True}, 
     PlotRange -> {{0, 20.}, {0, 6.283185307179586}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
       FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           GraphicsBox[{
             RasterBox[
             SparseArray[
              Automatic, {6, 1}, 0., {
               1, {{0, 0, 1, 2, 3, 4, 5}, {{1}, {1}, {1}, {1}, {1}}}, {1., 1.,
                 1., 1., 1.}}], {{
                Rational[-15, 2], -180}, {
                Rational[15, 2], 180}}], {Antialiasing -> False, 
              AbsoluteThickness[0.1], 
              Directive[
               Opacity[0.3], 
               GrayLevel[0]], 
              LineBox[
               NCache[{{
                  Rational[15, 2], -180}, {
                  Rational[-15, 2], -180}, {
                  Rational[-15, 2], 180}, {
                  Rational[15, 2], 180}, {
                  Rational[15, 2], -180}}, {{
                 7.5, -180}, {-7.5, -180}, {-7.5, 180}, {7.5, 180}, {
                 7.5, -180}}]]}, {
              CapForm[None], {{
                Directive[
                 GrayLevel[0], 
                 Opacity[0.5], 
                 CapForm["Butt"]], 
                CapForm["Butt"], 
                LineBox[
                 NCache[{{
                    Rational[-15, 2], -120.00000000000003`}, {
                    Rational[
                    15, 2], -120.00000000000003`}}, {{-7.5, \
-120.00000000000003`}, {7.5, -120.00000000000003`}}]]}, {
                Directive[
                 GrayLevel[0], 
                 Opacity[0.5], 
                 CapForm["Butt"]], 
                CapForm["Butt"], 
                LineBox[
                 NCache[{{
                    Rational[-15, 2], -60.00000000000003}, {
                    Rational[
                    15, 2], -60.00000000000003}}, {{-7.5, \
-60.00000000000003}, {7.5, -60.00000000000003}}]]}, {
                Directive[
                 GrayLevel[0], 
                 Opacity[0.5], 
                 CapForm["Butt"]], 
                CapForm["Butt"], 
                LineBox[
                 NCache[{{
                    Rational[-15, 2], -2.842170943040401*^-14}, {
                    Rational[
                    15, 2], -2.842170943040401*^-14}}, {{-7.5, \
-2.842170943040401*^-14}, {7.5, -2.842170943040401*^-14}}]]}, {
                Directive[
                 GrayLevel[0], 
                 Opacity[0.5], 
                 CapForm["Butt"]], 
                CapForm["Butt"], 
                LineBox[
                 NCache[{{
                    Rational[-15, 2], 60.}, {
                    Rational[15, 2], 60.}}, {{-7.5, 60.}, {7.5, 60.}}]]}, {
                Directive[
                 GrayLevel[0], 
                 Opacity[0.5], 
                 CapForm["Butt"]], 
                CapForm["Butt"], 
                LineBox[
                 NCache[{{
                    Rational[-15, 2], 119.99999999999994`}, {
                    Rational[15, 2], 119.99999999999994`}}, {{-7.5, 
                  119.99999999999994`}, {7.5, 119.99999999999994`}}]]}}}, 
             StyleBox[{Antialiasing -> False, 
               StyleBox[
                
                LineBox[{{7.500000000000001, -180.00000000000003`}, {
                 7.500000000000001, 180.}}], 
                Directive[
                 AbsoluteThickness[0.2], 
                 Opacity[0.3], 
                 GrayLevel[0]], StripOnInput -> False], 
               StyleBox[
                StyleBox[{{
                   StyleBox[
                    LineBox[{{{7.500000000000001, -120.00000000000001`}, 
                    
                    Offset[{4., 0}, {
                    7.500000000000001, -120.00000000000001`}]}, {{
                    7.500000000000001, -60.000000000000036`}, 
                    
                    Offset[{4., 0}, {
                    7.500000000000001, -60.000000000000036`}]}, {{
                    7.500000000000001, -2.530105026590817*^-14}, 
                    
                    Offset[{4., 0}, {
                    7.500000000000001, -2.530105026590817*^-14}]}, {{
                    7.500000000000001, 59.999999999999986`}, 
                    
                    Offset[{4., 0}, {7.500000000000001, 
                    59.999999999999986`}]}, {{7.500000000000001, 
                    119.99999999999994`}, 
                    
                    Offset[{4., 0}, {7.500000000000001, 
                    119.99999999999994`}]}}], 
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]], StripOnInput -> False]}, 
                  StyleBox[
                   StyleBox[{{
                    StyleBox[{
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox[
                    "\"0.0002\"", 0.0002, AutoDelete -> True], NumberForm[#, {
                    DirectedInfinity[1], 4}]& ], TraditionalForm], 
                    
                    Offset[{7., 0.}, {
                    7.500000000000001, -120.00000000000001`}], {-1, 0.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox[
                    "\"0.0004\"", 0.0004, AutoDelete -> True], NumberForm[#, {
                    DirectedInfinity[1], 4}]& ], TraditionalForm], 
                    
                    Offset[{7., 0.}, {
                    7.500000000000001, -60.000000000000036`}], {-1, 0.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox[
                    "\"0.0006\"", 0.0006, AutoDelete -> True], NumberForm[#, {
                    DirectedInfinity[1], 4}]& ], TraditionalForm], 
                    
                    Offset[{7., 0.}, {
                    7.500000000000001, -2.530105026590817*^-14}], {-1, 0.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox[
                    "\"0.0008\"", 0.0008, AutoDelete -> True], NumberForm[#, {
                    DirectedInfinity[1], 4}]& ], TraditionalForm], 
                    
                    Offset[{7., 0.}, {7.500000000000001, 
                    59.999999999999986`}], {-1, 0.}, Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox[
                    "\"0.0010\"", 0.001, AutoDelete -> True], NumberForm[#, {
                    DirectedInfinity[1], 4}]& ], TraditionalForm], 
                    
                    Offset[{7., 0.}, {7.500000000000001, 
                    119.99999999999994`}], {-1, 0.}, Automatic, {1, 0}]}, 
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]], {
                    Directive[
                    Opacity[1]]}, StripOnInput -> False]}, {}}, {
                    Directive[
                    Opacity[1]]}, StripOnInput -> False], "GraphicsLabel", 
                   StripOnInput -> False]}, "GraphicsTicks", StripOnInput -> 
                 False], {
                 Directive[
                  AbsoluteThickness[0.2], 
                  GrayLevel[0.4]]}, StripOnInput -> False]}, "GraphicsAxes", 
              StripOnInput -> False]}, PlotRangePadding -> Scaled[0.02], 
            PlotRange -> All, Frame -> True, 
            FrameTicks -> {{False, False}, {True, False}}, FrameStyle -> 
            Opacity[0], FrameTicksStyle -> Opacity[0], 
            ImageSize -> {Automatic, 360}, BaseStyle -> {}], Alignment -> 
           Left, AppearanceElements -> None, ImageMargins -> {{5, 5}, {5, 5}},
            ImageSizeAction -> "ResizeToFit"], LineIndent -> 0, StripOnInput -> 
          False], {FontFamily -> "Arial"}, Background -> Automatic, 
         StripOnInput -> False], TraditionalForm]}, "BarLegend", 
      DisplayFunction -> (#& ), 
      InterpretationFunction :> (RowBox[{"BarLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{
                 RowBox[{
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"#1", "\[LessEqual]", 
                    RowBox[{"20", " ", 
                    RowBox[{"Min", "[", "gamma", "]"}]}]}], ",", "Black", ",",
                     "White"}], "]"}], "&"}], ")"}], "[", "#1", "]"}], "&"}], 
               ",", 
               RowBox[{"{", 
                 RowBox[{"0.000057737515`", ",", "0.0011547503`"}], "}"}]}], 
             "}"}], ",", 
           RowBox[{"{", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"0.0002`", ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                 "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{"0.0004`", ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                 "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{"0.0006`", ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                 "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{"0.0008`", ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                 "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{"0.001`", ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                 "}"}]}], "}"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
           RowBox[{"LegendMarkerSize", "\[Rule]", "360"}], ",", 
           RowBox[{"ScalingFunctions", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"Identity", ",", "Identity"}], "}"}]}], ",", 
           RowBox[{"Charting`TickSide", "\[Rule]", "Right"}], ",", 
           RowBox[{"ColorFunctionScaling", "\[Rule]", "True"}]}], "]"}]& )], 
     TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.784396639539421*^9, 3.784396698627387*^9}, {
   3.7843967438160973`*^9, 3.784396792361294*^9}, 3.784396934278384*^9, {
   3.784397160584504*^9, 3.7843971641659255`*^9}, {3.7843974111409464`*^9, 
   3.78439754724792*^9}, {3.7843976964249687`*^9, 3.7843977074354887`*^9}},
 CellLabel->"Out[56]=",ExpressionUUID->"16df60a1-6ce6-4d1d-8df8-ce073de4fa91"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Min", "[", "gamma", "]"}]], "Input",
 CellChangeTimes->{{3.7843974338522053`*^9, 3.784397436044342*^9}},
 CellLabel->"In[43]:=",ExpressionUUID->"ec982a80-73ad-4007-85f3-3150686ae9bd"],

Cell[BoxData["0.000057737515`"], "Output",
 CellChangeTimes->{3.784397436464246*^9},
 CellLabel->"Out[43]=",ExpressionUUID->"8389f67c-1544-4ff2-aed4-b148b6ab742a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"5", 
  RowBox[{"Min", "[", "gamma", "]"}]}]], "Input",
 CellLabel->"In[50]:=",ExpressionUUID->"a186ea0a-0426-4d7a-bb5d-965b4245f776"],

Cell[BoxData["0.000288687575`"], "Output",
 CellChangeTimes->{3.784397510440364*^9},
 CellLabel->"Out[50]=",ExpressionUUID->"3d6e4f6d-a5a7-4e24-bc80-f85918ffc38d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListContourPlot", "[", 
  RowBox[{
   RowBox[{"Transpose", "@", "kp"}], ",", 
   RowBox[{"DataRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", "20"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", 
        RowBox[{"2", "\[Pi]"}]}], "}"}]}], "}"}]}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", 
      RowBox[{"20", 
       RowBox[{"Min", "[", "kp", "]"}]}]}], "}"}]}], ",", 
   RowBox[{"ColorFunction", "\[Rule]", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"#", "\[LessEqual]", 
         RowBox[{"20", 
          RowBox[{"Min", "[", "kp", "]"}]}]}], ",", "Black", ",", "White"}], 
       "]"}], "&"}], ")"}]}]}], 
  RowBox[{"(*", 
   RowBox[{",", 
    RowBox[{"InterpolationOrder", "\[Rule]", "5"}]}], "*)"}], "]"}]], "Input",
 CellChangeTimes->{{3.7843966270907164`*^9, 3.7843966979601727`*^9}, {
   3.784396742340074*^9, 3.784396791700028*^9}, 3.784396932886141*^9, {
   3.7843971567966623`*^9, 3.78439716317959*^9}, {3.7843973837641673`*^9, 
   3.7843975460940437`*^9}, {3.7843976087364793`*^9, 3.78439760905262*^9}, {
   3.7843977130913887`*^9, 3.7843977179783263`*^9}},
 CellLabel->"In[58]:=",ExpressionUUID->"a7e13046-9916-4831-8a2c-57882a183bf3"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[
    GraphicsComplexBox[CompressedData["
1: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
2yNPlm424oNx2skfZQ/wfO9Si2mvSLF4fhK933Xh9JqYtQLw1dBipvEPVe78
ENp+u2a55p9lgnDjxB67ZR1q3PkP7vzRc6vlRBOeP1p6/yN5yEoIpK7FiOYk
a3DnA9B46YPFl6Ru4vmSlNVxO1368XxJxdMP5U6EMGQNZyV8CMfzB8i/tm3i
498n8XzChVvGQMnD8wk0rVqhsbd4PuHFxtDDQgIi3OvVkZ1j6a0jgvsnXUXy
cXsR7vW6xz56Iv6kCOzui95zspIxpb9+quKhXp2M+/sDSqsMDfJwf7/M2nY3
8QT39+MX96T/acL9fd1AQqDnd9zfe98OCyqbwP19bsqP9SIyotzrz75GuMNa
U5S7/R0LFQ5rp5G4+8fb7+cZwO6SM7jf/yrMMLwbgvt93UczBQW9cL9vt/27
9onNuN8vvi6gtWA57vcPFl2x6dPD/X5t9JGKFFnc70/yf/8seJfMPV68/f+5
Gytcv53B/b+sXlHaiDvu/x2FRNV/G+P+/4Vqy6bw6bj/99dyu+L1jcQ9Pg8m
Rq473CVxz6eZ22skv56X5J5vvP34Ccpvk9MWuB93ib3WGSf0P/1pjP72u14U
7vnN2692J2VenuiT5F4PZnqVQYKTFO71wttfPFbxbd01IMW93lB9jK5HVM+h
9yfPLn1OEZQGdH2j+gRt78T9d0ZCR3G9974zvjbqlTSg7xN0f0b7W9z9cKRK
gsb1s2XZpx8PF9K4PhwPlshFedAAfb+h+xvyw+y9mEw/ju/vw48MDJ6k4vt7
WtCTzcpl+P6+zyyqOOYTDdD3N7rfoOMb03kvqXMc3y+trX9/vSFO5x7fAKe3
pGkz6Nzju/aJRug6VTr3fPczel17dCGde347zi7V+mxOx/U2I6QrZSude37z
0deM/A6gA7o/8d6/KFafVZIP4/vfWXLl50fH8P3PuezIwn3H8f1PysPszIsY
OtTMvXst+AkLvK+HL10UMUCU05Zk6WqyQX/nUguVAwPEupwlSQGn2FAX9ngb
yW2AeNcY89Ginw0q6zf/uGMzQDhHDaZm8ulB1pxNvxlnh4hZMWEW0eV6IGV5
p2+V1xCRRd7TJWfMqfemq/hVGA8RCgemD+UnMUBxZcAZMnWIiCfpNf8aY0Dw
8pzooDeDhJoqreK2LROeH/1xefeFQaLdcnnFizwmOOjvGNS0GCRcRaocVEgs
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
gzhvNykiulRWc5QoZ+gJZGThPB46v3yr8oyr2ke558sYw7Ji/8JR7vnglUY+
+8pnjHhlvmzlm7CpebzIzOGx4Y+j3OPNN/n10bulo9zjc3xWx4ryy2PEF+2f
leI3p+bvnC54vu+Tx/k7xTuONLPTo9zjJSGz4uKh/hFiJun8/qwxPN+A+gvh
80yj+W3jXNaecVhxZ/0YMVC+bFP5VZzPQ/1HqF/J9oSGcWLF0LYleR44r4f6
Edlkk24voQki8mEasdZxal4v8mDldINQzIZXtV1JDWOEo9TMtbYnp+b5ftW+
vPvSbZx7fK0n66g390wQXxZovj02e2q+r1xmRHuu0zj3+LRpvupft3KCCOsg
UaZ5Ts33rXqvtCZ16Tj3evo7ECj4yXOCOJFR4/u5Zmp+z2Rh0omrwePc+Zyx
nf1s1/RJYt2r9fc3mUzN3zVeFjHXYU8SGU61tZbf8evId2c6HOmbPklc7Dg8
RtzGeT3ku87599qlvpOE3vB9WmUyzu8h3zN2fg15sIAP3Fx/Gu5/jvN73HzK
x2WxZ2bzQbRu1QlJe5zfQ+e398+0lqL6SeLQYXcT86s4v4fOR5/g4CMpAnxw
fWvPRrUdOG93eljs3eB0nIdr40t1vFSG+caCeEb9cZyPq7jpbe8WgvNxSdTQ
vhm5OA83R7xXSWkFzr+1bD/sN+MCzrtFxFXIZOzAebQuh8JjtwJwfuxJjp6r
vTbOj53PSlDQncBct2TvgdxhjSn5sa6Q6H1yv/mhSok1mLdwan5MaaR1lDHK
D77ORp3irdpT8mJRXWKzo+QFgM/vMb3eRG9K/ktl0rInr4kfpHL0zeNeMqfM
xy3Ze3K/2k2c31pf6Hs7sEoAusu/Mwj/qXku2rFVtDWPBQAmez+v05+a77JJ
WCPFHy8AuwfyVI1kpua9lszKGSi0xHmvqrFLvhVfBSAjxfiPwlyc/+oo1HRq
2Ts1/6UW+3nRvlYBuM00XHSRpTsl75WnpXxDvRnn5b5/Scl65i4ISVf3Olht
Y0zJcwWtSM4qSMV5OEZB9p35soIwd5dOZ04ua8r8ZFzPxxdrjmAfJfEPDCyi
MD/Pfw9if7GP0+ZSAi5HMSdO6P3OHsaclWfZ/mcPnr98lVwU/vHH/+TjzGtv
zfMWAqPZ1wwOmUzNg5U9UXA0r8I+veMMbys7CEGdrXGBvczUvNjMF+8LBKNw
vi7sZZyIOkMIpi16cSqHNDVPtkMpbumnr4KgbDTINmFPzZeZ9iRWWwTjPF5C
o1Hej9U4b6a922nal3pBOOw64V6QoTslfxYd3kCV1BWCndEwfHvl1PxZ+ve1
5MSHOJ93cgOpy5OK82cZQSmrC3YJwZqatpzem8wpebPK2B6D8ydwHs9Y0tpU
5jnO4+2+coF8gYrzZgPLHZyu2OPjUUouIgkWY98OidGdNkWY11w8ffXNJPab
W2UsJpOF+en4OrGFI5jbWA5idmZ4vjmsfu7nsDPY98y4GwfpXZizNzOkU0AY
elPr51WYTM27ZV7VfxNZjY9HlIzkWzstYYip7dD7ypiah2tzPz3mdQUfH9WS
Cxo+ovh1b6kkm72+OC+3buYRz2P1+HhZ3awcurdKGM5Rwp7sXTM1T5f+PY6/
8zjOE+rVsnV3kIVBT6Jxy6x1U/N2ya/nvTh6Hx/vsxFyVwPNcf5thVvhqrAe
ITgVuGehqvLUPN7JXJsrK1VxHq9ZLccmMwXnEa3Heip0nHE+T/y04pLal0Kw
MbrOucJgal4v+Yf6A71JnE+0fLNq3XQ2zuvVPtol1+wuDMdGs1Iy6thT8ogB
qg9Gzp3Gx6fokOAq1yjMhXt91x/Kx76V/4KcVw7me6Yvhha+w/7v5yzbsSUZ
s9lQnsX8OsxvTZQXkwTw+kOzTpRs8El8PJz2nrv34BHmzvsJm0cHMHvwZw4b
aOP1ivVZMU97buDjs1/7WvrgZ8yJOY+O8ini91fotmwT34zXM569cwmoicLH
T+Pyo0Dx55iP28uHrJDA7/8mt//IUTPMq1rrwsoi8XrIadmdKgrX8PFOcy+j
83VjLiyWE+5g4vc/I+8fqNgnAnmJ5zKKF07NS/56HZglUInPF69lc0uFpfHr
XXk1tWIOIvB8+aXpfM+m5ivHztmdEjiHz6fbe7wHrnVi3mkevsViIX6/7Lwr
T/5G4vWaW5vknrvcxOebzt669Uai+PUbpyPe0rdytu8TcbfNZ2p+c9tXxenr
q3GeVGzctbJHE79+i5a372QUXv8JEqKe+PoVn7+f/2pu7rEUgY0hP+Usjabm
PzXNQo3nn8d51P2GodXrRfHrT7RCN+w5gH1rXQ/60ZCI/XWui+nSuoj50vEz
BUduYR/NyoXttZmYPyXUe1SW4fGf/RxRYZEg8j/rSXOH+IswK7WXaebX4/Gy
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
gidqtHZzuPFCWW9NIhteeUqnPA2nw/8Hpe+XrQ==
     "], {{{
        EdgeForm[], 
        GrayLevel[0], 
        GraphicsGroupBox[{
          PolygonBox[CompressedData["
1:eJxNlLlSk2EUhv/8S3pNABu3QgdiYDBq5QyQhYRGnHEMIdFYoA3KELYLsGDz
FojUbveg3oGWjFujtdowFlr4Hs+T8S/e+c63nO39zjnnl3q3VsMgCB4LkTCa
CYJpYUrICQVhTLiQ9f0PPSpl/d0fU9A6LAwJoXBKGBFOZP3uo97ktV7Clr0r
sq8KbWFRKAstYQH/TeG2MMNZEz/j6GfwM8z9Q2EZWyvCI2Eu9vWmYnmhJC8r
pDNJEHyTvC35WOtboSb5ms7fSV6UPCv5teSq5KuSn0melHxacgUfFutPcrso
+58ij+mk5Ebs8cxLrsce1w3jLPacypJ/R86hcfkBHo2z75HzbHxbrjV4KrJW
4K4CZ32p7gp7wr6wIWwKT1i3hE7gudQ4uyt0hacpvV7gubeFe0JDmAucp1Xu
7cw4LGFjVqjj807Kbp23R6Hrfg39vobOMfw3E/e/jo0d/KwFXitl/n+M1eri
c+R1lhM/17Nep3HstTBBfbT4f/uDXeyZj1/ye6A1FzkvXXK1eCfJ7YA4dtHp
kNsa3HTgxTi4InyRrUh+8orlZejnZ5XXIbzaP7wK/e25xPvD4o/4xzw9UaY/
7Gwo8r95kPhZjnc9Ytsm5i6cD2qiCEejcGa9EdArNfKw+Ec4C1P8FuBvhB4u
EpfZaMBTFxsbKW7W4WaWWAZ1sJl6twef84nXwxF91qO2xvFjvtvYs7sCvWM9
tIaNHeLYwkeNP59I9ck4NfFvhsVeD2V6ZtAb+/S5xfE+9PkynZo3M+iYzz51
sUfP9NE/ZJ+P/Ox+4jXUSNVUHW5K1E2D+jN7S4nPgyl8LzPnzP8GPsznCjOn
TV232Ns8Mh/PQ6/1Be7yzBmbNza/rPffhK5Tyfyfu9XBfOEvjfu/zLKCdA==

           "]], 
          PolygonBox[CompressedData["
1:eJwlkbsyREEURU/3vX0/wNwRDhJjRJgiUaVKGcwEM6oUVaRD4lHjJ/gJj9jj
I/AHxB4RMSICAuvUDnbdvfr0PX1291j/aH0QzayGcjSbzFp8l9AthVG4iZ9B
N/AcvGzacw+vFWYHwewQdWiwSf2Y2gn6pr4Cb+O30AM8ktRrGl3DtSQ/hS7h
HfgMf46qmVmX/nv03ker9P9jbQK/gOapfcIVfAM14WfY8FVUhyu59m6gEv/G
GQPTjO/4hs8cdMZkrpl99lP0g7+LugvP4Fl6hWbxzG32P0Zl85496ouFzvKe
3ns3KcsFGvZZqUdqAb3AJZwFrb3CQ4VqnuEJHofLoIwfcD9pNr+jMlNmz+53
8psps2f3f77gq6i79Tfzt/sHVx0vIA==
           "]]}]}, {
        EdgeForm[], 
        GrayLevel[1], 
        GraphicsGroupBox[{
          PolygonBox[CompressedData["
1:eJxNlUtvVlUUhk/3Od+Z0dZSjfECaAuNIqhVa+jHpS1RIAKF3phCgSq0og4U
vCRYmBiNygSpExOjXEX9AUjBH4AwEgUZiIwEKkHjrVR93qy3iYM3e+2111pn
3c99gy/07EhZlh0COTjI5SHOuypZdouzoSbLbgP90EvBMjCjzLJJzvMonEW+
C/pp5Af83gHuR6YWvWt5yMpGvcD9A+6bkB9HdyH0E9B18PdDb4TeYBud4Gfw
L/gH/IVMEzYewfZizrlgHqiCZt/lh/w5he0qci3wbqE3Cm8YjIAl1tPbbu7b
wHawqsiyN+B1ozfG/TNwDHwIjvs+mUdOHkOmEfpzeIN8sxHdXvgzOZ/jfBXs
qgnes2AI3IH8l8hvQf73FHb7oW+H/wX05kr4Jp0esB5sBVt8H/L9QX/jAc4z
2OlFdzm6J1PkvxV6ohK5O4ntmyni7IN3DlyC/hj+iRQ1fRTew5x3g3uy8Fe+
7wSP5xH3K8icTiHXBt1eE7Vodj1E/43sS/j0uvyE904Ke5PwdhSRk83wR4qw
PwjdkEeOWzlz+IvUb0XEphg7y6ireqnOdatzLx1Abw/Ym0Ut692r6qM3s6i5
crfOuVQO1TfKcQP2u9UzRdhQXzwPfkuhr37c+j895WDMvSA9+dnu96rtKo4D
llvn96p7RT3zCzZf5HuvqaZlzMGoY7iaR4yam84i/H4G+noe8TZBf+tZ0vyN
Z9Ez6qfv4U/JZ/jf5TG3tdBvpajpn9jbBz0HuobafZRHD6gX5joPHcgvLyLm
1dDvIz8bmQyZ96BnaQ55byljHi9i413490JPFZHv7Z4x1UB+yo/L7j31oHIg
3pRnWv15FSzKI54hzsO2OasS/d7jebjA2zXtI77/NfSEaoXMnWA+9KcparjH
Oe2zL/JpwLXVe695mvk1lTjPp5Addd+cxv51zl95/8NzqnlVHpXPt1PYkOxu
99+Ya6/d2eXddco+38TOIXQWaMYq4aNkVf9++zXsOdQ8foVsi3tAvXAjj3wp
9yfyyJvm+5Lz0Aj/B/s8s4y5HfLemchjd84rI07F+2OK+dO7Zkwxaa61i1e4
P9cgv60IWxvLyLFi6gDjedTtBj4cc5/MgX7S+3AX9JUUefkpRe73ujZP2aZs
Vz0/mpUu526Bd5nq9E2Kb87324jzpXouNd1nnzaYP+q8aoZr/U/Qjhq2rHSa
PZftntvpXTu9X6Sz1v+hcynk5GO33xZP65exB7S32rxDjzjeAfu0zLS+25bH
f2RnJfqn1z61ege+DP+TFPGqr5vso75x1DM4G/5K79i1Zfi7xD7V+58m3n+G
DNf1
           "]], 
          PolygonBox[CompressedData["
1:eJwtlEdPV0EUxef/3pu3pLsRBAy2WDAiFjQqqKiJAkY0xh1SLIliSRQsiSZu
jEZd2ZbGju0DIMUPYFnZMbGspEYgRgHxd3Lf4uTdM+fOzJ2Zc9/0+kPbmgPn
3C4QgY7QuZ98/4GM2Ll60Jpy7gRoJqERfpL4FDgCf0f+mHLhM9DqQEvK5hxA
b4htruYchkdgFfFssBJtt3fuGvOvg0zWmoW+Fa1ROcRZ5PSh9YPP6DPhE0l9
A/BMcsrIrQFZxH2MpakWsIjcHax/k9wbYJSDziFnL1otyCG+wFguWjHII3c7
OEN8FgyjNcV21tPgKPnlse2lGlVrCTxTe4Mx1R9bbZNgSPXBe52d4SN8PXP2
pOyOKolz0AfQBsEX9OzYzqqxHvgx6mkjfgRKNV81EteCl9S3nLGnxJ2gjPgB
Ywt1FjCN3OPe5j4GS9Hfox8k3gmq0SapIV+54BJaPWNPkvxs8n95q11n6IQP
eYvlkXb4sLd6ldMFd/ACZ2teDuwOdZdXwQjxEm93rRq74ROR7a16L8JvsUZP
ch+j5I5FpumNzqM3eDuvaswht87b2vJQBrww2b9Qd0b+d3DO2Zl1dnlAXtDY
j8A8Iq8UgT/MfxXY3e4HVaxVE9vbywObIrsT3Y089Zvc6sQf8vdG9FLmLEj8
1IneBdY6G5P2HL7a2RvqLSuYvy9lnpQ3q5L+Us9siKwn1BvyQBZxI3OeObuD
KfARb17RG3SH5uHiZL97ga2htbTHXOL0pH/GdR/kfwrNq3pTefVvaHehnloB
3wKaUuZZeXdzbL2psXXw1sQvqkdezEj8rz0+wAdD6w1x9e54aL2vnlHvZEfW
i/on6N+QFltt+qe8JTc3uc/54C7neROYdytAJVq+N//Ibw/RUt7eXh64Ai9i
vfSU/RN6We8OY/PQysFib/8s/buU04/e4u19daZl8Kne9tac28wtga9x9obt
ga2htTTWAS/wVov2bwusRtUqD7wOzNODSX+/CK1H85L+u4/+NTDv6R/0jfg/
CqGpGQ==
           "]]}]}, {
        EdgeForm[], 
        GrayLevel[1], 
        GraphicsGroupBox[{
          PolygonBox[CompressedData["
1:eJw1lVlsT1EQxm/P/d8rTemWCMpDi1ialNTW2rd6QCs0HiRUV0pEW7TlgUZi
TYWm1khE1O5dUG1tEQ+oENSaWB5Q1Vha6wu/yYyHyfnud+bMOXPmm3NTispz
y5zneXsxH3sXYIwX+OjAfoMHhZ7XCP4A7mB+SsTziqI8bw58PdxGbBOWAZeM
pWAH8X8Odwv/LPyr4bLxP8pmw+AT4cvht8HvYnztNM4Xp2eReDXYeV/PI+fK
xndclO7jIorjGJ/h045PPPGPsz4V3Af/ePiz4AJwA/xwcG/wRNYUsnY2/o8t
xxjwdObmg+/i+9TyjYNPkzXgRvhMy28gNsvykvxOM78P24/9xHrB98Ra7Dyj
iZFMrBi4j8QehzXBV8NvxycJ/COi8wNtjwx8muHX4zMhVP4P3IhQ7/kXeDNr
++LzmbV3nJ5f8igBx4Jvwyfidw6cwDgGuwyuEh/mqoiTR7z4iN5vCmMWc5Px
aSZGrqe5T8LafT2f5DEUv2LwEMaZFmcu/E1wL3yLndawFFthGllu3zPwqcS/
gLGTmH/gBocaS2JOAz/w9R57hKqDfabRUtPGf80JJxpcy9qdrF1m9xRj97/A
9pd1bU7P8MopJ3O5NjffvtNDrd0n9h9p+lnHfQw2zYh2cgJdd89pvc94Wv+L
+L+Xe2I+x3QqelnDmh2MJaHuW2Nnl5pJ7bYQ56r1Sxdrr4FfgLsDrYfUZSpr
r8A/g/8Gf9k03xloL0lPHSNOm50hFv/r4Jfg78y/dbrvG8bsQO+hzfRSarXp
tny6nOYqOczDKjjDdsbiULWQa3dVZv1bZHcm9fqF/fb1W+5S6ir1fQL3yNf5
aLg9pk+Ps2wF95N9iZduWq2Ev+R0P+k/0YHEfyga9LXu+fB5TvUmuiuGbwHX
Baot0dhi1o01zS8STfnaO9JDqb7WrQL/E9ZHSeBTdp7+4NPWmwMCNcG1cAXW
m7vhon3V4FKpi9NeGRnofrLvDvB4O1sm42p84sGPI9qTkm8hPvVW3xvglfjE
ge/js8TeilqJE+q7J+/fIdNVJdxuu4e/EX0HRRstvtZSarow0HdW6rVK3m2r
aQW41Wm/S99/dZqL5JRpZ94Af9g0eRuc5qvm1waqLdFYA1xiRPWSwHjEtNca
6H1n2Ntdam9mPvvWWY5RgeYsuR/wNYb8Xwqtf+aZFpvsDR8VaDzhpDdirY5S
T3ln5b096fQNzbS9/wEancwI
           "]], 
          PolygonBox[CompressedData["
1:eJwtlElsT1EUxm//b0ikI4mgNtoSQyJFpOapXaEEsaPoYKixqGEhYoHWrAiR
iGFh2ouhKthYoFKhKBLDAkVptaE1/76cu/jyznnfOefee6askjVzViecc4tB
CCpj56qSnKsGJ/jxDfIw/7eCt8itYAtyDWhD3gv2gF/Y/gYbI+euw9WCkYFz
04hXQqxSMBn+FbZLnMV4jfwULEOeA2bg60Aan3RwAC7AZzS+2WAssVLBO7j3
4Anxv8NnIvcB27FPisw3AxxEz8G+C/knaME+E763tz8Lvx79AvJFMBw+h3gz
OKsY9Ecuxn8RWIm8CtRj/xLbF+A49vPgKrHdAMrg58IfcZYz5W4SfGGSxVTs
tNju/gE8w78jsliKeRt9Ifoh75+K3o7+3J93C31xbLVRjdYSr8zXayeoUL2w
b3LmcxP7n4HlLgUMw7YFvtmffw3ujo8vnxr0BZHVVndIRl9OzPLQcqBcZINO
Zzn9BL8Z+xvIdWAUenNk71ONLqFvioxTT+Sh940s96rZuYTdSXdLBV3wA0Lr
l5mgB/I/kOqsJ/Zj/ymyu+uMK9hPja1W8pmI7V2fT73pKHxpbLnZAVbDnybG
ILgJYBi27aHdRz2xDS4X+yxs+4Ef+P+F/xNaj6vXOwPj8sAYbPf59ykHpYHN
gGahGttdYHJsva/76W0F2I/359fDt6G3ambwrQPTY+sl9dQU7KsimyXlbz78
NXzGIc8G+XC7/bzpDovg08F5Zz3YgW330HKpGdIsrYuMV8/nYnsKnAQN/H8I
HiH/cFaTLO4ygn+D0YfojcT7CJ+cZDlSrh4kbHb1Jr2tApxzdsZQbAux2ejn
o4Dzu/n+0RkP4VNim031UyP6feLNcrYjCiO7g+6iM5sDy6ly20msLvWln1+d
p7fXJSy3qvFwuFyfb+XsKlyF7wfNzDH8e/r3yf4kfK/I3qp/ZxJWE9XmC/+/
RtYzE/x7axNWo0q/3waq/0LrVfVskfZbYO/TPGh3NYa2m7SjyuEbQpPlU4ae
Hlt/a0abVM/Qek07JCO0mqv2ytG9hL1xkL/vdfTiyHaZcpIR2M4t9f2Uj5zs
96Fq8DiwHaNdo5qlIRf5/lPNlmL/JmG7Xztau3pFbLOkHNbAXw7sbXqjavk5
sFlWfO2K/4IRzIQ=
           "]], 
          
          PolygonBox[{{1133, 1132, 1634, 389, 1135}, {643, 24, 675, 1304, 
           1305}, {1519, 1518, 957, 233, 954}, {819, 818, 1397, 186, 821}, {
           1489, 1488, 929, 220, 924}, {917, 217, 958, 1520, 1521}, {1305, 
           1304, 676, 42, 674}, {1396, 169, 786, 818, 819}, {1423, 189, 825, 
           870, 871}, {1273, 1272, 650, 26, 646}, {1631, 374, 1093, 1129, 
           1130}, {611, 13, 653, 1277, 1278}}]}]}, {
        EdgeForm[], 
        GrayLevel[1], 
        GraphicsGroupBox[{
          PolygonBox[CompressedData["
1:eJwtlE9IVFEUxt+8N+9JzViukhYmliRRoJFF00LDRZRGQkQRTE3/bGGYoC1i
yoU4BFaUmxZRi4raBkWoI1Hr/lFQVptK6H8h5kJrEdHv45zF5X7zve+ce+75
zp26Q707j4dBEHSzIta5JAgy7BPpILgP8RY8GwdBO3gMPADOovkMHoW7x+/X
4GFwPesmuAdunKQrwY3gcmSaafAj+B3gFvAu+DK4BN7Mef0pziH3BJoG+Cb4
OTTL4NfAV4BH4PfB3wZ/Ak+Be4gtoTmIpgvuFKvIakBzi703Np30d+AWOV+p
+jkrB17F9wFwNfgn+dZ7besiu7/6cAmcZl0E5+FWoDvAua2cuzS22CFydMMP
wRfgO9GPww/yfYxvm8CrwTf8LMVdBy8BV4OriO0gdrFqSBluZ+XIVcv+J7K+
qD/XQtOoP7W+63dzyupW/SfQNhK7EO4HXAe/j8BPErsxMW2Ks9Z6nf3Su9d9
4Db3Rf7IM3n3OLQeFL3X70PD0+xP/I5taM+S5w24DM55r7Zy5lRocR/YL/uc
VKK56r5XgXvdU3m7gVUAb0nMM3lXQFPvOeWD6pL3utsLNPPscWJzo77Mw92N
bG4/xqZVTCdrD/F9aHaj/R1Zr9SzL2nz5TR1PYOfA4eJzYpmZhR+hN9Z8MO0
9VH9zLKf8fqP8v2k+6t8NWnzswW+LrE6X5I7733eC3fM52eQPetvSm9r0uvX
+/vud1SOC/5OH8SWu9nnoMXvtQ1Nyd+g3qvett54nrpaXaMeaCbUv3eh+SFf
roTmpTwtg5t8NvR/8JW1gNiaxPzU29RczIaGf7Fvj63HT8EZv8t+uH9p69vh
0OKV51tkd9bdUxVBMONzpjc3HFrNf/n+yt9+hrjlPhuakQmftxnynw8tv84p
+lx0uX/y8bn+B9wLefIfPnmRgg==
           "]], 
          PolygonBox[CompressedData["
1:eJwtlF1Mj3EUx5+e5/88UY3G5E5yoU2rZmOTi+jGRZk2M2N6pZSIIpsxmyZl
FaoLyQozbl1FLzM2r1NCtuLGy+YlSauNCnPh8915Lj7befm9nN/5nXOSdh/a
etB1HGcvRKDdc5yL8MR3nKewIXCcoijHKYQkFmwKTJYtA72JNY1QxJ5i2Iic
yzlb4BkHp6CvR86AbvST6D3IvZDL+lrf5D7Yhp7N+Uc4+zBkcn4L/gtQhq8c
ziI3QB5yPsSy/jN7v8AIeiZ6NntzIJH9vdh6YJw93yERfwy++TCGvRDbTfbe
gFh0H/8s8gwMoWf5FrveMEj8qfgT2bsMZvB/8u1uxXAL/Tz6OdiDXAJ5ih9f
C0Sj96G/QR6FOvRJ32TZ+tHvob8N9Ub0y9ABA9gH4TZyN3xFHoMa33KnHK7G
HhXtOKeJrQ7qef8ELMWXAMeIfyq8X3fcZX08ejLySujAX+lbLpSTZPz32R+n
3ECT/ib8L/1hOv7lgeVKORtHn/UsN2tgHb5q1ldBKva0MCfKjf5Uf1vK+SWQ
z9qCwGpItaQcKpe/8P2EU8RWCx/gBHeVKofIxfiKYBd782Ane3d4ViOqldfI
wxCNb15gNaPaUc2qdtMCqwXVxJxnZ+ps1fBm/AXo+fCIOx7DUdbXQCdyF7zD
V8La4/DetRgUi96ktxUH9hf6kwr0fxHLpXLazPqXnuVP96s25/DPQh2+M/AX
+Q/UIze4VtM5YT+uQFbzVsII8ii4sDbKajSD8yrw7YNX2IfDNVorm3yyyVei
d4dIHsA2CN89i00x6q8HXOttvTmH/Ey7Vtv6k4/I11h/VTlX7uGOa/2jfGo2
6EydrZwqt789i1V/oL+Ii1jtqIcXIE+6llv10BRyF+s7YYizXvg2kwrDfo+P
WI6UK+VQuXzu2t2KISucaZptrZzRpljxX4FF2Bb7lnPlXjWn2lPPqfc0EzUb
L2Frj1gNqBYUg2LpCHtVb9bbFaNiTfett9Rj/a7dqbsfYH/oW82r9ss4s1y9
6luvqmevs75ZMxb2s+YAtCG3QpV6K7CeUG9MYZuGBPYv8e1Netv2wGapZmoe
/oVh/ahGVCsxqv/AekS9kgKrPOvZ6nBmanZq5mj2KAbFohgUi2JQLMqJcvPN
s7/Un2pW/mDvhG8zWLP4P5NJ1Z8=
           "]], 
          PolygonBox[CompressedData["
1:eJwt0L8rxHEcx/EP59edy0DOrETRXRYLSplYTa78OBRKuTor091ykW4xMVD8
AQzOrX7siuQP8GOgsCgmj+sMz16vz+v9q++3ezE7tV4fQkigEasNIaxgvimE
fF0Ia3xW4UStLRJCPwYwKyvJvgxHvWMo4kFWoW/q70jbs2HPuD0ZLGCzvnbv
iHbqSaCAimzI7DTSSCGJnFpZbZBvsa8Zd/y37Jbu29PLX9Ck3hRO5U+yexrV
H8On2x/I6+tS26I33tdY4uOykr4O8+04lPXJDuir9wvO7XuWnUVqd6r3KurD
sjIdtWsEk/bkfPcYP8Fn+J7/WrWn+r+q/23O/LHZOH/FX2KPf5Tt0mWzBbNZ
M9vYwYw7repF+uP9iz8X/zRk
           "]]}]}, {
        EdgeForm[], 
        GrayLevel[1], 
        GraphicsGroupBox[{
          PolygonBox[CompressedData["
1:eJw1k01IVVEUhY/n+q6vhzWzQSWmIA0qERzkQCuCoh+c+Ia+HFSGISSSUEIR
JSFNpFEEFUVNgoRK0Zo1CPuR0hCDgmxgpRJWE1MMor7V3g4OZ921195n/93K
I53NJ2MIocBJOBXFIbQWhbAzDWErxDBcZyaENvAouJv7FA5l4Bm0feAc+Dc4
h89n8CM0VR5H8fbxPQLfQ5xeNGvAg/DPwO/AD+Fvecz14F3YuvBt4N7jObxH
25faWyPwl6LFWQbX4FMNvg5XhL4f3AJ3VG9yznC245sl5jz2NnwugAtwH6PZ
v6kOj3MN3I7mIprW1HJSbmfhnySW8wJcPbZyNEtwzRmLo3iHwE3gMfAwtinF
h2sHPwdfAT9NjR8AN7j+JfptXq/qHkIzDr6N/XG03FTr/15rZtHy1rt5+Hv4
zIA/ZCyu4vfC3QC/AZ8HDyQ2o2m43apB/STGbGL92aS5e12LcC+i5aYcx/he
BP8Fv4rmqxjdvhtzqfVF/bmcWB7K5z64xnegC24d+R8gfil33medx7fDe67e
Z9HfQV/O/YVTAr8BTYnzBeL0+BxXUreBv2LPce6iOYzmnMf8g30Hpw4ciq0G
1fIa7YPU+qM+bfGeDFHfj2i7pJ3SrmsHTsMd83r70c55TyqIUenvdmRsv7Wf
LdFs0kxg/xRtJ6e5f3r879F2XX3Yj3az/zt13JM+L/1bg95z5bjRe9gI/8tn
px2/6nuiXT7u/VGfGlf7zL3WfRXjZmK1T6Iv9fzVP/VIvcpx1/rsNMOD/l9N
RctPee7l3be+e9nUZqYZnUD7D6H6h+M=
           "]], 
          PolygonBox[CompressedData["
1:eJwtlMtLVVEUh8+9556rSUZRwxoIRQ+dCVn9AUZKFPYwRQ2fkfnAoNCBgqZZ
aWY6SC1DatIoo1TSIIPSBNNI7DEpKi2jLBK0aNb3Y+3Bx9ln7bX2Xs+dUFCZ
URH2PK8IIvCan0K++yE98Lz3MMf6M9zxPW8h6nljrMehmv9l2BTyvGRIYa8O
+1r4wWGLcBL7W+jehgR036EzyHoIUvmfCNtdujMN3X5kd+Ej609wjDMy4Sh2
mTDr/KuGDPZfsDcJeciPw09oY68GPrA+gU0JtKJzGb5wdkzIfE5EPoPsFRSj
WwLT7E9BmD0fwjGeF4Lz6DRH7A7dNcZ6HJ7hw1Now+YKnMXmDPSydxNWwz6X
nxDrIYjDt1VwDr3r2PTApGJRvsPme6GrRQP69RHzQb7kYdPAWfVQjDwJm0QY
QHcQTkFp2GJSbE2c3QgD6AzCRuxjQ5aDeeSV6KoB3qD7FnIDq5VqFsN+FP0g
ajlRbv5F7W75UIv+d/Rn5Ss8ZH/R+a8a/GJ9Ff12GEX3ic6HHMhClq38Yz+F
7jT0+RaDYtmOfAc0QD0cZu8I9AWmK5t+7Jv4b4Qs9rLhNLIq6OKObrgXmG/y
cRT5H9evij+J/3Iogw50OyE2ar2unp9xNVVtH3POaGA1V+0Vk2LrYu8aPGdv
IjAf5at8km/ySb5dYH0R2gObHc1QEfIHcB/mkM9DCmfvhFTO3guHAut15VS5
zUM3F1qQt0Id1MIBZAd9i0GxKAfKRQ021fAV2QL0sr4Ba7FZByMwHFiPqFdW
0FlWz6n3wtbz6n3NkGapB1k3xGOzBjqx6fBtBjQLmlHNao6r9TdkC4HFqFiV
I+VKNrJVzIpdM6/ZV46V60uK0becKXeKWbGrZ9Q7+ZxdELGZ0eyoBqqFcqLc
5LMucDlRbupdL6nmqr1mYAX5S/VTYDOoWUyHNN9yqtyqh9RLmmnN9hLr3xF7
4/TW6Y3TW6ccK9ea8WT3vuyK2pujt6fM9ZpyqtzqjCU3c5q9Uje7qrlqvxvZ
HtiCL5uhHF8qAnuj9FbpzdPb14puC4ywfhSxmqq2qpFq9Tdib43enGb+N7C3
PrAeUC/oTJ29lTu2uZwr98OuN6oCe6v1Zif6NsOaZd2pu+NcvHrj4ln/BxlJ
2F4=
           "]], 
          PolygonBox[CompressedData["
1:eJwt0U9I02Ecx/HHbY4ZtUt23KholLWDJzVh2ynoD17qUKAEDuwyaEQHCQLZ
JMLLjiJECHbMS3+mkEcRcWR20LsmOG9e7Bj0+rHf4f37fp/P5/v9Ps/vea5V
649fJkIIefTjts8Q1ohj1l/FUjqEB30hZFMh5JDHJH2A/048t/6Lir4yOrQJ
3rZ4T+9zvdf5IxhFFdOY4jV4L+RzyRB29XwUf5mxhxo+0S7SbqCAW7iJOq/N
K8q7+k/w1n5XaK/Fceu7uG+PV/YoyX+qPed3xRw9jyW1Bdq6eMfMIj7z/9B+
i/1q0nFt1HNKy5h3kuzdQ3Qf5fgfr8rb+r9jgX9gxiZv0rolP7NHKpqJI9oh
vsiPeatiFdNo0bdoM/J57Mvb0X/ST7Fhnx/R/Zl3gffeHv/QdIYavYEmvsVv
uJPovUv0Pllcwof4vxfFN9F7y4ft8RCP8CS+t4o5T/Es1Tt3dP4p9SvqM/Kk
ugT24rvtiLPxOyyLl9UO4j8QskUK
           "]]}]}, {
        EdgeForm[], 
        GrayLevel[1], 
        GraphicsGroupBox[{
          PolygonBox[CompressedData["
1:eJwtk0+IjWEUxj/f972vG1nILKZpuhELxihZuJqapkT+RI2xoDv+1BV2d7CY
KQumsVLXinSZ/IvSRPkz7OwMM+XGYrChNAwpkgxKhN/TOYv3nud7znPe97zP
e+6iSl9PNU2SZA8rY3Xxc4/4IibJZxKnwNsDefiH4JPgi3mS1GYlST+aEqsV
/J38JnIVNJPU7XV9ldjmmhnwLzTf4MfBFdYYuAbXwdoCfkztD/YvgHvBr1gD
4I/ED+hnwEX2W+p9Vqm7yXcDfA48ndn+rXDLXKM7XfKerxI7WYfAHcRRcpPa
n9oe7/85Z60gtwvNWvb5h2YVuAC3htUH3kpcHY1XvovaErWj1J4FPwEfg7/P
9xJwO9xwZn0+Az+Idu4I+Br8FPhlsG/xQ3B/3f9ysJw01+EXcvZuzi0Sh1Lz
Sp6Np9aDehlzH+T3o9S8lcfz0G2kdg7xLvxi+Db4ZvqJ8O+ouwDfBN8UrG/1
X4erZ3avBtx5vheA5yvvd78Dt499BzUbxJFoevlRct/WR/NO+Kvmwn2W35+o
r6H/TTzsszGNpgC+Ag7Eo3zn8o2fCZ+HP+w/1+/VnFu99tkZ7I311huo++J+
aq6j79lC7HZNd7Q76+4DaNp9fjRrwfW95N9m5pU82+99apa3BZtVzWy/+/Az
2n9A/4Up8Bmfh9loN/vMT6Q2E5qN42hX+vuuQ3/b31Qex2gzcAPN69z8P5La
7GpmTsDnwd70NPxgtNm4hfapz5j2kHfycEdqOWnK4OFod38Dd8D7r+S2hMvk
69HO1flF77MTbrnPz3vOuRytB/XS4r4dDPa/1Xs14P4DlC6MzA==
           "]], 
          PolygonBox[CompressedData["
1:eJwtlEtoV1cQh2/+//u/EUVF2kWhqeBzoRvJQlfdWKhaXaixGt/iwleiUWtR
AyZg6wMaW1/4FnSnkOAzEVQwkphWjRtbMJHa4qNVqgVr3CjW9vuYu/hg7py5
58yZM/MbtrRu5ppCkiQ1kMKqUpKshGHFJBkOP+O8C8sIWg5Xsa/AjixJdsJh
Yrv57zac5vtH1rpgD/Ze6MG+BzX8Wwt3sLthMfYSuITdBt8Q+y1cx26HJuxd
8Az7KXxF7AYolidJAXbg2wlfk+MGeGos1JJPDYzCNxqqsHeRWxP8VYg7eTdj
jB2K/Ukx7uzdh8AHxH4Ix4l/z57/wlZzFNa3wpf8MxuqWZsDC1lbBJPwfQ6b
iamHFawt9y6sfQ/b8W2DecTMhybsTs7qgEV8T4Op0IC/ET7Dngg97NELKRTh
Fr7bvg85LuXfjTCD+N/TyN07HCJuFlRBNf658BsxD+AU/56GR9gPoRm7Bd4S
+wa2ENsAvxZib8+YSdwN84UfiN0NN7F/gn3Y+4uRs7lPx54BV7Ave2fs7fCS
vevKkmQtTE/jTt7Nmlm7g5x3APrzzwD4A57AGdbOQjv2NfjO2kE59khyGwEn
2KeLf6fl+U5h7W/OeAGb8dcXogea8np5t49ZW0Auk2FgXiNr5Zv6tp3QAWfZ
6xy0Y1+DZuyWUtzJu7Vit0EFa6/Yuw/+xF/v2WnU1Np2l2JWnJmjec2tvW/i
29jD9vImeyivqbXtzGvvm/l2vdj3oX8auVeWxQA7k86mM+VsPSY2Y60CxuBv
5M4NhaiJtTnJHiesr3fMokft1dXYa7KYMWfNHraXnQFnwRl0Fi/iu5DFHu7l
jDqrjzw7jRl31tUEtUENUUvUALXAN/FtnHFnXc1QO9QAtUANUAvUHLXHHrAX
7Fl7t18ad7cGA9LQGLVGzVK7ZkFVGjPgLNjT9rYz7WxPzOL9F8I4/B/l9dRX
kUaP2+v2nL1XXYr+UVPeF6LmlXl9J7BXXzFsfeNzTVPbzhN3IY0espfsIXvJ
nrF3OvJeUzPUjqm5FjzL588zn2N/mkWu5mfvjilF7zsDray/wvdPGm/sW/uG
vuU+fPvVUez16jb2kTQ0RC35j32SvAfshWN8Hy/FDDvLap7a964UvW2Pd+L/
JdcfZ+4L1gbDoFLMsLOsRqqVap7a58w6u2qC2vA6r5c9OjaLHM3VHM31YRba
qEauUyOy0A41ZAJx/wP9DOz4
           "]], 
          PolygonBox[CompressedData["
1:eJwt0jFoU2EUxfGvSfoICnXQqaKkaLWCm4V20MXq5lC0ICRUQbHdmiJasUMb
4iToZIcYFSkIHWxBG0c3lUYsLlJquzUmq9AIrvp7vDf8Ofede+7N976XgVvl
qzOZEEIBvWjkQlhHiZn3XIlCuKBxHk3eFd4XWsqGUMRj/ifeTfUGuuo27Td3
FOOY7bHDzmuYwK6ZHbyV25N/Q6/bqRXKdFvxE0WZp7zfvB6ZDC7ZN2lfQf8c
hnGKP4gZ+Q/yZ9S/+C08MHuE98LctP6yOq9/DMfxivcSi+pNvVW5Z2ZOqNfp
ab2h3uRd4nfqyEV+v0VX0vN/p1m9HNZkV/GI90PvY5TMx3sa9o3w3tGtKDnr
WbmLGMMN552M31uv4jduxxei/md2U/+PxyZ9n+7ZyCTfJf4+f9OZKTMPMY+D
/AOoyZ2UX6LV9FwN2tbroC77HHN2PLHjdS656/jOS+mdRXFe/7P6jvoe7meT
+4+/w2W9stlR9QL/m1yNNs1/RTH9P1XpvkwXd9WHeXXaJ3MI/wHgmk6H
           "]]}]}, {
        EdgeForm[], 
        GrayLevel[1], 
        GraphicsGroupBox[{
          PolygonBox[CompressedData["
1:eJwtk09IVUEUxseZe69Gi6CFGLbRQLJWQYYQ7oIKN9XiWe9BUtFGHkZ/iDYp
FbRx0x8pKKhE5K0eWW2inZmVuVJbhCCZURRCkAXRJvp9nLMY5ne/e2bmnG/O
tJ08c2QwhhDKjMT4koewwHyVj0uFabUshFXgJ9yKtsaCEfgb8xj/RhpCaGwM
4QI8DP8mZq6w+D/sN8faFThD64On4AHmXuIHif+hc/h+hN7CfIA1J+AF9t/G
91N4L/N3P/cvc5Xvl/BH1g4xOD7UM9tX+y+j9cDP4EV4Mlldqq/O+j1wOzzB
v1n4FlyD38Gj8HN4Hp6A78Cb4SX238mokPMa2gNGO3ok5rjXfhTtRWFn1dBn
c9tziPMPe12LnL+eWc7laL7In1oyf+XbG7jL/ZFPO9Bz+DP6Ifa5qHxUB3or
+i/0f4xdcEH8SrL4Zv73e266n373rcK8xWtRTRsY+xWfWT2q62Y0j+TVY7gb
7oVfwZ3ubQfzQddfo2/3tbfhD5n1Tx+8KTcPz8GnPB951uP7P0Hf7fXuK8xr
xZ+NVqfq/RrtjuXbsWh9qf1L8H3vQ/Xj+9z8HOfnW/dW2miyu9CddHj+VeXr
PTYAV6Ptqdy3uj8tzF2FeSuPJ6PVqFqj920Zvuc5nCf2brT8VbfegO50mtjh
aPnr/qej+SZfK34v1+Fu90F+1JP14Sr6Rr+jpsz6UvoV/nd6D6wneyeqZR6t
8NyUY7P3zyf4oeepfGf8Lege9Ab0Fi4ne4daezq396Z3V4JvJIuZgUv+1q7B
/wENnIhP
           "]], 
          PolygonBox[CompressedData["
1:eJwtlUlIVWEUx6/vvXstbB0NUNSuoMhF7aLIoKIBn2hkbaqNCqIV+SKFBhwq
ygLT0iYyklCy1CYhBRUlDQzUBrLBLIvnomiAIrPs9+d8ix/v3POd79xzz/QW
7M5Pywt5nrcHIvCKhxi/uyDqe94BlDH4GXjeL5iBLgkqsauC0bDn+QmeNxcW
cX4WKqCTO12wmfNNcJg7R2AaunXYJsMU+hgUQJw747APeS+MIX+EMu50EUsn
bEX/ycV3EsaRz+DvNORhmw/fwxaL/C/neRKbP7ANP5kwFLJv2wgbeP7C3c9Q
iL5ISIYJ7v6Bp8hDkMVZdsjeoXdVoquCJ9APO+VX57w/D0axeR+YTmePsOmF
cYjDfnQFzqd89ztfykmyy+cK7s90+doBs5F/uO9Tzhdz/pdvmIRu9D0wgvwW
6pEbIMqdVIFtFIKI+ZfP6cgZkC44y4Atqhl8Rf4Gc/ExB7LwmQ2vYBiuo6uD
BGw86EXug6XcXQJr0KVADmQHViPVqgSKIZxIvyWajWyXKS5ohzY4ju4ErMbn
KniG/Fx+oDwwG9keRT4Ct5Gb4C7ciZhOZzVQDa/RvYFS5JLAbGS7Ht/roJBv
KoITenfEYs5xOVPu0l2uFJNie4DcCrMiVhvlMwn5MByCf9hMwVp8p8BL5GHN
Be/ogFPoysOWc+U+kzvbIxaDYtHMbHY5Vq6fo3sBPdh2QzNyi5spzVYUmzS4
x9ldqEV3zdVMtZvH2XzXI+qV3+gmIBfuUMIWWIi+jeeHUIZ8DK4gX4ab+GwM
7J16d4e+RXlAvu9bTIrtBvIgvgagVXPC82PkPqjj+RbPjdCG3A7xkM1yzO2e
C5zVqH85awhsJjWbcTc7yplypxgVq2xkew75vG8xKlb5kC/tKO2qRO0e32ZO
s/cBX2MRi0Gx1MuX2xHaFf+wmQpZT6u3NWOatWZsmwLLiXKjGdOsDbvZUM6U
O+VEuanF9ipEkH3lKWS7RztovW85VC6VE+Vm0O0n5SPVt52h3VHhdqtqqtoq
BsWiHatdW+5mQz2n3it2s6Ydpl12yPWmZk6zpx5Xr78JbLdqx+aGbcdr12sH
ahf2+FY71bCS8/e+1VY1bgrbTGo21ePqde1s7e4Ct9s1I5oVzVyp24najdrx
2vWaCc2GZlCzqP8A/Rcc1EyGbQdpF2mHaZcVKTbVC7kBLiFfhBHkd66mqq10
OlPNVXvVQLUYCKzX1fMrw3ZHd6vdrvgPrCQJzg==
           "]], 
          PolygonBox[CompressedData["
1:eJwt0T9I1WEUxvHXe73eoaamNEn6NzQYNShRQw1uUpBD/huEwkXkignVomKN
LkapQ1BBgRiIlltTKaXlVIotlaKjKAQtlaifl987fO85v+c855z3fe+JWz1N
pVwI4SQK6PTzQqzIh1CFY7hJG6ZtMf7HLproN/BQ7YNas3wIX+VT4i/6GrYq
QmgvC6G6PIRanEO/+me+EfF97Me+mXtoS/vzca9vIXSLy/pWMK4+hgGFL2oT
5i9jVn6WdgVXMcr7BH1qw/Y/la/J5/g61EvowWWzLuGTHY1q8+IfvkE9t/Xc
xT1851nFhJ51vkWeGfo02vQUaQO0174n0ZzOfj9q+ibxgPCN9o52gec8GuQl
u+rkvXqOqI+Lh/gPYyfVL6pfw3W8TGdYigvUy1DgLcfjXPZfPqNNy+vlH3PZ
HeNdK+lHsam3YO66WCxmb/Q8zsareCe0oiW9RYe8hvc4usx5a+4p+Rn5abxJ
u6bER+kMM7msFj3zvL9pG/lsfzzHTzN/4E669xjtH+9fLCT/Eq01ve+guM2/
gwPD81fL
           "]]}]}, {
        EdgeForm[], 
        GrayLevel[1], 
        GraphicsGroupBox[{
          PolygonBox[CompressedData["
1:eJwtkz9IllEUxq/3+l4RXBw+pBYVF9sykqDaAhUJCsVKHYomG1JDwsEUXQUH
h8+lochoCEGaWjWFNLC0XITg06GiwfAPREvU7+Gc4eU+97nPPfec55y3+f5I
z3AMIVznS3wL1SHMVoXwnPU1xDZcpQhhiX0G30E8z34D/ITzVsiz6I/BzfDt
8EtotuCr4Uus43x64xUx/qI7D1+AL6Hvhn/H4VyymKtwa9HiXAHvoasHj8Il
NM/A/8AT0fL5xXk5mqYOfQuaN+BG1t/sjxQfPJlNrzpKnlsFfihabrvwPwGz
4O+sndy9B94BvyzMh2n0A+imuNuXzSN5lWtCaPDcPsFf9hy2wW+z3VUM1a+3
+hQzW73ysha+Q3FY38NX4L/AD/pbY6w9xFxRDvCr0XyTf+2cPUTTxnqD/WP4
Pc4Xs3monpQ8/lW4i9n8Vx/+eL0f4faTeXUGvJkshyrwbX9X75ez+ayefMim
l8fdnsMh3APXfwXX+Lt6f8xrOYW/61heXvC7itHrdxVD9SuHF+Cn7nOZtcm9
lcfnvI8H4Jver8/Rei/NUGE1KM5iMl/kzzfNl8/tSbKaVcsa+Id7Im92vV+3
os2i/FyOlofyGcn206jv6n+Xz/N6tFmUV4+izbR6PZmsT6r3WrY51t3+wv4x
zclMsplW6H7O/wMuWXQ8
           "]], 
          PolygonBox[CompressedData["
1:eJwtlduLV1UUx0+/c85v9B+onHypUIwifcgnMwrMvJsD2WsKBt7FGkedQS3y
+uC9TLuhNZMoTml5LQUnZlCKQvMSTnkfwxJDMcZMrc+HtR8+sM5a+6yzz1rf
tfejE2fWzahkWdYEBcyrZtlc+JyHrXAI+yBsK7NsO6zCXqnPGCzLs2wp7CW2
D66QbAV56uEM9qv4xsNd7HvQhN0Io3lnDHSQqx124fsKtpBzM9TUZFkP6KpE
LnP+jr2QtQtgB2ta4XXemQSPkKs3tBE7DK34voAl2Ivha9buhhXYy2Ef9n7Y
7r/BBta+D+ux10Ebse9gIt+cAEewj8JP8GMRPmMfsfZDOI/vAvQlRx/YQawV
viF2wHri2wobsN+DM6zthD/gKtSzdg7sd2/QzNoW2IO9G7ZgfwqbsDfCb7xz
Ftp4ZwS1eQ1eIv4UvifhT9ZcgyZo9B/9VzhHjYoHsqwW+uG/w/v/VKJH9qrF
b8Na7HWwC3snfIz9CRyrxLfsydgy9uzeL5O7q4ie16f9vEx8Lc9rKlETa3M8
ve+eh9lvcm+GErtqjawVrMd+t4waWsvHsB93D+4FKti5cbUAm7A/gF7838N5
aEJtvE3sLfiSve2EUTASruP7qxo+Y2pKbdlje60G1IIaV+tqRu2oIbVkTnOr
EbXiTDgbakAt2CN75R7dqzWwFh3srR3u4Ps3/aP/as2tfQuxZjiN75cyampt
1Zha02fsiHutRg5zfY/9A5yGUzCEHC9Cp1qDYdjD4QT2z/A89gt5aEgtqUm1
OQUm+y/4VhfRc3tvja11HYyDV4iNL2JmnB17Zu96Yvcoo6f2tsqaoWhtANzn
e3/juwUN+Od64DDj//H8DvZiqIVeScNq+SaxG34Tuw5u5KFd8z2D/xJchNn4
34CSfAUsd9aL0ITacMad9dvQ7UwQa4Ir2F0wh3cb8pgRZ8Uz0LNQTapNNaf2
zjp7MI210/M4QzxLPGOWJE2prTH4xjrf2FdhPmsb4a49U2vEFhUxo87q09j9
izgjPCs8AzwLjsMxGMy7z+VxBngWOJPOpj221/bYXttje+0Z61k7FXtKHnt2
7/fx3StDgx0pp7nVhNpQE2rjVNLSr6ztLEOTLanG1tqaWTtrYC3OeQbCzdQf
z5gneD7Iu9+WcUd4V9hze9+demEP7IU1sTZqZEA6nwby/BCxB5MmalNNra2a
UBtlEevVWE3SiFoZl7T6LPkG5VFDa2nNrb2aU3tqRK1MTtpXg2pRDamleuw3
i9Cs2lUjasWe2ttZ2DPz0KBa9A70LvRO827zzvTu9A7wLvCO867zjmpLM+vs
duO7Xcad5933Gd9sLmLGnfUTxE6mO827zTv5UKq5tXcP7uV/CZgpWA==
           "]], 
          PolygonBox[CompressedData["
1:eJw1kj0sQ1EUxw+vfXS0tKQGdCeRNCFsEoNiIEVjkJgaQkmIgUqtTYQQFoNo
fUV8xGQhQSU+Em0HFm2CsRKJxOAjKn437xp+7/7f/5x7znn3vsr+UMdwoYhU
gB1eTZGhAhGvTcQHrZDFOyXWbYgMwCDck3wHcfQjsUtydinkRSdY64jVwwi6
BG+JtZh3B7yTO02PPmqPwTh0gV+hY73oeZiDEF4UbxkdoV+aejusGWploQa/
Gpr07LXocuJuCBI/VN+H/kR/QAL9hndDftq04h68BmiEpOqHl2PmL/gGF54T
nonb6HGLzuP/QICaq+QLsU30BszoOY/Ii+kzumbNE/uFHvYRkknWHPO+wD7s
QUDHwjzO9axPhtVfzaHOVZ3vBXktxM5YF3lfgDB5V3jr5Hl4r4IDfS9xvAz1
H2D0/17wUqY1v8HeUihT54DXzHc6yHWCC7ZhS90Ve9U/M0HOlO43y3pMrxNo
R7dBxG79N51ov94T5JGkRgrMIuteV9BrEIM/j49VCg==
           "]]}]}, {
        EdgeForm[], 
        GrayLevel[1], 
        GraphicsGroupBox[{
          PolygonBox[CompressedData["
1:eJwtkj9IVmEUxt/3vffT0SHIFAd1CJwicBGaRI0QvuATLXQIHBocdGtSaLRB
EQVHqcg/iYiCbkooaFsfLbVE+Q+FFmuzwfD3+Nzhued5n3vuec95zm0ZHquM
phBCJ8hANQ8hEvsR30Ja4HXwS/gE+AN2SyF8Rh/PfJbeS84GcQF9k7gMnsDv
on+At8PvwNuSvz1EmwWUChHtHD4ILqLP0ufgfdzxCV4mTkX3ds3jFHSDM9Wu
CaGB+Jecf8Q3oEKNQ84/yf9PsR+gCn+N9is6v5OcLeIG+jbxOrn/Z+Q2ZdZf
wpcyf6sa5aKfcfhQ7tkHiPW5+39EL/O5e5ghDif3LF8vihl70I6JD8AJ2Imu
uRvtkbxahB9EeyXPvkXP0pHsqbxdQfsS3dvD5D1pX+/Qrgof5Merws/fuXuS
PkKfe8VdHby8X/K3s2jNxezyQB7JqyNQm9vzUu4dy6vGZO9u85NrqeZa8m6U
3w3vSp5Xcz8l5wU5X9EelzzLfrKP8rNS417V8/PkH1N3aT/apXx4j7ZezKve
5Yv079H/hzyfjvZU3rbyvrHYkXY1mdlb/cvyTh5WefcxurdV4r1kLu0GnJRl
YA==
           "]], 
          PolygonBox[CompressedData["
1:eJwtlWmsTVcYhvc+Z599UaSEIGK4QSvVuo05qJJWlBha9b+Jf9J0SERotNFI
aOIPwqU19IrLzU2uISXmBNWGmlqKtKZrig6mpsYbVD1PvvNjnb2etfbeZ61v
v++7Kqd+MvnjQpIkX9Ey2hV+WjFQkybJ6jxJ6mg/0X+VsepSkjSntaW/irFP
uVbC7bjWwbXc2wSPgC/Ax+D2tJHwRfg4/Ube3xL+Fl4BX6b1gvfDHxWT5CHP
vwGfg48wl8Nt4Fp4reuB+8Mn4V3wSrgvfBTeBH8NvwYfgRvgGrgKPgZvgdfB
/eAT8A64Hh4A/wrvgX+mdYI3wU1cG5gfyPUUvJe5M/Aw+Cx8GF4MvwIfgtfB
S+A+haiZtSvCL8Jr4Zo8amgtD8P18FZ4MHwGPgifgofCv8OH4M3wIPg0fAD+
jxpV0e9EGwAvpa2g39x3Uts/uW6EN9Cuuy/mu3LdAQ/n2WvwS/D3fr9ifGO/
dWvGrmexRtdqza39CbgL/e2MDeX+P+CX4QPwdPgG3Bv+AZ4Jz4WX0S8xto33
NcI96e9j7EPmL8A94L3wNPg3uDu8Cx4Fn4a7wTvhEfB5uBLeDY8uhgbUghpU
i7/AnelvYawD87WMvQ4fh7fnoUm12Z6xHsxVqxn4Bfh8FhpWyy38pvAX1hQu
qgH4JNcP8MVY2hier0+j71hH5hZy/zeMNbMG3P8ZvAhO1A48H14O5+4xC82r
fT2m15bDq9PwhN64XP62fuO3GVugpulXWDPmZ8IL4f/VTxaaU3tqTu11gEe5
N/VCPb7kngf0JzH2lLnP4fvwRLgpjxpYC9fgWq6W/3s07RptPfNPuU7hnmYV
4WG97H/4X5f4j8Y0PK7X1Zzaa6CdLUQGmAVv0n9SCs/oneFqvBRrdK16Xu/r
Wb2rp/W2mlW7alAtqhG1okbUihpRK13LWm8qe1cP6AUzxCwxk8ymx1w3p+Fx
vT6W5/ekoTG1Npn93oHHwXfz8IheMaPMqirm/4bHwLfgSfBtNQH/k4dG1aqa
Vtvjmb8FvwPfhsfBN+EbtH5ZeEJv6Am9sYCxR/B7cKkiMslsGljOotnc/2Ma
ntN7ZqbZqcf0mhllVpkZZocZYpaYWWaXmWf2maFmqR7Wy2aC2aCH9bIe1+tm
rFlrRpqVs1jfPXgC/IC5GfBdeDx8z+zk+a1peFJvumf37p7duzWyVtbE2lgD
a2FNra01t/bW1NqaiWbjEDOB/8+pyfv0HzO2JosaWauH8LwsMsfs0XN6z2/k
t/rLMywLj+t1M8AscM2u/V/zLAtP6A336F59p+9+10OyIjykl/SQXipl4RU9
YzZbE2tjTayNz/isHtSLZoBZoKf1tplutnsGeBaYOWZPNWNz8vCc3nvi+ZfF
GedZ55nm2VbH2LM0MsFsMBPMBjPILDKDzKLFrjePd/rujLHvmNtAKxQi88w+
M8asMdPMNs8ozyrPVM9Wz1DPUjPWrHVNrs1v4rfpzfxbhcgEs8FMNBs9ozyr
/E//2zPCs+I5RLIubg==
           "]], 
          PolygonBox[CompressedData["
1:eJwlkk8ow2EYx5/fO/vJRQ7W2pKMi+QkRWvloKnloH4ScVA7KA4clNOUI4qy
laNGM8ViISkiyuRiB+XPhdPkRDvRlHx+PYfvnuf7eZ/3fZ49Wyg+40wbEWlE
XrTgESkS7y2RDg4ywHSVSAXv4JeI6/gt6l6pe8SH4Q/UDaMNWB52gCrwCVge
dow/QgHujRjtlcQb8hzvDRGxssLHH8rCIrbIKPk7KiEfLMHFS+rO8Wcoxnu/
sB7uP1k6UwHWBfPDtmGdsCvyO+7XEFct7RUnL8FqiSlLZ5ojn7L1e/6gb7RM
TQuHPs428SHq9slf0B5+F43DBqg5Rd3wAuwWtsgsfnSIDxrdj+DD6ATWYHQ/
TfhZ+pRh/bB54hg+abRfGl9H7vHqHtx9RPFRYjX+GR7BFy39/bK8N4ku8M1G
dzaIb6f2A9ZndLdB/DV5jPMdS3fm7i7h0flvYG2wNVjO6C4zsHp3LliZugD+
DfXCWtmdY+v8X+jT/d/Q4x/KVUxo
           "]]}]}}, {{}, 
       TagBox[
        TooltipBox[{
          Directive[
           GrayLevel[0], 
           Opacity[0.5], 
           CapForm["Butt"]], 
          LineBox[CompressedData["
1:eJwVzcEqhFEcxuE/w5QrkLIwKbcgkrKQbCgS628xJWFKmWSkLCxslEgpKUrK
NGVhYaOwsjFIaRpNJNRcgZTyWPx6Ou/3nU4mmR+ba4iIRIV0xGlTxBJPmOcx
Jxojykx4y237DTd5yQ1ecJ3nXOMZV1niCouccr/ORX5w3/7GPda4yyp3WGHO
fy3NEYfOaR4wxS17F0vs5JE9w6JzD6/YzWsO8YGjrPy/qy996869H0769stI
RbSqbG9j1t7ODvXq3t7HR/bziQN85iCrHGbBvRGOa1ov9hnWOMtX5vjOBX4y
zzqX+QdjGzoe
           "]], 
          LineBox[CompressedData["
1:eJwVzb8rhAEcx/GveO78A9eVzWZQSkZ/gZR6BotFRgOD1A033KJkIpEy0DnX
1RVF+ZEYDERMUgblHyAhuvIjr2d493q+n3qep3tiOp1qi4hxHeQitpKIPW5w
h+tsco0NrrDOZda4xHJ7xCnnecQL+z7PucszNnnCBo9Z5yFrrHjvMfsuH3hl
v+cl71i1/2Xf5Tdv7C1e8yv7j73o+VYFPbl7+MYB/jLpiMiroEFbkV3q1bO7
j/0a0ot7mK8c4TtTphzlmGb04Z7lJ0tsscwfVhj5iDkmXOCkfZGr2lTOXmUn
t/kPTOg7dA==
           "]]}, "0.0002`"], Annotation[#, 0.0002, "Tooltip"]& ], 
       TagBox[
        TooltipBox[{
          Directive[
           GrayLevel[0], 
           Opacity[0.5], 
           CapForm["Butt"]], 
          LineBox[CompressedData["
1:eJwVzb8rxHEYwPHHnZPh/gBlEPI/qEsZDLco3XC6RZ1Sl+SiTnIlBoNFSZSS
Mil1ncFgsWAwKT8yXF0k1C12pXh9h3evvs/z+X4+g7PVwmJXRMxoLR3R6YlY
4SeX+c4qX7nANuc5rYI2MhGTrDPPlv0EXzjOJ47xgTkOa0AV5/s5xz6m9ZeK
KPn+ZZE/7OhLLU2ZPTLPW47yhjk2OcQGR7jLFI+9m+EJe7lvnuVScmd3xIF5
m4d84xE/WEveZp3fLLHBdftzbvKCW7zkNq+4w2vu8Y5l/92zwmcWecpV+7Pk
fv4DwdQ2WQ==
           "]], 
          LineBox[CompressedData["
1:eJwVzM9Hw3EYB/BnWpv+gbFjx8To0F/QMWKxSyK6dWmX6DBJRDokUqKIfswY
jUVK6vCVKF2jQ4fqHFFilFWv7+Ht9Xl/nsfTP10dn81ExKQcZSPy+Yh97sqW
VHMR65zhKrPmy/zTF/nDGjuc5xfnOCUTUtErLLPMD47xnaMcliEZ0Ut84yCL
UpA+yclvj12zTw7wlQW+sMhrdnoj7r2/eaN3eceMv0M+6Lfej6zrT2zymUus
89y8wQs2ecUWE56kd3nGFfuXXGPCBW6kd8032eB2ep87POYe2zzgKf8BzpU4
iA==
           "]]}, "0.000175`"], Annotation[#, 0.000175, "Tooltip"]& ], 
       TagBox[
        TooltipBox[{
          Directive[
           GrayLevel[0], 
           Opacity[0.5], 
           CapForm["Butt"]], 
          LineBox[CompressedData["
1:eJwVzC1Lg2EUgOEjmx/gHxi4YhUEgwyzWIUhC7MsaDHNIBgMCxPEIGIYgwki
oiCDDRTEomFhomI3LBgm9sFAUES93nBzcZ6PM722uVIeiYiiztMRpzrW1lhE
jWUecoP7TI1H7PLXXOE3d/jJba6rpKJ5lQUWmGeeAy5zQfNaMs9xkbPMKqNJ
TegvFZFzN+QM35lhn1N85NdoRJc/fGI4f2Gal3x1fsEem3xjm31e8YNVNnnv
T5sdXid7ecs993c8YIdHfGCNz6ywnuz3vsEWT5L9POMN/wH9QjRI
           "]], 
          LineBox[CompressedData["
1:eJwVzbErxGEYwPHHOWcw2A2KdLl/QclgkLKcwelncFmurutEbnDLKZLFgqIs
VhMy3GIxYDJdiiiJ4UqWW5V8bvj26X3fp/cZWVmdr/ZERKLN3oh2JqLGL67x
g1Uua0m7fREL3GaeDc6xzhm+mJ/mE6eYU1YV76Msc5glDjGjlBLnv1TEIn/5
rbZelXfX4izvOcE7TvKKY7zkOA+Z5pn9/TxyHuAxB7nOt3TEifd3nvKTG919
rPOHDXaY8IJb5q65wyb3eMN93vKADyyaf2SJLVb4zALPu/+b+wf7tzHq
           "]]}, "0.00015`"], Annotation[#, 0.00015, "Tooltip"]& ], 
       TagBox[
        TooltipBox[{
          Directive[
           GrayLevel[0], 
           Opacity[0.5], 
           CapForm["Butt"]], 
          LineBox[CompressedData["
1:eJwNzzFLAkAYgOHPypCGIGhtcAgj/AmB0NCQS1gtBQmCgQg6JJSLgxERuLiE
CP0JxZaWpmpokiCHphYhRGho7xlenvuOO7hLl+qFWiIijlRfiPhciqhyzHO+
s8gXdpcjntnhE2/5yGsOeOrcH9v8ZYszNjnlBb95yfVkxAPX2Ocq77nCHrMc
cZsDZjhkjq/c4Rv3+cECv/ijQ+sZ50osepc5yZQ2VDGnWeUma9xiVrua+M8e
m/bzbPGAbR7zhie84xk7LLGshqbuX/EfF5ksMQ==
           "]], 
          LineBox[CompressedData["
1:eJwVzDFLglEUgOFjlkHQH7CQmhsbhMBR3DNQghYHmypoCBoiSMIhosGlKMIx
SDAIFxeHHCKk5oaGwKIf0NIQ9XzDy8M5l3MXazur26mIWNP1ZMReJuKCu2xx
i6fcZJMT0xFH/DUf8If7rKumdfMGK6yyzDILWlHJnGeRy1xQLnk3z3FWMwrl
7b7TEUv8YJZjzvOTOY74NxXxxLT5mRne8tX+hm/s8J1djnnPLzbY4cDNHR/Y
47F9nycc8IxDtvjIc454yRce8ir53307+Z//cKIvPw==
           "]]}, "0.000125`"], Annotation[#, 0.000125, "Tooltip"]& ], 
       TagBox[
        TooltipBox[{
          Directive[
           GrayLevel[0], 
           Opacity[0.5], 
           CapForm["Butt"]], 
          LineBox[CompressedData["
1:eJwNzbFKggEUhuHzZ5aEdAciNtcaBWFbNDU4JIEEBUWQGA1dQBBBEQ0uRiB4
BUJhUItLg0NU4hUIDYq01uwzvDycbzmFw7NSLYmIHbVSEYN0RJNffOQHG+yx
znfes8tbvvGKHd7wl6+c8IUjPvOHbQ75xIU5v5hhn2l+cobfzHPEHMdc4R+X
+c81JrMRWS0qp6ItzyWtasu9zm1ucFNl7bor3OMBKzziPk94qksl8xHXPLbf
sco6z/nACzY5BT5dKXQ=
           "]], 
          LineBox[CompressedData["
1:eJwNzrFKAgAQgOErtSAMgsA9CCQE8QnE2UBBWoIMkoIIUtocdBAKA0Fco6CX
iIKWpoZyarAtx5YIG4KgyW/4+bi75TYarVpzISIqai5GvCcjTvjGI465z2eO
liKeOOAj9+z/2ecfL/jLHn/Y5Rfb/GSHmVTELdd5wzVecZXXzPOBOd5xi/cs
8YVFvnKbE35oqm/NlEz4y22Zda4wrU2dmrNsMccz5llQWV1zlT3u8Jy7vGSd
Ax5wyEOOeMw5IzEpFQ==
           "]]}, "0.0001`"], Annotation[#, 0.0001, "Tooltip"]& ], 
       TagBox[
        TooltipBox[{
          Directive[
           GrayLevel[0], 
           Opacity[0.5], 
           CapForm["Butt"]], 
          
          LineBox[{1180, 1652, 1175, 1648, 1169, 1643, 1163, 1135, 1133, 1633,
            1130, 1631, 1127, 1629, 1124, 1627, 1120, 1090, 1088, 1610, 1086, 
           1609, 1083, 1060, 1059, 1599, 1057, 1040, 1039, 1026, 1593, 1016, 
           1582, 1015, 1583, 1002, 1568, 1001, 1569, 979, 1543, 977, 1545, 
           980, 1547, 981, 1548, 950, 1510, 948, 1513, 951, 1515, 953, 1517, 
           954, 1519, 956, 1521, 917, 1474, 913, 1478, 918, 1482, 921, 1485, 
           924, 1489, 927}], 
          
          LineBox[{621, 1237, 617, 1232, 612, 1226, 605, 1220, 611, 1278, 652,
            1276, 649, 1273, 646, 1270, 644, 1267, 640, 1263, 643, 1305, 674, 
           1303, 673, 1301, 670, 1298, 672, 1328, 698, 1327, 696, 1325, 697, 
           1346, 715, 1345, 716, 1356, 726, 735, 736, 752, 753, 777, 1374, 
           779, 1375, 781, 782, 810, 1392, 813, 1394, 815, 1395, 817, 1396, 
           819, 821, 856, 1415, 860, 1418, 864, 1421, 867, 1423, 871}]}, 
         "0.000075`"], Annotation[#, 0.000075, "Tooltip"]& ], 
       TagBox[
        TooltipBox[{
          Directive[
           GrayLevel[0], 
           Opacity[0.5], 
           CapForm["Butt"]], 
          
          LineBox[{656, 1281, 655, 1280, 654, 1279, 653, 1277, 651, 1275, 648,
            1272, 650, 1308, 678, 1307, 677, 1306, 675, 1304, 676, 1331, 701, 
           1330, 699, 1329, 700, 1348, 717, 1347, 718, 1357, 727, 737, 738, 
           754, 1364, 755, 756, 783, 1376, 784, 1377, 785, 786, 818, 1397, 
           820, 1398, 822, 1399, 823, 1400, 824, 825, 870}], 
          
          LineBox[{1138, 1637, 1137, 1636, 1136, 1635, 1134, 1634, 1132, 1632,
            1129, 1093, 1092, 1612, 1091, 1611, 1089, 1063, 1062, 1600, 1061, 
           1042, 1041, 1027, 1594, 1018, 1584, 1017, 1585, 1004, 1570, 1003, 
           1571, 1005, 1572, 983, 1549, 982, 1550, 984, 1551, 985, 1552, 957, 
           1518, 955, 1520, 958, 1522, 959, 1523, 960, 1524, 961, 1525, 929, 
           1488, 926}]}, "0.00005`"], Annotation[#, 0.00005, "Tooltip"]& ], 
       TagBox[
        TooltipBox[{
          Directive[
           GrayLevel[0], 
           Opacity[0.5], 
           CapForm["Butt"]], 
          
          LineBox[{683, 1312, 682, 1311, 681, 1310, 679, 1309, 680, 1334, 704,
            1333, 702, 1332, 703, 1350, 719, 1349, 720, 1358, 728, 739, 740, 
           757, 1365, 758, 759, 787, 1378, 788, 1379, 789, 1380, 790}], 
          
          LineBox[{990, 1556, 989, 1555, 988, 1554, 986, 1553, 987, 1575, 
           1008, 1574, 1006, 1573, 1007, 1587, 1019, 1586, 1020, 1595, 1028, 
           1043, 1044, 1064, 1601, 1065, 1066, 1094, 1613, 1095, 1614, 1096, 
           1615, 1097}]}, "0.000025`"], 
        Annotation[#, 0.000025, "Tooltip"]& ], {}, {}}}], {
    DisplayFunction -> Identity, AspectRatio -> 1, 
     AxesOrigin -> {Automatic, Automatic}, DisplayFunction :> Identity, Frame -> 
     True, FrameLabel -> {None, None}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "GridLinesInFront" -> True}, 
     PlotRange -> {{0, 20.}, {0, 6.283185307179586}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
       FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           GraphicsBox[{
             RasterBox[
             SparseArray[
              Automatic, {9, 1}, 0., {
               1, {{0, 0, 1, 2, 3, 4, 5, 6, 7, 8}, {{1}, {1}, {1}, {1}, {1}, {
                 1}, {1}, {1}}}, {1., 1., 1., 1., 1., 1., 1., 1.}}], {{
                Rational[-15, 2], -180}, {
                Rational[15, 2], 180}}], {Antialiasing -> False, 
              AbsoluteThickness[0.1], 
              Directive[
               Opacity[0.3], 
               GrayLevel[0]], 
              LineBox[
               NCache[{{
                  Rational[15, 2], -180}, {
                  Rational[-15, 2], -180}, {
                  Rational[-15, 2], 180}, {
                  Rational[15, 2], 180}, {
                  Rational[15, 2], -180}}, {{
                 7.5, -180}, {-7.5, -180}, {-7.5, 180}, {7.5, 180}, {
                 7.5, -180}}]]}, {
              CapForm[None], {{
                Directive[
                 GrayLevel[0], 
                 Opacity[0.5], 
                 CapForm["Butt"]], 
                CapForm["Butt"], 
                LineBox[
                 NCache[{{
                    Rational[-15, 2], -140.}, {
                    Rational[15, 2], -140.}}, {{-7.5, -140.}, {
                  7.5, -140.}}]]}, {
                Directive[
                 GrayLevel[0], 
                 Opacity[0.5], 
                 CapForm["Butt"]], 
                CapForm["Butt"], 
                LineBox[
                 NCache[{{
                    Rational[-15, 2], -100.00000000000001`}, {
                    Rational[
                    15, 2], -100.00000000000001`}}, {{-7.5, \
-100.00000000000001`}, {7.5, -100.00000000000001`}}]]}, {
                Directive[
                 GrayLevel[0], 
                 Opacity[0.5], 
                 CapForm["Butt"]], 
                CapForm["Butt"], 
                LineBox[
                 NCache[{{
                    Rational[-15, 2], -60.}, {
                    Rational[15, 2], -60.}}, {{-7.5, -60.}, {7.5, -60.}}]]}, {
                Directive[
                 GrayLevel[0], 
                 Opacity[0.5], 
                 CapForm["Butt"]], 
                CapForm["Butt"], 
                LineBox[
                 NCache[{{
                    Rational[-15, 2], -20.00000000000003}, {
                    Rational[
                    15, 2], -20.00000000000003}}, {{-7.5, \
-20.00000000000003}, {7.5, -20.00000000000003}}]]}, {
                Directive[
                 GrayLevel[0], 
                 Opacity[0.5], 
                 CapForm["Butt"]], 
                CapForm["Butt"], 
                LineBox[
                 NCache[{{
                    Rational[-15, 2], 20.}, {
                    Rational[15, 2], 20.}}, {{-7.5, 20.}, {7.5, 20.}}]]}, {
                Directive[
                 GrayLevel[0], 
                 Opacity[0.5], 
                 CapForm["Butt"]], 
                CapForm["Butt"], 
                LineBox[
                 NCache[{{
                    Rational[-15, 2], 59.99999999999997}, {
                    Rational[15, 2], 59.99999999999997}}, {{-7.5, 
                  59.99999999999997}, {7.5, 59.99999999999997}}]]}, {
                Directive[
                 GrayLevel[0], 
                 Opacity[0.5], 
                 CapForm["Butt"]], 
                CapForm["Butt"], 
                LineBox[
                 NCache[{{
                    Rational[-15, 2], 99.99999999999997}, {
                    Rational[15, 2], 99.99999999999997}}, {{-7.5, 
                  99.99999999999997}, {7.5, 99.99999999999997}}]]}, {
                Directive[
                 GrayLevel[0], 
                 Opacity[0.5], 
                 CapForm["Butt"]], 
                CapForm["Butt"], 
                LineBox[
                 NCache[{{
                    Rational[-15, 2], 139.99999999999997`}, {
                    Rational[15, 2], 139.99999999999997`}}, {{-7.5, 
                  139.99999999999997`}, {7.5, 139.99999999999997`}}]]}}}, 
             StyleBox[{Antialiasing -> False, 
               StyleBox[
                LineBox[{{7.5, -180.}, {7.5, 179.99999999999997`}}], 
                Directive[
                 AbsoluteThickness[0.2], 
                 Opacity[0.3], 
                 GrayLevel[0]], StripOnInput -> False], 
               StyleBox[
                StyleBox[{{
                   StyleBox[
                    LineBox[{{{7.5, -140.}, 
                    Offset[{4., 0}, {7.5, -140.}]}, {{7.5, -100.}, 
                    Offset[{4., 0}, {7.5, -100.}]}, {{
                    7.5, -60.000000000000014`}, 
                    Offset[{4., 0}, {7.5, -60.000000000000014`}]}, {{
                    7.5, -20.000000000000043`}, 
                    Offset[{4., 0}, {7.5, -20.000000000000043`}]}, {{7.5, 
                    19.99999999999998}, 
                    Offset[{4., 0}, {7.5, 19.99999999999998}]}, {{7.5, 
                    59.999999999999964`}, 
                    Offset[{4., 0}, {7.5, 59.999999999999964`}]}, {{7.5, 
                    99.99999999999993}, 
                    Offset[{4., 0}, {7.5, 99.99999999999993}]}, {{7.5, 
                    139.99999999999994`}, 
                    Offset[{4., 0}, {7.5, 139.99999999999994`}]}}], 
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]], StripOnInput -> False]}, 
                  StyleBox[
                   StyleBox[{{
                    StyleBox[{
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox[
                    "\"0.000025\"", 0.000025, AutoDelete -> True], 
                    NumberForm[#, {
                    DirectedInfinity[1], 6}]& ], TraditionalForm], 
                    Offset[{7., 0.}, {7.5, -140.}], {-1, 0.}, Automatic, {1, 
                    0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox[
                    "\"0.000050\"", 0.00005, AutoDelete -> True], 
                    NumberForm[#, {
                    DirectedInfinity[1], 6}]& ], TraditionalForm], 
                    Offset[{7., 0.}, {7.5, -100.}], {-1, 0.}, Automatic, {1, 
                    0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox[
                    "\"0.000075\"", 0.000075, AutoDelete -> True], 
                    NumberForm[#, {
                    DirectedInfinity[1], 6}]& ], TraditionalForm], 
                    Offset[{7., 0.}, {7.5, -60.000000000000014`}], {-1, 0.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox[
                    "\"0.000100\"", 0.0001, AutoDelete -> True], 
                    NumberForm[#, {
                    DirectedInfinity[1], 6}]& ], TraditionalForm], 
                    Offset[{7., 0.}, {7.5, -20.000000000000043`}], {-1, 0.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox[
                    "\"0.000125\"", 0.000125, AutoDelete -> True], 
                    NumberForm[#, {
                    DirectedInfinity[1], 6}]& ], TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 19.99999999999998}], {-1, 0.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox[
                    "\"0.000150\"", 0.00015, AutoDelete -> True], 
                    NumberForm[#, {
                    DirectedInfinity[1], 6}]& ], TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 59.999999999999964`}], {-1, 0.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox[
                    "\"0.000175\"", 0.000175, AutoDelete -> True], 
                    NumberForm[#, {
                    DirectedInfinity[1], 6}]& ], TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 99.99999999999993}], {-1, 0.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox[
                    "\"0.000200\"", 0.0002, AutoDelete -> True], 
                    NumberForm[#, {
                    DirectedInfinity[1], 6}]& ], TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 139.99999999999994`}], {-1, 0.}, 
                    Automatic, {1, 0}]}, 
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]], {
                    Directive[
                    Opacity[1]]}, StripOnInput -> False]}, {}}, {
                    Directive[
                    Opacity[1]]}, StripOnInput -> False], "GraphicsLabel", 
                   StripOnInput -> False]}, "GraphicsTicks", StripOnInput -> 
                 False], {
                 Directive[
                  AbsoluteThickness[0.2], 
                  GrayLevel[0.4]]}, StripOnInput -> False]}, "GraphicsAxes", 
              StripOnInput -> False]}, PlotRangePadding -> Scaled[0.02], 
            PlotRange -> All, Frame -> True, 
            FrameTicks -> {{False, False}, {True, False}}, FrameStyle -> 
            Opacity[0], FrameTicksStyle -> Opacity[0], 
            ImageSize -> {Automatic, 360}, BaseStyle -> {}], Alignment -> 
           Left, AppearanceElements -> None, ImageMargins -> {{5, 5}, {5, 5}},
            ImageSizeAction -> "ResizeToFit"], LineIndent -> 0, StripOnInput -> 
          False], {FontFamily -> "Arial"}, Background -> Automatic, 
         StripOnInput -> False], TraditionalForm]}, "BarLegend", 
      DisplayFunction -> (#& ), 
      InterpretationFunction :> (RowBox[{"BarLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{
                 RowBox[{
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"#1", "\[LessEqual]", 
                    RowBox[{"20", " ", 
                    RowBox[{"Min", "[", "kp", "]"}]}]}], ",", "Black", ",", 
                    "White"}], "]"}], "&"}], ")"}], "[", "#1", "]"}], "&"}], 
               ",", 
               RowBox[{"{", 
                 RowBox[{"0.000011110649`", ",", "0.00022221298000000002`"}], 
                 "}"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"0.000025`", ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                 "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{"0.00005`", ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                 "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{"0.000075`", ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                 "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{"0.0001`", ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                 "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{"0.000125`", ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                 "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{"0.00015`", ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                 "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{"0.000175`", ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                 "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{"0.0002`", ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                 "}"}]}], "}"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
           RowBox[{"LegendMarkerSize", "\[Rule]", "360"}], ",", 
           RowBox[{"ScalingFunctions", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"Identity", ",", "Identity"}], "}"}]}], ",", 
           RowBox[{"Charting`TickSide", "\[Rule]", "Right"}], ",", 
           RowBox[{"ColorFunctionScaling", "\[Rule]", "True"}]}], "]"}]& )], 
     TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.784397612001767*^9, {3.7843977148526516`*^9, 3.7843977187671814`*^9}},
 CellLabel->"Out[58]=",ExpressionUUID->"947cdc28-c1d9-4da1-bfa6-21326fc895a1"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ReliefPlot", "[", 
  RowBox[{
   RowBox[{"Transpose", "@", "gamma"}], ",", 
   RowBox[{"DataRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", "20"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", 
        RowBox[{"2", "\[Pi]"}]}], "}"}]}], "}"}]}], ",", 
   RowBox[{"AspectRatio", "\[Rule]", "1"}], ",", 
   RowBox[{"FrameTicks", "\[Rule]", "All"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", "Automatic"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7843969539308224`*^9, 3.784396967582343*^9}, {
  3.784397006345059*^9, 3.784397033545313*^9}, {3.784397068799022*^9, 
  3.784397073746791*^9}},
 CellLabel->"In[34]:=",ExpressionUUID->"4fb9d3a2-44f8-4c49-a794-659a06687de8"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{
     RasterBox[CompressedData["
1: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
tcSjNoiKLlOpR4hVqs9u4kumaRe/7yrh4N8M1bu+vw7rW1k/9xBfGrIU9JF/
wMHfZem7l2XX4VeIqsalQjJnD+l/GyS+tKjjeVXZgTqYraqc35tDg/qneZZ3
iS95eWfetSf7+WzNVLnONRrG1LaOGxFf+nU4de3177UoHxVERAwN0onTUneD
OLjS0WloWFGLHkWp/XmhNFxN2r2llvi/d/X1u8IptaiPCgzO8KNhjVHtoVvu
HHx72Jpb6lWLdSV7tjkcoCFkb+x9CScOJGdfcV+5qRZ6e33oZbuJd/1S1ZXb
yYGA9t+AuTKEV6LOXg07ib/MljN9upWDZ/EzkZajNbDLe68ZsJWGreo1A9Wb
OOBKLegraq7B/ebVAXmGNNiUnfrtqMPBPveQy/KPa/CkU26dnTYNNQGF6qfW
knN986+J1DkWuizNo1YSj3pzokO4i5xr9zkrJY3SGQg9ZpxnmMPG4neZ9sLk
/ZtRxsdHbhAOynrFlk+Qc/df1dNjgoQbZd20ByFd6D904P6pLSwoh6ya1n3K
xbXV32nbDCjQnPFI8T7DhGvB2uQAdzLHpdqZVQrt6OhSXOGVyIDfloqkL2t5
oLjEHEyzbUYCw/RX/kk6HjjPDxoy4UJOPl41dEc9Yu4v4+47SkNvlqxQ1gEy
Lz7UnDdfW4Mjj+ZruJBefkaTol7w5eBRNL0tlfR1x6Fzs65UkPmV+SCkMpeD
0Rit3tXHmrAzN4l1nJyjpLsOW3TfctFZtHlWxdp21Nz7IpnjQ/igcrvZpp8H
zcWVUscHKaBx/vYvorPwNNve1K6AD+nFhRsfyFDxhJ0kn5bPwu3bUoXFNaQ7
3h/WP9feBbU0iWMNt8j63Ch9KcThQkf5g/b6j52QD/9nJWvDgmP3n4SH63j4
dOeZUbdkJyYPC/82Jh418iFYXzOUB/l0M4VISwrWOURPcohH+fivsWkjvXYp
WXqFdEoHwkVGhG8kM4HtLzya//BQZzZStmJ2B/GUnrtfdzDx8PjX9TrNPOz/
KiG5M64dxcnbs/+IMbEz/vA5q1Qe7tGju0Sl25E+nbxJsZWBp1+lwooO8vD7
kmKTim0bJqs41KkbDBgesQuQ0uHheM1wZ2h8KzwErgkqejHg9Sy8WlKMhzSb
3K8v2ltgEvv6jb4uA38PMsQ9B7j491fgVJZyC0rfOGz7KMaA9ZZf0+/LyVyL
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
/Fl/qfzKU/kO6FfI9nn3MmFsINghsY2P+2MLm6MPd8D0+BrPkTksXM2tCur3
5mNTIeOAdVEHys3rj01uYKFNaXHC6iQ+Fgl5KYoJUECTDStN2M/CExsDRdZz
Pi6UNISedqMgep+FqEMMC3KTQy+mSUf4vf8+S/c9BatH+5xCCT8PmXh8unqJ
Dw3aHft5ip1YalCV/6+JhfddEXc7AviIbykIcnPrxPLfXK2yIhZa4eElp8TH
10fia3TRCbFTTrM1rrJwZCbc23AeH7GVNd1ZQp141ZnX3RnBgq3tVOXFFXwk
FUavd22ggGojf3fkCAs5B8VkA0nvXLzGLWMlU/Ciusi21Im8n7/Le51N+bAW
ONnKEySvo9yZl/2GDfYBizlOhFfDv1vvyhynI/PubeGeThZO7N3Z0KDJQc6w
Ic2W1QX67Qe3kkaZ6Krd+m/7Tw6ein+7NrmdggjvIJrZfCaetP1yiKvkwm9W
7JO5zDaI3pXYGibDwMbID/aZTVyYPX9tMv22CfO/SobT/9CQ8U/pHL+HAxm7
FIu+/DrwncMPv+FToccyHv/0YwD9H9VyH36txja9f8skNtKwv+Vsk+c6DkbH
WAFbFlST53xP84ItFWY7nZrbTgzA83ff0NDPD6ix/+h3TJCKzzGuxcobBvDd
dJobL1ENw1NcJVleF54fEpqplh/Ag5t3jyquqsbhw0PuPVVdmAhPcJSYNYCR
pLzCMzrVePF6lyElqwvjcmkZotx+KDx2cz1oVo16WdH580O74JXUN9L4oR8+
2QYuL3dXw37R5LKXNl34OcDfE5TbD9emHRYeh6pxdfTkjwmFLth5rNqvHNkP
zsZMc7fAagzuHjk+Z6ITSV+P6Ei59GOD5InDzyKqUSsvdWxtTSdyFY5me2/o
x3rKubyjcdUISPUyeXitE4/W/ag4KN6PoRcX854mV0OAYy9U59GJomsVHpHV
fbBbWTD/9o1qnCp5V0pb2wnTmo2jZwL6UBF6ieqRUY0IO5Wbyr8pkDpfZGe0
tA99KyfCtXOq0ZLxdevsDxTo1CxlGtf0Yjzmp/HWvGr8Wrpj5/tLFNQOqiSI
HO/Fxvolfq0Pq7Eu27U605kCy+7+RuElvdB1+sSzrajG8OGs3qe6FLTP7HzI
7O/Bq+L/DO4eIvyv9qyfc5mCwNGR17OCesEJSbzFJ/z/tJlVF7W0E0/OUL0O
uvUhXcBXvdywDh4HD2aff9IJceq/zK7V/Zjd9vf+I+167NId/pBo3IW6j2m2
09n9uHz30/W5Wg0I3hp55w+tC3uMfjipLhsAyyZHYZFuI765bRlfcpz4l0mm
wYe0AVTaO9FZaILFNZFX/82hwdnlp7PSYg5eyfCO7bRthtzYIg+NHBoOrWvx
vnWDzP3u3EocbMHvZ5Ss/QaEzw55Kw4S/hsXU6mnTrWi3aBke1MbHU/aZ41U
XOGiW07wUMGlNnwNWNOd4MmAU4+Zyq+5PDy8+1qnbVc7/B9Mx1f8YCDMvO+q
XTQPnNnPz4t2tyNl5Z/rDyKZ2Kn/OXnNTx6W7GO3f/UiXPpr/u2KCAv7fHhh
o6TfS/PGDgp96QDbf6nrSBwLiqdWfNbs4OPMWcl4WgAFaqukS22F2Pjo03Im
aeMgdg99PGgxqxPeut+CRk6w0f7+JmXr0UFsoJg9qSb7qe/nqGcZjQ1JoVUf
fpwbhLje8RvvlLpw531lBE2nG/tUhC7GE8+Mv23Xp3K1C6uuzX0y496N6Cfd
QvtDBvHpk+CoQGwXzuneTHBy6oY4c8n048BB6D2PCnq+vQvbtSIEL23pxvHn
u946xQyC6rbY9JlIFxJd+mXl1nRDzzH+sd/NQbh/9Ljg2dAJFZPzR5MWdiOy
68BYwKNBGH49MdA5zcSVouoz+qQHxYLTz415D6Am67jxJRc61EpNDu+rYuF5
kd6xcWUO0oeo2T+Ku/BrZdiesx1M1KvmbTs2zIHNC32a9XzCQ/7ZFxZcBuYK
+fbufMEF98m7BzTHNri/+xqYSKfjmqnJsXlpXAQsKtqZIdMEhtAz9foCGrpm
H5/zLosDsUrBK7LMWmSViRkLX6QSPicnljwYwKYDs/dnFlZD+KGNbswjGn59
T5W+nMjBQfsKOXX1OlDq55qr19Lg1JK1MfEhB/dOOb9bF1OHJyXHN+uuIa+f
+TvnqCoHq7P3PotaVQ/tC/M+6m2gYXhHe07VBg52U8+dPlNZj39xN85RjWhI
PmOjJbSZg+xlVws3eDUgRfygxPdtNHj7vT8htZ2DFlre5vY5jTiUs/lzmBUN
b4ddlXusOAhgnfh3uaARR+9eFfKzo8HwU4zugf9/T+HZsGmdYxM+5nfYtjrQ
wDB66XLXiYNKry1Kn/80oSFUQ+yVEw3KCRpnipyJx7rdXBJ/pxm7WpJ8zXbT
YLQy4H4+8bp+/1M7zLa3IKyYLnyfvH5y5dY3j1w5SJm9ar7HmlaI+prO+Jyn
wUb9x7mWaA62p3+c3W/WDn3TjqNXGuh47m9VnErOUUbfsn6H+x2Ir3vnEziL
PP+Qizohqjycs1reITG/E+9iT0l5rmXB1SyKWvKIh5vVG66ZB5P9uZWVKGPG
Rk7csmNvpfjYtaCVfpJKRWB1S+OQWTfOUm4X5e3jQ01JYb5qCw2v6hPlU0q6
oWBSt1xEj8x9BcnNe17S4FbS++Rsfjf6fK375+jz8fqkOF3YhIZ0d4Fc+wuk
ywQjDveT+yTfTN3i006FfZednND+boyGW0yKRvMR1MBo8vKkYn2C54bLht34
2z0lf+0e////F+ly72QXUpTLmd9ku/HMP+Xw9Ro+dl9oMHtzrQvlGowc9XE2
+Htp8cv5fPhmH9zTo9UFo75tg/oUNt7dad0PoUFUu+V2aHQQr9hv0ypbyAZc
N8yIrRxE1qVur6snO5Fw321H1RU2iuYcK0raNIjHF6s8v8t34sezTDV9woF7
p4WUaU6DcE4MqdKtpkCdskA22J6NGu1Ji/Fjg7D3levdEEHB7rlrnZdosmFw
b/W9Yy6D4PpK3X66iYIShzk6K8XY8D9qX2BJ7j8dpK68aaoDVwR2cVX4LKw+
sTR4ZtkgfqiGVDe968A/jfXWauSctgyJv4n7x0fMDZ6y7fkORLd5HVx1h4XY
q54W/Rw+lGRuH3lp2QH3bzXLRCNZSMh/Ny5Yx8eTkMSFo1Id+Lyi8ALVnYWH
Podyhh/zYa7UsWSE3Q75rctexYKFha2Htl5NIc/rTg77zoN2zGzQ7ZNZxcL4
fOWe8VPEf/5dWzx1sh1pjlcMw0i3NUg0nJu3n49PAvNmfdvaDrFW71WFg0x0
Ks1zo5vx4T67bmWgTDtk+x5NFTUysZk3kWe9jo/hW77KIu1tUBx2Pi/8gnBm
0TyjSHk+hATuhysJsPC4v3dlZSkbUQLqLWt8B8D5z7RA3ZmO9W93/pz/loWM
ktgnd1ZxYLyhyl/scRdkljg/DK9iokelormVeFFEOM2M+6cDzjrjtvUNpJf3
SK2kEP8fNErPqF3SBo2HLrLSL+gQc+DeVw0jPWg5OnWvohFJxdyup+GEM3Mk
LnsFc1Bh9BVGPrW4P31Q68AOKiT3GK1RDBrArk27LNNdq7EiN9zwBunluIu3
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
bbLz
      "], {{0, 0}, {20, 2 Pi}}]}, AspectRatio -> 1, Frame -> True, 
    FrameTicks -> {{All, All}, {All, All}}, GridLinesStyle -> Directive[
      GrayLevel[0.5, 0.4]], PlotRange -> {Automatic, Automatic}, 
    PlotRange -> {All, All}],FormBox[
    FormBox[
     TemplateBox[{
       FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           GraphicsBox[{
             RasterBox[CompressedData["
1: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
              "], {{
                Rational[-15, 2], -180}, {
                Rational[15, 2], 180}}], {Antialiasing -> False, 
              AbsoluteThickness[0.1], 
              Directive[
               Opacity[0.3], 
               GrayLevel[0]], 
              LineBox[
               NCache[{{
                  Rational[15, 2], -180}, {
                  Rational[-15, 2], -180}, {
                  Rational[-15, 2], 180}, {
                  Rational[15, 2], 180}, {
                  Rational[15, 2], -180}}, {{
                 7.5, -180}, {-7.5, -180}, {-7.5, 180}, {7.5, 180}, {
                 7.5, -180}}]]}, {
              CapForm[None], {}}, 
             StyleBox[{Antialiasing -> False, 
               StyleBox[
                
                LineBox[{{7.500000000000001, -180.00000000000003`}, {
                 7.500000000000001, 179.99999999999997`}}], 
                Directive[
                 AbsoluteThickness[0.2], 
                 Opacity[0.3], 
                 GrayLevel[0]], StripOnInput -> False], 
               StyleBox[
                StyleBox[{{
                   StyleBox[
                    LineBox[{{{7.500000000000001, -103.18965517241381`}, 
                    
                    Offset[{4., 0}, {
                    7.500000000000001, -103.18965517241381`}]}, {{
                    7.500000000000001, -25.603448275862064`}, 
                    
                    Offset[{4., 0}, {
                    7.500000000000001, -25.603448275862064`}]}, {{
                    7.500000000000001, 51.98275862068964}, 
                    
                    Offset[{4., 0}, {7.500000000000001, 
                    51.98275862068964}]}, {{7.500000000000001, 
                    129.5689655172414}, 
                    
                    Offset[{4., 0}, {7.500000000000001, 
                    129.5689655172414}]}}], 
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]], StripOnInput -> False], 
                   StyleBox[
                    LineBox[{{{7.500000000000001, -165.25862068965517`}, 
                    
                    Offset[{2.5, 0.}, {
                    7.500000000000001, -165.25862068965517`}]}, {{
                    7.500000000000001, -149.74137931034485`}, 
                    Offset[{2.5, 0.}, {
                    7.500000000000001, -149.74137931034485`}]}, {{
                    7.500000000000001, -134.22413793103448`}, 
                    
                    Offset[{2.5, 0.}, {
                    7.500000000000001, -134.22413793103448`}]}, {{
                    7.500000000000001, -118.70689655172414`}, 
                    
                    Offset[{2.5, 0.}, {
                    7.500000000000001, -118.70689655172414`}]}, {{
                    7.500000000000001, -87.67241379310344}, 
                    
                    Offset[{2.5, 0.}, {
                    7.500000000000001, -87.67241379310344}]}, {{
                    7.500000000000001, -72.15517241379311}, 
                    
                    Offset[{2.5, 0.}, {
                    7.500000000000001, -72.15517241379311}]}, {{
                    7.500000000000001, -56.63793103448276}, 
                    
                    Offset[{2.5, 0.}, {
                    7.500000000000001, -56.63793103448276}]}, {{
                    7.500000000000001, -41.12068965517243}, 
                    
                    Offset[{2.5, 0.}, {
                    7.500000000000001, -41.12068965517243}]}, {{
                    7.500000000000001, -10.086206896551724`}, 
                    
                    Offset[{2.5, 0.}, {
                    7.500000000000001, -10.086206896551724`}]}, {{
                    7.500000000000001, 5.431034482758635}, 
                    
                    Offset[{2.5, 0.}, {7.500000000000001, 
                    5.431034482758635}]}, {{7.500000000000001, 
                    20.948275862068957`}, 
                    
                    Offset[{2.5, 0.}, {7.500000000000001, 
                    20.948275862068957`}]}, {{7.500000000000001, 
                    36.46551724137932}, 
                    
                    Offset[{2.5, 0.}, {7.500000000000001, 
                    36.46551724137932}]}, {{7.500000000000001, 67.5}, 
                    Offset[{2.5, 0.}, {7.500000000000001, 67.5}]}, {{
                    7.500000000000001, 83.01724137931035}, 
                    
                    Offset[{2.5, 0.}, {7.500000000000001, 
                    83.01724137931035}]}, {{7.500000000000001, 
                    98.53448275862068}, 
                    
                    Offset[{2.5, 0.}, {7.500000000000001, 
                    98.53448275862068}]}, {{7.500000000000001, 
                    114.05172413793103`}, 
                    
                    Offset[{2.5, 0.}, {7.500000000000001, 
                    114.05172413793103`}]}, {{7.500000000000001, 
                    145.08620689655174`}, 
                    Offset[{2.5, 0.}, {7.500000000000001, 
                    145.08620689655174`}]}, {{7.500000000000001, 
                    160.60344827586206`}, 
                    
                    Offset[{2.5, 0.}, {7.500000000000001, 
                    160.60344827586206`}]}, {{7.500000000000001, 
                    176.12068965517238`}, 
                    
                    Offset[{2.5, 0.}, {7.500000000000001, 
                    176.12068965517238`}]}}], 
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4], 
                    Opacity[0.3]], StripOnInput -> False]}, 
                  StyleBox[
                   StyleBox[{{
                    StyleBox[{
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox["\"0.01\"", 0.01, AutoDelete -> True], 
                    NumberForm[#, {
                    DirectedInfinity[1], 2}]& ], TraditionalForm], 
                    
                    Offset[{7., 0.}, {
                    7.500000000000001, -103.18965517241381`}], {-1, 0.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox["\"0.02\"", 0.02, AutoDelete -> True], 
                    NumberForm[#, {
                    DirectedInfinity[1], 2}]& ], TraditionalForm], 
                    
                    Offset[{7., 0.}, {
                    7.500000000000001, -25.603448275862064`}], {-1, 0.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox["\"0.03\"", 0.03, AutoDelete -> True], 
                    NumberForm[#, {
                    DirectedInfinity[1], 2}]& ], TraditionalForm], 
                    
                    Offset[{7., 0.}, {7.500000000000001, 
                    51.98275862068964}], {-1, 0.}, Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox["\"0.04\"", 0.04, AutoDelete -> True], 
                    NumberForm[#, {
                    DirectedInfinity[1], 2}]& ], TraditionalForm], 
                    
                    Offset[{7., 0.}, {7.500000000000001, 
                    129.5689655172414}], {-1, 0.}, Automatic, {1, 0}]}, 
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]], {
                    Directive[
                    Opacity[1]], 
                    Directive[
                    Opacity[1]]}, StripOnInput -> False], 
                    
                    StyleBox[{{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}}, 
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4], 
                    Opacity[0.3]], {
                    Directive[
                    Opacity[1]], 
                    Directive[
                    Opacity[1]]}, StripOnInput -> False]}, {}}, {
                    Directive[
                    Opacity[1]], 
                    Directive[
                    Opacity[1]]}, StripOnInput -> False], "GraphicsLabel", 
                   StripOnInput -> False]}, "GraphicsTicks", StripOnInput -> 
                 False], {
                 Directive[
                  AbsoluteThickness[0.2], 
                  GrayLevel[0.4]], 
                 Directive[
                  AbsoluteThickness[0.2], 
                  GrayLevel[0.4], 
                  Opacity[0.3]]}, StripOnInput -> False]}, "GraphicsAxes", 
              StripOnInput -> False]}, PlotRangePadding -> Scaled[0.02], 
            PlotRange -> All, Frame -> True, 
            FrameTicks -> {{False, False}, {True, False}}, FrameStyle -> 
            Opacity[0], FrameTicksStyle -> Opacity[0], 
            ImageSize -> {Automatic, 360}, BaseStyle -> {}], Alignment -> 
           Left, AppearanceElements -> None, ImageMargins -> {{5, 5}, {5, 5}},
            ImageSizeAction -> "ResizeToFit"], LineIndent -> 0, StripOnInput -> 
          False], {FontFamily -> "Arial"}, Background -> Automatic, 
         StripOnInput -> False], TraditionalForm]}, "BarLegend", 
      DisplayFunction -> (#& ), 
      InterpretationFunction :> (RowBox[{"BarLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{
                 RowBox[{"Blend", "[", 
                   RowBox[{"\"M10DefaultDensityGradient\"", ",", "#1"}], 
                   "]"}], "&"}], ",", 
               RowBox[{"{", 
                 RowBox[{"0.000057737515`", ",", "0.0465173`"}], "}"}]}], 
             "}"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
           RowBox[{"LegendMarkerSize", "\[Rule]", "360"}], ",", 
           RowBox[{"Charting`TickSide", "\[Rule]", "Right"}], ",", 
           RowBox[{"ColorFunctionScaling", "\[Rule]", "True"}]}], "]"}]& )], 
     TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.784396961983285*^9, 3.784396967964322*^9}, {
   3.7843970190420675`*^9, 3.7843970338813796`*^9}, 3.7843970747670355`*^9},
 CellLabel->"Out[34]=",ExpressionUUID->"93bd473e-786f-4b5e-95e1-833123089c14"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ReliefPlot", "[", 
  RowBox[{
   RowBox[{"Transpose", "@", "gammaw20"}], ",", 
   RowBox[{"DataRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", "20"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", 
        RowBox[{"2", "\[Pi]"}]}], "}"}]}], "}"}]}], ",", 
   RowBox[{"AspectRatio", "\[Rule]", "1"}], ",", 
   RowBox[{"FrameTicks", "\[Rule]", "All"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"Epilog", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"First", "@", "fig1"}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.78439997704935*^9, 3.7843999777255745`*^9}, {
  3.7844000836303244`*^9, 3.7844000882629347`*^9}},
 CellLabel->"In[89]:=",ExpressionUUID->"a032ee97-8f2a-4885-b4d4-5053e2dc06e0"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{
     RasterBox[CompressedData["
1:eJxEmnkwle///6m0SCKSJHuRJVpsKc9EQkIqaaWQCKWStWil9JZQlDbZWhQt
IqJFEoWU41jO4ewLx1kSyfq7PzO/me8fZsyrM9ft3Nd1PZ6P50zaB496BkyV
kpJa+f9//vf7igfaWXM4bDyTKct7Lc9AZZt/vLleN/oVGqJ9Z3Dx82DD5iMn
GTA8+4235gcFr5Jjx45r89BO+thtT2bgy+M4T/nzXZBa2VSlv5qPD9ODMu0s
mdBlhR1ctK4TljPWNZ5GL05HK8mEZzBhSNtd8WiiHZuPDGQm2/dBqOnFYQuZ
cFr8Z7irjoxAu0u6sesFSF+p1fDWkYVuJpVfldWGa1vUl1y06EeCRaSK7B0W
3hqc+2MbTsJZjZ7vgiVC/N4Zc3ZIyMJz1dv1Nltb8eKk44e5L4RQn0y7POrA
RtOWvIt5hq3Qkn76ZPVPIRJ49JC0e2ycYR6aXSdHwvXPbvdO/haife5yBn2Q
jRapftO1fBLulqbPYSuK8M84uERuMwfx35W13T+0gTtLTueWmQg5vPf2q+9x
8CGFDZc0MgqWDr/OcRNhxu866ygRBw8ehX2N8GlH1jv7Y3NCRDCqUDEdsuUi
4VPa9AUGHTAxV9vNTxLh7LHVlPqrXFRkMulHBR1IVIuuXp8vQkRp2IRcBxfJ
2yLLqos6YaKqsn7xRxEWaL3VJuvyEHBCMXtdUBf2PBXkJFJEaHz03s42lIdl
mSsX6+pQ8MTqg23iXxFGF94K9Srl4WJDyHAOmYIdGYsDFGeJcUOn33DlGA9B
bYwl/MtU2Ia5j5iqiCE0X3WUYcdHbrueh551N7avPt6vrSuGVXVE46lLfFyK
pVfEsrtR9vJNNN9UjBeZpzPG6/kwftdYqXytB3+X1bxOWivGz/Zf8y7I9eKB
Q+iUWYtoEDi/OSDtLIais9xuFbdelHcolDmH0rDVXrhwxw4xYpYOZ71P6UWp
4yHnPdU0uBtYH754QIy1Z+JwpakX9+zSIjfL08HJ+5uTHiqGeAWY8XP6kP8s
YnLpPjr+HTEdSYgWY5f25t2PN/fhgFri039P6JhYvvu620UxZB0neuQv90Ff
DSeb/tJREBQVPZ4qhszNBqPy2j4Upk65W2zPAONu75uUO2Jcr/17okhaABlV
jbKCFAY0Fos0pj4Sg3tngdvvtQIUim4/fNfOwJDlvuw9r8Sw2FwgnxopQN+a
o1X/tJlYqOz9J6tajAxVx+TkFwIoNp1rDQhmItD+ZmdlvRjLeg/p9/YKcLZs
Qn/mSyZKljoq17aKUXllaOkL3X7UiM0ecYeZyE4c2l7aI4ZtkMFJ9p5+KMnr
kmXBgv+aqyI/Yj7t8rRqo9x+xDhZclbVssC9/9r5X7cYEZIoz15+P8Rr7q0s
dWEjNC9bLYOYn80Uzhs1FULifc+V3cSGf3zqotXE3LpKYukXIcSctbNTm7Zy
UHy6daSdKoZSb9Y9/Qohnp6Y+TnmFweinW67zxHzmOMVTa4TQrhI7102sI2L
Pb1x46bE/M/uVYZkOxFMC91Orv/FxWkLo2o6RYxRky69bxdEIJHorke28jC6
PmJtJjGPnjMWaVwngm2N48nYpv+bJzWQej5NEyOKXtzJcOGjdrS+1JjJhtOh
uqk75BjYPuWHLbS6sem/sk+fp3LBzfu9kXyCAeHAv4sr2ik47Sn6PU2DB89p
d4YriH2KXPbC9cyNLjQ7eVBfrOAj42CvwdAaJmxO1R0o8O6EonRRWZFtL/gh
l1ddvs3EHvcWZ1mdDrTdnbNG7NCHP0vaTE//ZWKJxnXHPgkZzWHnTl51EMB4
zg9HxlYWPqcPGh/92oZf++SHHq7rh2r8Bvmmxyw4T/nPOzefhGoLFvugmRDH
9rsP7ppkgVzBWZpwuRUW/50m7WoTQonty37sxQY5b8tddYJX+ZXfNrqMCpEU
qZTc8ZKNO5/P++XKk1BYoDLdWFOE6ctdQqvlOLgEw7bifhLWR1i9UNkgguuF
X81R/hxsiqRtOFfXhkHpbwxNfxGeHcvYYVDBQX5FyvCeO2QM58XJ7LkoQm4I
K7pvDhcuLjsHToe0Q5t06n4HwZ+45bN8eny4MJ4f16pv1YEXCa/MntaKoDR2
4JRmCRcvHgZMz5zswNWuwAtUlghzyEGnaie4mOAeXjq9phNG6277VUuLUfpe
ZR9/Mw+J2ZF9Ree6kPu8srteQYzTBh5hOZk8mM7KaXlvS0H8JdWBG5rEvldF
2kxh8DDtsHD86F8KRtKbW5cuF2NGW2KDhhEfjAhReF8RFR5PFhonEJzxqK28
MvMEH24fTvbu9elGuX+ma76LGJaKvSXNb/lYF3zIWyDfg6trXHRueYsRnJCm
fX6Sj0jjnaTqyh5MaNVZ7z8kxsWEFSFmDr14ePuq7ehKGvy2bBINnRBD4/Vf
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
fnZ57lmiGx9crd40PkvDf0EJx/KO8yHXoDfwOqAHHptN70400XBCa6pfPIOP
D40VNz60d8N2o6yp1C0ayia3/BHp5aMy2Gndwd3dWLqB68V2puGT8yqPB0w+
+h/8V3S8k4S4QNvtmmtpCBuqeiz0hOCw1+1Vaz1I6KK4CxWOUrHnx8mi4ct8
mJby1y0SJhHzMlhOqIboMpJVvaQ1H4dyLSNVDnRhX7za0aFrVNz5w+dsV+Pj
pfN97pXMTvTobpSSOU4FKYB0ZT3hmZYX7+Xu/9OBilte/IPbqGhJOJKdx+VB
PCyrM9ujA7sfSyQcWkLFkGPtxdD3PBj+NHvWRGlHv/p/KQOjFPT2r7GMyuMh
VmPnRlHbdlDFo+b0tVFwfZmmzvV4HrqEu7pLqW04vv3L8umnFKS4Pqz09SPO
LXNkp7pnG7zDBsfXJVMQJp9TOo/wqLtf1/4e+tUK3b0Xtm8NIjpRlPJVh/Ao
7qJeknNqK/5uPflx+igF3qFHl9MJj7LTOvVlmU4r/mzJ/HlsLwW0ojc76YRH
kXbsFMmgt0Bv535ZA8KjVnw36l4lQvj8+tjcuNgWlKcnxgUTHhVK/+ga95UL
189l50P0WnCYrF/3j/Con6Vr3eYPcnFgh1KG3JdmzNrOcyz/Tka/gmBRfDcX
iaUdVlkPm2Go6F95YICMD5S1t2zquHj6zX+at5OPgxLar1eXcRDR46MuwmCA
/vfPEotwHkqidO6dPMvB6En9Oa00Jrz06t9+rObii2lHzp6tHMwsfbV2/SAL
8oFrLDZ8GsQJR3E9HnsAnyt7OX5f2SjMmnp/VXIQv+8IbQmwGEB1nr3VRcKn
yGWx+26qc3ArPVfuZRUb5SPFG37f4SAwM9HhQTAbyl0ZkXaEF5lt9h2w1xyE
cuappV0xTKjMsVQf9WWhqZyb+qR5EPhGX7D2Eh2s1wVH9F4x8SK8t1nEm4vR
0Illxo5UWB8dNV84y0DU6NnrXhI8LOXc0ZdRJKNgdvOIhT4D44mGdl3VPNj+
Veuu7+pF+HDLuRX/0aH2kuWreYrY/y3fLpT5d4OfqOm8LpEGl5qw0+lzBUhe
ZJqhy+pEdtDO5DJ/KtQjlD23SBOekG7+S+RlK6I4x7tq91HQXifO/kfMoxP1
JUvou5pQwd5i6ksn4/Dqj1Sll4TviUWuOU140TOXzRtft/bDeNXWuW/6BxFY
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
JefUvEG0zZ3sexfHxwT18JBJbhcEanGmGpMDMBudlr7mAR9Sdnu7iglf+tH1
mb5NOACVxa2nb6byMVuF0rNInoSCG7EFrJYBwpf1vlU84cNrfZLcZSsS5BPl
kvivBxCkmXaYlc1HtKRY/VAgCV8P2f12Sx9A26bgZEE+H5SJzR1+mSRYS+45
tv3mAHqow6/oRXxYZPzok+8m4c1076D8wAFcTPTLrHrNR4NK5E6ueDdW/Ex2
u3ZoADXndaZnvOdjmu2Sml7Dbiyfd6u2dfsA5Mt6+kIr+EidtDcxONSNx+qw
izEZwILbNGOHGj4233in/CmauB8q90p/UiNed17FXvVGPrbV/1md9YbwILki
vWNyAzgcFpb5u5VY39hGvojXjcJ77YFhE/0o2DljflcXH0ZePyWiZQgf9r7z
QGygH8dYVwILqcS6C4NHkghPlvTLMh+j9GMjh+x+j8WHqOH0W+XDZIxPBmfu
q+3Hp4GtKy7z+Kgq3lGvSPi264bQneol/bjAtJI820vsi5PSu6KLyTC4tnb9
/qf9WDPS8OPMEHH9Fz+ZHkUnQy9bufxXfD8cDiYKLwwT962G01FpMQriqlwk
J671Y/5qv1fxo3yc7dB9uVSbgpa7u757BPajOO8Uu+QPHzqJM2Prd1HAePYq
RvdoP/4cOTIo+MeHX7tW0Eyi9++/2PdvzK8f9r4XZnguFCCu16mzvpiCw9YL
L1veEmHo3dDnboJLh8nLm9bnsEG5HZr2TK4XtvmPDnwT8vDIsnRQn+hB3qfi
S2tje/FmzdXzcdP5iMlh2UoPMPG5YKhIZvb/83fpiu7lfDzymlz6bQ4T+ukN
4buu9WHTit8pHQQHqOlM9tf1DCR+u3FC/VcftBveznrsxgetTEVO2YeO0+er
KW+8++FXFzWx/zwfNa4Pxs89ooEZWdhgQO1HR/o3feW7fEy2iRfPJFOxXoI6
/bXVALTEP+z5nsvH6mlSF5vlqSjTsR4KyB/Ax+Dfo+Of+Oipz/csdaCAE6aT
d1thEElXqvU30/hYGL3yQW0CGbQW511654j9lXzytegrH5mSkWu4rG54l3z7
FEAZhFLB8atfpwsw7O3oMabdDZvNrQXXTIbwJOaAh/8iAV7cPDvwI5gEkozG
yUvxQzhknXMwcJUAnbcLjMtbukAauRob/mUI/3RumM/eLICCIH0l1LugXG6+
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
kKAsNtXsXAcX/w9D6Pso
      "], {{0, 0}, {20, 2 Pi}}]}, AspectRatio -> 1, Epilog -> {{
       GraphicsComplexBox[CompressedData["
1:eJxFegk4VO/7/iyWIUpSY1/GvpsZiUrvo5QtS1JKQlRESkgppOIjJVlSpJVE
tKEspU1ps5SKUghlV1Fmt/yP851f/7lc5rqvOee82/M+9/3c59Xw3+2+jUQg
EKawfzPf//uYg8SX8v6mMBaq1O3odhtngry+0pErESwkPSGiavKXCZsCKob7
Mdy0JoY6+ocJ9/JzBWwMp2VXMrX6mNBK2m+lso+FVDLvT+V+ZULtREhPYTQL
zdub3ubUyoQJw7sprAMspEHfHWjfwIQFIu2fQ2JZ6IZbQf3s50yI6fSzjDzE
Qr1PiNUXq5mQEH4uXPIIC5W91sndWcaE+OtSkm1HWSjb6lzGfzeYUJG1QcY5
EWtP5nnSwHkmaD4nalgks9AK/86mtGwm/JR5TXM+zkJ2zVlbyFlM0PkTfZJx
goU47ocW6Mcz4fXNwdnRaSz0kZ9FuhfHhJt2i4M/Y1h2ac2qxFgmnPR2/aCV
zkI9Io/93+9hgsvjeXT10yyk/HIP9scE7twsWU0M51mc0ZHezoShlYvUdc6y
0LZMZ4u2rRgesbPci2HFyyFjPgFMWOF5r6cVw9VbpWRzXZig/PDORYsLLMQ2
FA2edGTC6jJrNYOLLLSjMLozeRUTCOvcTNwusdDGRg9bk0VMiFXU8fPIZ6Gk
5zUXNOhMCOXeOTl0lYVcQhf3F+szYazYYX3PNRYy3+3W8EKNCVuDJ5IPXWch
+c2RzSupTAh72bjkVQkL1cYotz6VYkKA2Iruk7dYSIwmUb2VwoQ8/2mbqtss
dJ010yEGoLNG9OtlLLS80dVIk82Ao+ukui7eZaFb/eFxlDEGuM7JLZm+x0Kx
Jc8+N/5mgEHRz28eFSy0OPW7Zep3BtSIUIfuVLPQ/aFjzPI2BlRs4RzdUMNC
KUULlRvfM0Bg9at/ySMWqp9Z3tcMWHpzl9eDJyykL+lyOKCWAbOnpEMf12Lr
m7/4xNN7WPtHGnSXvWAh78ful1tvM8Ciwiqr7yXWv/60fQolDHhgkpNq/pqF
tEaHB4qzGcDQyLb0bmKhn56S2BIz4GznXTWVtyx06oWDTksmA+5+fyBThWEL
rb6fUskMuFfvoFT7noX6vd9UP4hnQNWwyCmVFiz+tm9nn4lhQLykscCxlYXi
Rp+Kq2GYO5I4JxTDkrtPBR87yIAwlw/UbAy7yqhY+21jgMvng4Wj7Sw0Jzl6
yQp/Bmy833expYOFfLQvvvH0YYDsRfGDnE4W+u1dGmHqwoDvR66ggu8sdBnf
IAywG2Xe2dCLzYfEdlslGwZsfu79IrIfW+9vfcUiixhwZfTxz6AhFqLfH8g7
YcKAS2L5rN4RFjJ+szrjvSYDSuc8LZIZZaFj/OK/39QY0KPq375kDFv/memT
Y8DDfmSRM85CZueqabUUBkzUmtHUuSxUILHbLEaMAQUS88aaMLx2eGYC6RD2
q+HEmgkWGrka210yRoeID+wg6jQLOSTC5wWDdKggiX8sI7LRj6NzlnG76MB/
bsyji7DRprCPI7lf6GB1OjNBVYyNjp9/6nu1ng6JfT53KyXZaC++oejw/rEq
W1mKjUZkDq7PeEaH2uncKwul2YicMhaldYsObw4Ybeqcx0Zi9+IK4CYdZm/Z
N60tx0blDz3NTt2gw59wqZ/eGK6qf3lj+hodaPLsEcUFbORy2AuLGDqcmfzd
zJRnI/fnC1aezqJD/vri/mwlNjo7s10z6XCVZ1zioIy1z5AazUyjw66AwjoT
FTZas1btyOU4OljHuX/ro7GR3ky4RNNhy47S8hQtNlKwWLJmPJwO0zes1Ap0
2Eh2QnVXeSAdlpxSzF9pwEbVM931pcMXF9vODiM2+j7VrLtqHR1008pEwIyN
MtgNSo1udGCZSPnfo7ORI3Vmw2Ljcaves2EhG2VmrY/6ZYX1//OiEEsrNqK3
0IqSFtGhKNiHR17MRl9vyxWxDOmwbaxF96s1G8lMMdbJa9JhKluz/R2wUczO
VqVKBTqozxp0ZK1go532DV8VZOnQnX1lPHkV9nyV64scpOgwsL335wF7Nup+
u+RVq8AMNMLX2c52YaPJrpkFNQObdXZ0O1c2OuUD9MMsM1ijn9Fs4cZGq276
6rsNm4GXKu9T2Vo22rwxc3VYtxmctO13lPdkoyW9664+6TSDygm/ONENbJQ6
sx1m8HiSlA6G/XQTa3o7zGBe0uflazAsru1UJPHKDNjvuxaO+LKRmuzfqP+e
m0HtM1k1nS1sRFSOInc9NoMoxwnLV/5sNK8lgeJVagakj7NDewPZ6E7xzMcM
cptctjgEs5HujqWqr6+YQXZer2dwKBv9d3x9W+k5MwgTJ3qO7WYjG5wwzCDc
7dmpAxFYPJmFLfZPxNr78o13Zh8bKRWWb5ibYAYJ24NPyexno3DpA86Xj5pB
+rfkeCsMv8dm82+UGbjqvUKdMWz04OMF+YOhZpCqNivFIZ6NSGItuX7bzMD2
qKb+8qNsFDCTjjebgZT7hSnn/9jo6o349JH1ZvDonOdY1jE2mj4uazDbzgym
dzwai05lo3GpmQRiBif+qjkPnmKjjc8iPm8DM1DZ7z7OSmOjpVj0OluYwUt3
/VcPT2P4hX7oLmMz4IZ9LpqfzUY5SjEH+vXNQDYykBOcw0aJM+GIYfdh39UX
MWwf6Xy2UM8MjEpWrfmB4bFrilci5plBRnPpDv4VNlqA7eajc8yA5b75enw+
Gy20rj+oJ2kGl9+IeaUUsFGZ1fPaOXxT2E27vuhiMbbf8HgwBbnP70ajb7JR
37jrdf1PpvCypFg0qJSNrJfb5Nk3moJ1m2L2+nI2Cpuh60pTaD6n0na1ko2s
yFJXTl82hX0rDAm6NWzU9SGG+SHHFNb+av8T95CN0mfSy1FTeNZa7/ztKRuN
crWsWBGmcGFZh+PcOjZaZKr4yMHbFHzV9dktr7H+zQzXzRQeFLPlXRrYqO3n
tcbtdtjzGn/9lGnC9nv/jgWZqqZwYq1G3bZWNvo4Q+/KpiA98mZjC4Z3Log4
MahoCuvK6jR0PrHRfs9Ap7S5puB/4bXYvDY22jZDLyRTiPuuY2XYzkY/Q2li
R3+ZQP1zrwHPLjZiY9n5/oAJ7Lqr1n6im42WZWqty+8ygdBt8uusv7PRrgtq
qaa1JjCmPHrpyiAbUXFBYgJr0+46B42w0d2hQf/4POz+nKVW60ax+J3X3fMz
ywQIOtX3iH/ZyHJGPhw2gQhHJj2Kw0bSDp7BT3aYgNS5hcYHJ7D7ncbn6W41
gR1QFFo6yUZeM+nO2QTmFuj1nyVxULLIG8tiaxN4ksL/MVeMg4x2xX05pW0C
zTmBYZtmcVBM4EzCMIHYF78T/kpzkEQGM+baXBPo03FrejyHg26pxfFr+4xh
wiym016Bgy7getAYls6Jtt2J4dNfXQPu9RpD7d1RzUQMyz2ImrD/bgwNr+9v
lVHkIBNcDxpDwf6KxGVqHJTluCG8s9oYVAIHPUM0OegRrv+M4XbjFlt1bQ76
Hnjj4O1CY7CcJTfrlC4H1W+0lFFKNQazsmK1YGMO6sL1nDFoDkjQx804yDSb
4rolyBhi+gvGVS046Efdgulgf2OoHD5ofHgRB5GMZibQGA5VN42IWnPQc1qh
6UcL7HevddxKGw46u7BEvl7PGNQ+1W2VWMlBmrieMoYvX00rzBw4iB+6t3Dt
LGNIP7KgVnI1By332gFjA0ZgYGb83t6Dg2xxPWQE2d7+a0+v4yD9P+Ea/d+M
QLYm/U7Ueg5ymcUjjjUYwSJ2Sa30Jg5qwfWQEZxrXP/fJwxrL3x+L/OuEXw4
dt6AtIWDtuP6xwjkpPVHDPyx9uwtpuqLjKDzuJZIfwAHedcN52xINoLDs2vp
N0I46BiuV4xgj2TUwsldHHR7iecXryAMv1FP/xHBQYmMFnOGjxEMPz0BYVEc
lGeY3vXdwQh2plzdk3KQg67jesQIqjv9/xvB8MqEFTnaTCOIpElVehzmoLWe
iseydY2AFkSk2Sdw0BtcXxiBH0e0Qy+ZgypvKaUyKEZg4RXvvDGFg1I/eZCO
9hnCm9RikMvioBFcLxjCunZrYuIZDjrYTRrz6DCEvsLR5v1nOYhcI1rVWW8I
ebQL6rPOc1AsrhcMYXXywGKnCxw0LPaoJqPMECoUJl7ez+Og2bg+MAR3g78q
ulc56HXT0MV5Bdj9grnOa65xUNxv2r6hJENYFhLioXILiw+czw1hwx0vSX4p
B637OnvIMcAQwpmSZ6cqsf4bNG7YsNkQrvllVeZWc5Abzs+GUB8buGbBEw4q
D3V2+cEwBJOMgj5Ux0H+73/JK2sYgrhGK93oDQeF43xrCK4PBCTPJg7ar/Qi
PZliCKI/DXrIzRxkReFvOdVpAH7+UfVv27H9gvOjAZjO6T/SjuH5Fy5XrMTw
rjrHiz8wPGJ6z/dlhwFIuabGUTo4SAvnRwMQXfYeLfmBxUd/8zPNuwZAeRrB
/j3AQfdwPjSAO4ffhBcNY+v5I5Z9ItcAjM+FpVFGOUhc19RP4bgBlBjlDsqz
OKgV5zMD2GxeQnrIx/qrKGlm4GcASi6es7YSuahlkVq+6gYDUI5aFPKCzEVc
nJ8M4NFvn6cCCS7KOf2ixcvCAJ7eTTD5JM1FYS8O714kZwD9D/xCVeS5SBHn
EwMwmXPg13EFLooppV3NlzKA652JN4MUucjL1HZpLcEAog4eahdV5aLi1hmB
ow/clsHWHRpcVCVhFy39XR+CH6re1NTloiUz6eOrPtx03Gfvq489T0Msoumt
PjhVayZRjbmoQ91vf2a1PrR+J88lmXOR90x4FumD+XTG1mNW2PP1N9aZp2HP
21LwnGTDRSJ/uH9/HNeH6/Qo1fLlXBQ3Q9eR+uDWxwrsceCisl/FWbzt+qD8
ukHezIWLeKvDmgJX6sP4yFOgbOSiy6SZANSHNeM3BRleXLQ85dr7T9b6UOcg
8I3dxEWq92kxs5n60F0Ytpjsy0VmM9tdRx9eu72xkAjgIqs/illtcvqg77fJ
kRPERU+ZMwWKPkS4fs7NCuGi0wf4EW7TevDhu6WhWhgXTYGghTusB9eNv9me
ieKinhk50KYH35Jjq/7GcBH1Nkl30TM9kHXcZO+dgK1Hh1TTuSo9iEjkEyaT
sPGememwHgTs8D99PJWL/LfHLcg5pwfVb0Nnu2ZwUZbJTIGhB+ufWTkdPMtF
P37kxtMj9GD1xy3ZhMtc5GNNk10QrgdDSwubAzCsg9fHenDfLqjmEIYHGZzK
xRj2k0sUKZ35/WOnT42DHmiJRMTfuMVFdjPhsEwPBM2P3T6WcdGJG/sfLtDX
g4XLdzA23eeihSqFrbEaetBQYLGW+pCLgjB14SmpBwMtPe9S6rDxnlmcup2n
C9Ebg/aX18+MN1TfsEsXbi/1YxJauOj4jPxv1QWlvu1Lkz5z0dYj6tm7mnXh
9GgVL+oLF2WrvTw48lgXKghr2ZNdXKQ0s51qdCH1OO+IUQ8XtY09PJN7XRfU
j1YPBw1y0Y0ZOs/ThVXb9U+NDmPXh7wKCzqjC4qSV0+Vj3KR2rB7z/BhXYhQ
GrJK4nJR40y5vlsXQk0yXaunuSg2RDPsarAuDJ9xKogh8tDh4smDvl66YBNS
1tsszkP3b6jmPnDShY4f4yonpXno10x6WqILg9+CQzjzeEirbksVj6ELnnlJ
qs5UHjr034whoAvdbTG2xqo8xA7xb6HKY/01tvUQaPDQHHnRNRWzdEFvv3Ti
Xx0eklGLwRhBF4JmjXQm6/GQ38tSgzkE7HeqaFehIQ9ZEtcYnv+hAxOWj581
WvAQY2a6P+rAzuHVEvnWPFTTOsfi6kMd4DZRee9X8ZDYI3KJY7kObLKeTqM5
8dBavN7SAX5giMGctTz0Qf6456czOqD7VcZjticP/ZhJL//pgMGP8TDWZqy9
geMlNw/owImNC8u4/jyk7Nu3zjhMB+yy/OL2BvJQJG4A6cD5el2diSAe8rwP
Ou7bdMB66OZa9Z08dHdqasttBx14m3tPRG4/D52ZoVtLHdi7h/PL/xAPFSxp
7s421YEnv4237DvKQ39UPvas09QB/W39Xl3HeEgppfSA6AIdiHZrOvY6lYeq
ZsopUR0wcbhzzf0MD52z6Y7Um9SGj4K4uT9yeMge17faUMS4NjhwBbu/Md76
TZ82sBN1ZNj5PHSeZDyP9kkbHNc/bJMv4aG2mfTRrA22y+0Cb9/kIc211kmo
Thuq/mv5vLocmy/S9werSrWB+kSj6mgND/Fnwu+CNuxOb6oqqcPa/+CpcuaE
NtgYz1ql1YTh9GlaS7g2jDAt4rvasPma6W6wNvg+uaI+t5OHyqrYvrO3a8P1
XZ0M7jceOps5uv/mJm3wK6Pu+vuDh27ielgbjnXUFx0e4qGpv2uYFaANwRG7
esX/8NAyvJ7QBjct/QsKHB7y7Xr1NlNVG6bXRP15RuKjSxpHjhxV0gbZd/vL
VonwkUWOvqeegjZk2cuohIvykS+uh7VBPooddk+Gj6ILLsf+x9aCK3sujr1a
wEejuB7Wggp6d0qNCh8J+mj/5XzWgjedlIZRbT5SzPb/datZC6oIUSsO6PNR
/AwdNmlBvlSwwS8DPtJbFBGq/UoL/PSUggNM+Gi2df78WTe1YNzJIX3nUj7K
m0mnudj1Lr9/PVnJR+tulrl9zdECwl7iwd2r+KjLfeN4xjEtiLhe0ZTlykdB
jCvtdru1YHdS2dTczXz0fGa7BmrB3kcL/qzYwke2llbTdlu1sHpI/h3Hn48c
bj+OHfPWgoWz+Pq/tvORB66ntaBWO0Rt1W4+0qHslmGAFsRtios4H8VHvU24
Qwp+3aMmkbF8JPf2Z3uFhhYEX/nzeWcSH0mcf7l9pbIWqIbv+ht5nI82d/1m
nZynBeZbfn3ZcIqPxHB/Vgs0C+re+J/jI61VvnppXE34+vwMNfMiH1Uyfq5V
HdCEy4uGk4YL+egsrr81oUh27xup6xgmXpkn2aIJdj9Yh0bKsPnD9bYmrDM6
cZ9fyUdKy5pYu+5qQlBZ/tfvdXz0eL4S/06pJixofrUr7iUf9dOz2tXvaEJL
43eL4Fd85Ij7q5pw59YFhy2tfKRAKlt6OlUTOhxdFnm389EXXH9rgl/7Je+O
Xj5SL/QouBGtCZJb23sHBrD1ZfS/vhqiCUu/SQ+Fj/FRCO6XasKOFJ/LWSw+
2vdoQ7j8Gqw/b0qDHxAFaGPe86399ppAdBo+8kpMgFJw/1MTntF2Rd6ZL0Cl
hujmNh1svFSm4g5lAVLB9bkmZJRfs+BoC9CBM1UZynM1ITKtcUWfvgD9ev66
cp6IJvirmd9byRCgW7jfSYPcq+U+Jy0E6CdlaGvWAA0+BVeHzbMVoJK8thhW
Nw3IY2hNgL0A6S8yre3rpEGxzos/Wx0F6B2u12mw9Mxb/tYNAuQzWHh+/hMa
cL6V2L/1ESA/XK/TQCPx8PC1HQKkN95gSLxFg281j658DxYgxYRjpKCLNAhV
UAw9sFeAxnC/kgY7bzm3MQ4K0CzlDOttcTSQW1vp5n9CgJTHJhJ/xtCAUODV
uC1FgCz0x0ddomlwW6vSfDhVgGRxv5EGf+ZNiklfEqA9n1dcuruJBtziNdn5
+QLUL7Igi+JGA8fB29NdJQKUj+t7rD+592tWlwoQbyHfqGwxDeIkvZq1HwiQ
Oe4v0uCE1aHIrmcCpLrXGNpoNDh0qOiWb4MAVb3qD+pVoEFgofeh4fcCZODG
Dywm0MBXOSn2WK8Arcf9Qw14T18a1TYoQFcuFoe58zTAb8XmJt4Qtl7R7nve
sDXg7vwrmztHBKgPrwc04J4ZJcFpUoB2RMa/JrZpAEU/IGITeQKtX79Du6Ne
AwZLcqQ2S0+gfXg9oAE6IfkFxLkT6JDSRZ/BKg2I9nV9RlaeQBS8HtCAPxnR
d6S1J9DxU7fMxfI0QHV5xoOvxhOI8KB+nmSOBsio+Lb/NZ9A2bgfqAFe66dd
Iqyw++MXihoe0ACl3smuVOcJ9MXIXH1btAZkFWSvNHaZQLP6B8EYwx6fjwd7
Yfg+7vdpQIBTKlshYAIFSV3eIu6lAZf05hk8CZxAf003aget0YDkXUcV2nZN
ICe8ntCA5we7z0bun0DBC5mrehdrgDb5w/SFwxOoHff3NMCnZ/dC7dQJlJ/n
szvFQAMeicS88jw1gSrO55ZPK2mAfN++/pe5E0J/TwNKN+wQWF+dQHmFX6zK
RDRg/FzkvtbbEyix91Wa56Q6/H60kIwqJoT+njr0NQZcvnN/AiWMmSqWf1MH
fXqozrp3EyjpalHdz051iMw+FCXSPIHGzweaq3xVB29NhviejxNIFa8/1GGq
/lH4k4EJVFRPcGh4og5tHfdfaI1MoJhj225ee6AOPi+3tXwYnUC38XpEHQY9
0K3thEl0kK8yOJynDqfUUwfPiE8ivdzV63Znq0PmZp8E97mTCHB/Th22ZR2/
ECk/iSKiw5euTlSHnh4PLy/NSdSM1yvqcKR9+ehvs0m0jHtZkoLhV3/XM5vp
k2iKuUfrV6A6vGvbbB6GJpE/7r+pw6eCNbkDDpMo6uON+EMeWP+TXXtc3SfR
/fb7h987qoNu6u/0tk2T6A9e36jDj4tB/R4B2P0OWpr3merAVLdPbwqfRHvG
a5h8Y3XYF9904uz+SXQU99fUIU/5p6tVLNYfa2/K3XnqEFQB4Jw5iTYWOMlv
n4uNr7HGsiRrEtmEEAzsOWpAu/Ph2aobk8gR1xdqMLei5ebhskl0IHvBHPqQ
Gujkfj9OLZ9ElincjC8DanBxtdXvegzvxP0zNdi3kOnKapxEzh3OPgZlaqBS
nK3R/W4S0TRSTr0vUYMPPfSLjh8n0UncP1MDc+beIdbgJDrz5DT39gE1ONW/
vZP0exLZzc3faRymBpRoA+fX45PoFq4X1GBV5423SWJTiDZlHv5shRo86Fz7
OFZ6CiWY1vp+X6gG1nM0J+zmT6F3uH+mBjsVD7HvaE4h2xRLz+3SarDV2uKh
u9EUUghafXlkQhXCC5RKXiycQn9wPaAKGfEShftsptBYqrfBuU+qYP1Sqv6I
0xQ6sedjoE2dKhQtkfNauX4KzcP9MVUgdpTG9fhOoXwnXoBfnir4+Lm0zA6Z
Qrd1d/1pS1WFjmYpiedRU8gc98dUIX7n6r3cuCl0QO1b2P1QVeg1ZT7lHJ9C
xNTpuFsbVUE2SLRq+dkptB7nc1W48eNSz5OLU2hRgl7pdStVONLDDllWMoX6
otJdK7VVwX5qcvvTyim0H/fHVOGxwCVhxeMptHEpcZ+pmCqsUpYr/l4/hR41
Xro+8kcFYk+z58PnKZSD87MKzOkwTTjWhT2/3l/U+YMKtJlFrxoYmUK8+B2t
q56qQJnB7+ePuFPoPu5/qUDEc8VD2aRpdDbkRSr5igp8sKkgOs+eRiRJ0HyU
pgL9T/ojrBWmUTvOvyrQ2mGVEqM9jYbqGpgeu1WANqKVLms2jT6ltXY7blEB
Zc8uWo3VNJrC3z+qwMvDvbbLHKZRQcVXIixTAWqlxEUr92kUWpQW1MtQAfef
n5sXe00jNZxfVUByWr6xP3QadSWWjb2Uxq4/cvt5beQ0Msl7J/ufqAokHW2O
rz4wjQD3v5ShyvNk+9HMaXSCxOod6VCGz5axmbfOTqOKvStttNuUoUbhjall
7jTyx/lSGXJKj71SuT+NRkVvXb99Sxn2a4gdn8Twh2trjR/fVIY/t2s7Kx5M
oz8fOcVGV5UhOuAtYdazaaQQ+7hbJV4ZDtb/WlzVOY0ScP8La+/IHGZz9zQK
Uui7+nOjMni3ly+9OzGN7q2OCaa7K4PzwMZtoUQCFOB8qAwUjkvZGlEC3NE0
37+Vrgz2Vq17c2YTwN1mWKFfSxmOFptfLJ1HgBe436UMcV2NX1wUCfBl/aPm
SgllCEhwb/ysSoChSxe2Iq4S3Mi6NqKnQwCqs8ia/h4liHvbpCVvSoABnO+U
YK8tvB/E8OEXTZcWNyjBjpCokA+WBEA/Sl7LPFSCbEWnGE9EAEmcz5RgxbXM
7kWrCJDWXzX9+bISvDwuZVjqRIDmrc5zRbKVoGzbyw9nXAlgiPtbStAcO0A2
30yAuWF9WYpRSgDXh81qfQiwrmB3ZXWEEjTeWWHY6kuAGgkjN5VAJejX33z9
0jYC2CzLi5q/WglrsmGndDgBVuN8pQRPe3Ia2JEEKFKwsak0VgKS3dIvHvEE
uBRgmV5LUwIbn73X0hIJsAvnIyWY3c/sSzxJgDXe3rENs5RAOaOKfjqNAB5G
clHz+Yow5+YTll0OAc6JV2+pHlKERR3myR8uY+PD/TBF+PwiTol7jQBjVKly
6feK8Cb9nQXzJgHG1713DHijCO56pV2ypQQoxflFEbZGGFu6PyVAoRDvEOIr
QrxTiJOFOFqIp3w3y6okKMJixmK7uy0EGCTFWf0MVYQrEjr977oJ4OpopGTh
owh5qwNvOw4RwM/1sqyCmyLUeOQtk/mD9QfnC0UodXIJBx4BXr5XLh+3VISz
snmK86ex603mzLJlKkLrJdUzriQieCQlUxTUFYGSKrJqozQRfiZnVQTLKUJc
vZ+2ghwR/vf+RRHK9TbfZy8gQtHLS+IZAgWYZUFd2UQjArdP7sXtUQU4t+jj
Eh99IpS6Kt+41KUAOoczz0szibAI98cUwIu/x5ZkQYQ2xRrpc40KoOBKWvxp
GRG8sl3ad71QAGiYM756BRHGFAKuri1VgKeF90qvuhFh/RPaVvMSBZggZyUl
eRAhf/Gks8hpBdjrT8mvDyCC4X/ZareSFSD36WVyXDARTEP2pDgeVIC0mwl8
yUgiHMD9M6w/0otdqvYTIUHcxKc+SAFOTCl2FsYT4aSnXH9cgAIUcwnujglE
kH1rYHNnnQL8Oprp/fMkERq+OG8tsVcA9oKbg7PPEuE87q8pwJKcR8q154nY
d61k0kIF+JbKI7y+SgSD7Y72vvoKcKk7I6HqJhGab+RP7lRTAH7b3g2Ue0R4
iPtpCkBvq3bsqSVC+/uGwHJJBWiLoEWdfk6Er4VF/S8lFEBO+89tuzoihJ8u
1MsXV4DN1Rccx14QoWkjoZw/Ig9PNa821GCpct3GWtq1LnlweDDk86KXCGiS
GzX0Vh6uuUXIKP7FUqnHtbmXnsvD7/PMqtgJIki1odZfVfIQt+a79EoxEpw9
aVB3t1weVIvtJx5IkqC/fLn3YIE8ZJ/33ZawgAQE3J+Th/jntpHdGL7sFrty
ZbY8ZCRyDc/TSOCdLypRkykP5f1fa57pkOCxjfzlBcflwcv0Sr+vKQmSpa6H
XI3Fnh+4wu7hYhLQcH9OHhDL613NShLMbzl1Vz9MHgZiP4YstyPBwwHm17YA
DHcfvquxFrs/0Y1atl4eormdLWQ/Ejy78Mziq4s8qMg1Kj4NJEHk+1f6XY7y
MDfe6MnLEBJIfKwsfrNMHix9HcIJ+0mwAvf35GG6dfxgLYZDPnWUP2TIw5Zv
X3eUJmDXD+vo+JjKg3tx3Wt0jARh0s1qXvryoLZnxPZpKgl4Em9/xCrJw85j
bLueCyQo7VTUnC8rD0nwaP+jIhIQdz04JioqDxPKVU1rKklwR91vtz5RHr5M
+Vl3PSBB+OVZy1gsKtS0VuhavyaB3PYzxRm/qZDu3H9wXjMJdp6eX3KugwpD
uxyvHu8ngVNm5ryhr1QY23m79cEgCe7u2UT98oUKToFXbs8ZJsF/uJ9IBQbV
+0v6KAmyp220kt5SQarK0ETAI4FuOEQwXlIh4pVI3hZRMljfUSkqfEYFHXJR
4mJJMnzdfM9l6SMqxMcyNX/MJcP6Ey96A+9SoZi8VYKnRgaOdaPljptU2JRz
2bzagAxb2ud17s6jQoPMVOb7xWRoWWuXx8TwlWOHw+hLyJAv4fjdKJsKaaY5
3xc5kSHwu75nYToVkqF236z1ZNAqF5h8SKbC0sBVFzcEkGF2Q0mSQSIV6urS
MypCyDBtu/PDw8NUGBVDIcf3kOHNLkqpeiQVrMKmnYqOk6GyWsTfOYIK/E3H
bRamkOHIo6+eNeFU+BbStsL9JBle4/4mFRZ89+XZnyaD3pmPA4ohVJArFMuJ
PE8G9/KPgb1bqaAs/a1v33UyuBXsd/MKoILpnyOj5TfI4F+4VMp/CxXMefUJ
kqVkSBWZdUlhAxVkkvP2jdWRYUVZiCPPgwpbjx28xGgkwzI3OSm1Ndj9mVpS
Ba1kaOrpZbqtpoJiahCzpgebzxWvVoXZUyFHNdKl9CcZIh4kLaeuoALv02u1
FAEZvqgu/pJpQwWDkN9RX6ex+SI8EnuwlApNd3dOms4WgSHcb6XCnMe2Z41k
RSCKLDpNtqTCw7RLGhtVRODL0R+3nRdR4ZrR5qZHaiLAHW69tI1JBbLTthu3
TERgvzT15D1TKohW19QtWSICqXVjtXeMsevzK84vXyECy2sUipoNqGDZvXmT
sasIDG5KYWboUeE1IdEvZqMIOBa9FoxrU8Gb3LXcdLsIRBqJaXppUSF033rJ
G7tF4IDvk1PXaNj1VfEDqvtFYEmns46oOhX2HdAKPnFMBPJPtH/rVqVCnrRr
tUGaCAT66wxMq2DzFe2ZrHtWBBZE6+o0KlHBRHYoYHOxCDSdoZWuwfCnfLug
63dE4NS7uoU3FKmQO/3m2rkKETgyh95vpUAFP42zJiX1IvBfYJXFoDwW74uB
qtcsAsYOrib3MUyS7vkW0yoC84c/ulhh2H6+4YEDIyKwPgUuumDY5p3li2tj
///3xSdWyX5g///74zNP3XgnJfrv+VHb6Xu1ZUX/tU879GVzHlUU0oT96798
rbfMSBTeCvtfMqGvdZUhClTh+DxSk/RGLUX/jX+triJZZ7Xov/npyqB9oK0V
/Td/UjrOtFovUTgonN/q/tF8kxBR2Cuc//n4eUhRcBKuj+6FdAfVWNF/61d9
acSwOVn03/o64ucFReGUcP3bJ+7/lrwsCtHC+Ijtv/tibpEo8ITxcwg/XycK
X4Xx1R4h9yj1mSjsE8Zf3Zz3weN1ov/ic0+3EUu9WRSChPF7Fz+vht0vjO8N
C4/MD/8uCpHC+E9+Vbjzab8obBDuj8HDk9bnWdj8CfdPkKzExnSCGCDh/vKQ
do4vkhIDW+H+U8XPU4lBmnB/hlPfynmriMFW4f51LSwQX8EQA3fh/l5761du
joUYrBXu/22ZGQUtVmKgL8wPu3jBfz+vEvuXP3Y8nJsp4ioGCcL8km+ebS9Y
JwbVwvxzDD9PJAYNwvzkYBYOBRvEgLjyf/krI4eh8WyPGMwR5reH+PkdMdAR
5j87K8Nf44fEIEiYH3m+t+WWnxSDAmH+/IOflxGDz8L82k0dVVIuEoMAYf69
dyqCewDDfGF+1hVv9jxdJQYbhPn703npox7PxKBTmN/Jmst27GgWAxDmf2/8
vAg2fiE/zP68c2i4QwzOC/kjamClj/ug2D9+WZ08v+zBHzGoEPKPhdW7dmuu
GDgL+SmdWXsvnScGu4X8lUPXHagViMF8Ib+Nuh+XWSwrDpFC/nuBn7cQh7tC
frx+RcY1VFccRIT8mXi0+qHAUBzuCflV4Fs+79RicZgQ8u98+YO2ISvFYa+Q
n7eZJtqleIiDlJC/zfDzC+IQKuR39adZtPM+4v/4/9DrGJkTwdj1Qn3gaKOn
6BwiDvuE+iFMfWVD4j5xeCnUF9vw8wficFKoP2YVZVQ4HBWHJ0J9kvPo9yfD
NHGQF+qXc/j5APF/+gZKFtSkXRCHFKH+CbAyWZlWJA51Qn2kv+fd1Z/l4uAn
1E9vq7LeJteIQ75QX/1WjPYrfSL+T39NfTWS39kgDsNCfTZEltV9jeFzQv0W
wNZLS/8sDjJCfSeCv58Xh5VC/ZdFXvbxbZ84LBfqw6+uUweZo+KwUagfrXr/
M06aFIfm/9OXMY2P08QpEC3Un7r9H2y8lSnwTahPd+HvxzEs1K9FRq4LqjH8
f/rW5WWlTYg6BVqF+vfYCwFzpQkFjIX6uOdRp3jWQgogoX7On7v/RMIyyj99
bStevvvEKgq8FervE8nP85atpoCiUJ+fUe409VtHgQyhfv+Mv8+mwDGhvmdf
WX+rwJ/yT/9vyFy0LCuYAubC+uDPn5H05bspYCKsH/o63x17u58CRcL6QnrZ
jsHDhyiwUVh/JJ5vF3mRSoEJYX1Sx33wpSiDAn7C+mU5/j6aAh3C+iZwzW73
qKuUf/WP1rVpO6ebFKgS1kfeap2/0R3secL6qT/ogtvvagrcEtZX+4K97A49
ofyrvxr2yb1f30CBMWF9Rm6RCTR/S4EtwvotTjZ01XgLBbYL67sb+PtkCtQL
67+hk2/3WP6g/KsPGz00FaWHKLBDWD++dHrrbD1GAQ9hffltrWQHiYe1J6w/
e/D3xRJA9vtffWq/a9HKHGkJyBfWr3L4+14JKBFieSH+fz26fN4=
        "], {{{}, {}, 
          TagBox[
           TooltipBox[{
             Directive[
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[1.6]], 
             LineBox[CompressedData["
1:eJwl1mPXEIgWBeA3uyZbk227Jtu2bds12bZt27Zt227u07ofnrV/wdn7JGzQ
tkKbQAEBAb8DBwT8SREQhKAEIzghCEkoQhOGsIQjPBH4i4hEIjJRiEo0ohOD
mMQiNnGISzzik4CE/E0iEpOEpCQjOSlISSpSk4a0pCM9GchIJjKThaxkIzs5
yEkucpOHvOQjPwUoSCH+oTBFKEoxilOCkpSiNGUoSznKU4GKVKIyVahKNapT
g5rUojZ1qEs96tOAhjSiMU1oSjOa04KWtKI1bWhLO9rTgY50ojNd6Eo3utOD
nvSiN33oSz/6M4CBDGIwQxjKMIbzLyMYyShGM4axjGM8E5jIJCYzhalMYzoz
mMksZjOHucxjPgtYyCIWs4SlLGM5K1jJKlazhrWsYz0b2MgmNrOFrWxjOzvY
yS52s4e97GM/BzjIIQ5zhKMc4zgnOMkpTnOGs5zjPBe4yCUuc4WrXOM6N7jJ
LW5zh7vc4z4PeMgjHvOEpzzjOS94ySte84a3vOM9H/jIJz7zha984zs/+Mkv
fvMff44/EIEJQlCCEZwQhCQUoQlDWMIRngj8RUQiEZkoRCUa0YlBTGIRmzjE
JR7xSUBC/iYRiUlCUpKRnBSkJBWpSUNa0pGeDGQkE5nJQlaykZ0c5CQXuclD
XvKRnwIUpBD/UJgiFKUYxSlBSUpRmjKUpRzlqUBFKlGZKlSlGtWpQU1qUZs6
1KUe9WlAQxrRmCY0pRnNaUFLWtGaP+Xdlna0pwMd6URnutCVbnSnBz3pRW/6
0Jd+9GcAAxnEYIYwlGEM519GMJJRjGYMYxnHeCYwkUlMZgpTmcZ0ZjCTWcxm
DnOZx3wWsJBFLGYJS1nGclawklWsZg1rWcd6NrCRTWxmC1vZxnZ2sJNd7GYP
e9nHfg5wkEMc5ghHOcZxTnCSU5zmDGc5x3kucJFLXOYKV7nGdW5wk1vc5g53
ucd9HvCQRzzmCU95xnNe8JJXvOYNb3nHez7wkU985gtf+cZ3fvCTX/zmP/4M
fyACE4SgBCM4IQhJKEIThrCEIzwR+IuIRCIyUYhKNKITg5jEIjZxiEs84pOA
hPxNIhKThKQkIzkpSEkqUpOGtKQjPRnISCYyk4WsZCM7OchJLnKTh7zkIz8F
KEgh/qEwRShKMYpTgpKUojRlKEs5ylOBilSiMlWoSjWqU4Oa1KI2dahLPerT
gIY0ojFNaEozmtOClrSiNW1oSzva04GOdKIzXehKN7rTg570ojd96Es/+jOA
gQxiMEMYyjCG8y8jGMkoRjOGsYxjPBOYyCQmM4WpTGM6M5jJLGYzh7nMYz4L
WMgiFrOEpSxjOStYySpWs4a1rGM9G9jIJjazha1sYzs72MkudrOHvexjPwc4
yCEOc4SjHOM4JzjJKU5zhrOc4zwXuMglLnOFq1zjOje4yS1uc4e73OM+D3jI
Ix7zhKc84zkveMkrXvOGt7zjPR/4yCc+84WvfOM7P/jJr8D///v/B+VTg0I=

              "]]}, 
            RowBox[{
              RowBox[{
                RowBox[{"Cos", "[", 
                  RowBox[{
                    FractionBox["\[Pi]", "6"], "+", 
                    TagBox["\[Psi]", HoldForm]}], "]"}], "+", 
                FractionBox["10", 
                 RowBox[{
                   SqrtBox["3"], " ", 
                   TagBox["V", HoldForm]}]]}], "\[Equal]", "0"}]], 
           Annotation[#, 
            Cos[Rational[1, 6] Pi + HoldForm[$CellContext`\[Psi]]] + 
             10 3^Rational[-1, 2]/HoldForm[$CellContext`V] == 0, 
            "Tooltip"]& ]}}], {}}}, Frame -> True, 
    FrameTicks -> {{All, All}, {All, All}}, GridLinesStyle -> Directive[
      GrayLevel[0.5, 0.4]], PlotRange -> {Automatic, Automatic}, 
    PlotRange -> {All, All}],FormBox[
    FormBox[
     TemplateBox[{
       FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           GraphicsBox[{
             RasterBox[CompressedData["
1:eJxFlwmcjvUWxyV3YmZsZbtJ9i1q7q2spR9ZrrJUuLYUQiEx1iRRdmNwiySk
kEtlS8qSUYYwxjIz774/27svM7JV0r3P/zznmff9fHx4/6/3Of/fOd/zO+dt
/tqMIZPurVKlSpH+5x79j/j3mmnhO19dK0TT5fGXjj1sQ395Qb0D/5LxUFzp
/ODPZ/Br2aDX6oy0YeIr3n73zpexf4p/Zt66s/il2aFZkz+04X1Xj3dG7pXx
TMS1748xv2Dz9PuX/nzRhm3//vyb/U4ZV1+3had2OIc3T87Z0KiaHUdLq/ir
1lAwLljSwvP7OTyT6diV28MOiwjTTcG1CZdeGXDhPOqO7Hbkwjw7yovOPLt/
ioIlyvnNP266AG331rPNDtmR1a/13KpbFDww/oylw6QiHL1+1zo/akfbwhV7
RlxU8GXgVK1tT1xEXi8RyYHedEEFnV898Vx21WKMWV94s90YB+htBxXnvN8v
W1hSjH/4WmV88LEDCzp/88yIl1WMfPnbnxLbL6Fqh5UNXFcc2HQ4e+a+NSpI
7luXYZsfbfPP6k4cfmz6rntOqlgwcm+ny09dwd5zA7qs7uXEla+v2oYnVJDM
zKt4V2R3gRMx/Vv7HtI4T1cxWMg/4kTGro+63zNIQ4Opg66vG1qC5iLNSSda
NL0xbfh7Gsa2L65z/kQJbgi5bVzosVU8QMPeSP/H/te8FOdF2HEujGooMq2h
Yo+4SCm2fCpeLszVqzC8VhDtFuUff7NGGR49/Fn5nnMu2LaEmuyJaBg/bEjb
L1aX4fTFHX1/uO7CkzuPdPmtUMOWRxp9bK1hwTBVFMCNDV8teem5zzSUiXLm
WRDRKSob5Mb1Qy++ueVtjfVaWa8bQ449rBOmoTcBZEVtCuzGYT27T3fUsHBp
zsD/ZtqwU4961+pG3fMnjq3N0HBk1M3j7jwb182D3CuryvySikTOj21rZ9lR
NO/U5w/meFCiZznnRxWt9er1XmPn+nqQQ/VU8arAN8vB+fBgvfZr07IZKtfT
AR1aXbAHqfjP3Vo+r+KqCJPlREPXldtDVQ8G69WY00pF9bGbB9bPd+Lra6Ix
vNivU/DLXwp6dhIXdDHPXmQTMArmZ7XSU+1CqU77oqleTKvx+xdvfKfgkBz9
+HC2G5OeCryw9hMvLtURghXEjh68N5zvxm9DRaK96CDSPllBi3VzZzau6UE+
9asXeU0npEY/q2D0RPEAD/evj7lSsEGnaFlNL6i8A3x4Tqfj7i0ZxRTHi34i
zfN9+EqndXCpjGrh/HbJmj6Q3N0+VCewZDxdMGRT83U+vCXClvkwuc+UGRXL
ZebIjyr08jN3Mg6QP/ixUXz8qB9thv5NJ1pGiDoygLbieqP9WDHaclKtJ+Nh
Aj0AasOVfgTH77A/WS6h461PfBvuk7gv/OgrwhZJ7E8SFLIpP77UKXPskjBR
2MZKie8VQDVKvIT3j/bUrUOCiKqnChMWC8OSsG1ny+N/3idj21lhZAGQbTwu
4fjajIoG/WX2gQDnXYJd9PkqGWd0qtYXBtgPAviV/EqGLlZPdQCndXreXRpA
rRcObpxUXeH76Pfo/9N7TboG8Ej3j4oX91cgqPW1ktBzhDAYP8jOVil8Twl/
Tbqtjd/hB8m/oHD/SCgQNjrcj0V3uudeqa7y/SXuHz+2ijbur4LsVddP4X7y
Gb67WuV+kPCHTmFstg9WvQpNilS8I2xsn4RjAr92PqNPamisV8LbdGGda2p8
jfmW0Fng86HX8JPVGudBwg2P44PZ/bwgXIo0fCHkZsg4Epv9ff07HsNnagSZ
Vxmzfq8dPXrQg/cgGimIJ+gl43FKiMfwn9VB/lyGXqQX/2zkwQ/17xSnioKV
/B1srS3dftlt+FJmCJS+eTKmPylIcHN/h7hvZHTsLSad2/CrvBDzJEN00/K4
i+dJCKmFIrCMr8eJi7vQR/hYZhhdV4sBI4NkDnNhnLCH58MQLjQtLLPPuoz6
5IVRLGz1rgxqt1NOnpdh1Bc2WU8BjbdZTsP3MiM8nxRMpMBOlPZxVtx4PsLz
RYFO8Uo910gKP1wT4XmtgMblfxyo3nj7q+2LIyCbma5gp95dXfs6ICjonRUF
2cZyBeMJGDt60QCO4qqwga0Kmomxc8AOGv9roqC2PqwgoLt+0wl2vHO+vY5Y
tJLT7XV3F5xuaDd8NSsGo+0UjGkmnmxjP4rhlsDqpoLGBKQNZOtrYuyjKtxi
rehkQ1zgUhwDpbmFik9FemNW3Cd8ODvOe4M5p60Q3ZczMI4mVGCV56jVeG5+
HK/TS+W5beV7xUFjdqGKjSuX685kMXw7O4E/Fk3VNxcVQ3UXnDvTgo23MvTI
CfShxUnF/UJuGwu+FX6en4CeZL2gKkq+EwUsw+VL4pUAjUOHChpL68v4fQIz
BW4VKvtJGYz1K8HzUwO1ey0LEsRjwuCzpQay40EWzmOC547GXFvYl5NGnBEa
38PCz00acXM1UDtlW5m/JPeBxnWy8lxJcl9oPF+taE8DNmnELdCYYyv3Lcd1
mHuAje/HcSs07mNz3+S4mUGezzb2O47bMogJxJeN5zrH7RHkOtrxBtXV1Bvk
59pZZxJ0/dwgjtOcsfNeYuoNoiMJtnM/mHqDIJvOcHDdkqDHFARxPy0MDt6r
TL1BLKPvO/j7HLciCGqnsw5Qmg+YekOYSnuxEyT3mKk3BC81qJP9l+P2COEF
AszJ9TT1hkDXK3TyPcz6hozyVnUxV8lKnzP8w8VcmXpDILkfuJgrs74h5trF
XKU4Tojfs39mpri+IVA7wc1cpfjzMM8lN3OVYr1hkE2fcjNXKa5vGLSG3nUz
Vxx3RJg/9/DfHDc3zH3s4fpzXN13W4r166SHueK4u8LYJGxan0cGVxy3IMxz
2MtcpeAkvWHmxsvxUlzfMBI0H7z8uak3grEk2MtcmXojIJvu5mOuUlzfCPrw
XmZwZeqNMB8+vjfHzY3gEWEbt33Mlak3AmrfLn7+nqk3wvPQz1yZeiNYQvuv
n7ky6xsB/bebfn5v6o2AytspwFyZeqNwizTPCTBXpt4oSO6RAHNl1jcKCns9
wByVs94oSP7fJX5uOec7yn4vMVflrDdq7COjJOaqnPVGec+VmKty1hvFYtF4
myXmiuM6opwvie/HcSuixlx1mvsnx82MgWz7tsRccdyWMZANN5SZK47bI4bt
VBeZuSo3uBoRY90y6zT1xir3F4MrU28MZGObZObK1BvjOsrMVTn7VQzGz2+Z
uTL1xri+Mn+/nOsbw2PCBuorzJWpN851VzhPpt648bttmMJcmXrjzIPCXJn1
jYPkbFT4Hhw3N877vsJcmXrjWCHSbFGYK1NvnPlRmCuzvnFjbj+gMlcVHCfO
9U6fG/WLc77T58RHowTrT58b/CX4Hulz43dNgjnTKs+NuiW43ulzY79KVM5V
89zwqQT/vkmfG/t3gvkOVp4b+2QCr1DB0+fm3DbqnT6fTQVMsp+lz2kcjEsa
dakXqjw35kESJPel9DmN+x1J5ix9Xsjzisp9KX3egH5YJivngHluzL8U91X6
3Ph9lGK+0+fG3E1xnPT56+zTxvsI/g9eITvj
              "], {{
                Rational[-15, 2], -180}, {
                Rational[15, 2], 180}}], {Antialiasing -> False, 
              AbsoluteThickness[0.1], 
              Directive[
               Opacity[0.3], 
               GrayLevel[0]], 
              LineBox[
               NCache[{{
                  Rational[15, 2], -180}, {
                  Rational[-15, 2], -180}, {
                  Rational[-15, 2], 180}, {
                  Rational[15, 2], 180}, {
                  Rational[15, 2], -180}}, {{
                 7.5, -180}, {-7.5, -180}, {-7.5, 180}, {7.5, 180}, {
                 7.5, -180}}]]}, {
              CapForm[None], {}}, 
             StyleBox[{Antialiasing -> False, 
               StyleBox[
                LineBox[{{7.5, -180.}, {7.5, 180.}}], 
                Directive[
                 AbsoluteThickness[0.2], 
                 Opacity[0.3], 
                 GrayLevel[0]], StripOnInput -> False], 
               StyleBox[
                StyleBox[{{
                   StyleBox[
                    LineBox[{{{7.5, -180.}, 
                    Offset[{4., 0}, {7.5, -180.}]}, {{
                    7.5, -106.22950819672133`}, 
                    Offset[{4., 0}, {7.5, -106.22950819672133`}]}, {{
                    7.5, -32.45901639344263}, 
                    Offset[{4., 0}, {7.5, -32.45901639344263}]}, {{7.5, 
                    41.31147540983602}, 
                    Offset[{4., 0}, {7.5, 41.31147540983602}]}, {{7.5, 
                    115.08196721311474`}, 
                    Offset[{4., 0}, {7.5, 115.08196721311474`}]}}], 
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]], StripOnInput -> False], 
                   StyleBox[
                    LineBox[{{{7.5, -165.24590163934425`}, 
                    Offset[{2.5, 0.}, {7.5, -165.24590163934425`}]}, {{
                    7.5, -150.49180327868854`}, 
                    Offset[{2.5, 0.}, {7.5, -150.49180327868854`}]}, {{
                    7.5, -135.7377049180328}, 
                    Offset[{2.5, 0.}, {7.5, -135.7377049180328}]}, {{
                    7.5, -120.98360655737704`}, 
                    Offset[{2.5, 0.}, {7.5, -120.98360655737704`}]}, {{
                    7.5, -91.47540983606557}, 
                    Offset[{2.5, 0.}, {7.5, -91.47540983606557}]}, {{
                    7.5, -76.72131147540983}, 
                    Offset[{2.5, 0.}, {7.5, -76.72131147540983}]}, {{
                    7.5, -61.96721311475411}, 
                    Offset[{2.5, 0.}, {7.5, -61.96721311475411}]}, {{
                    7.5, -47.21311475409838}, 
                    Offset[{2.5, 0.}, {7.5, -47.21311475409838}]}, {{
                    7.5, -17.7049180327869}, 
                    Offset[{2.5, 0.}, {7.5, -17.7049180327869}]}, {{
                    7.5, -2.95081967213115}, 
                    Offset[{2.5, 0.}, {7.5, -2.95081967213115}]}, {{7.5, 
                    11.803278688524562`}, 
                    Offset[{2.5, 0.}, {7.5, 11.803278688524562`}]}, {{7.5, 
                    26.55737704918031}, 
                    Offset[{2.5, 0.}, {7.5, 26.55737704918031}]}, {{7.5, 
                    56.065573770491774`}, 
                    Offset[{2.5, 0.}, {7.5, 56.065573770491774`}]}, {{7.5, 
                    70.81967213114753}, 
                    Offset[{2.5, 0.}, {7.5, 70.81967213114753}]}, {{7.5, 
                    85.57377049180323}, 
                    Offset[{2.5, 0.}, {7.5, 85.57377049180323}]}, {{7.5, 
                    100.32786885245898`}, 
                    Offset[{2.5, 0.}, {7.5, 100.32786885245898`}]}, {{7.5, 
                    129.83606557377047`}, 
                    Offset[{2.5, 0.}, {7.5, 129.83606557377047`}]}, {{7.5, 
                    144.5901639344262}, 
                    Offset[{2.5, 0.}, {7.5, 144.5901639344262}]}, {{7.5, 
                    159.3442622950819}, 
                    Offset[{2.5, 0.}, {7.5, 159.3442622950819}]}, {{7.5, 
                    174.09836065573768`}, 
                    Offset[{2.5, 0.}, {7.5, 174.09836065573768`}]}}], 
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4], 
                    Opacity[0.3]], StripOnInput -> False]}, 
                  StyleBox[
                   StyleBox[{{
                    StyleBox[{
                    InsetBox[
                    FormBox["0", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, -180.}], {-1, 0.}, Automatic, {1, 
                    0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox["\"0.01\"", 0.01, AutoDelete -> True], 
                    NumberForm[#, {
                    DirectedInfinity[1], 2}]& ], TraditionalForm], 
                    Offset[{7., 0.}, {7.5, -106.22950819672133`}], {-1, 0.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox["\"0.02\"", 0.02, AutoDelete -> True], 
                    NumberForm[#, {
                    DirectedInfinity[1], 2}]& ], TraditionalForm], 
                    Offset[{7., 0.}, {7.5, -32.45901639344263}], {-1, 0.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox["\"0.03\"", 0.03, AutoDelete -> True], 
                    NumberForm[#, {
                    DirectedInfinity[1], 2}]& ], TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 41.31147540983602}], {-1, 0.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox["\"0.04\"", 0.04, AutoDelete -> True], 
                    NumberForm[#, {
                    DirectedInfinity[1], 2}]& ], TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 115.08196721311474`}], {-1, 0.}, 
                    Automatic, {1, 0}]}, 
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]], {
                    Directive[
                    Opacity[1]], 
                    Directive[
                    Opacity[1]]}, StripOnInput -> False], 
                    
                    StyleBox[{{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}}, 
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4], 
                    Opacity[0.3]], {
                    Directive[
                    Opacity[1]], 
                    Directive[
                    Opacity[1]]}, StripOnInput -> False]}, {}}, {
                    Directive[
                    Opacity[1]], 
                    Directive[
                    Opacity[1]]}, StripOnInput -> False], "GraphicsLabel", 
                   StripOnInput -> False]}, "GraphicsTicks", StripOnInput -> 
                 False], {
                 Directive[
                  AbsoluteThickness[0.2], 
                  GrayLevel[0.4]], 
                 Directive[
                  AbsoluteThickness[0.2], 
                  GrayLevel[0.4], 
                  Opacity[0.3]]}, StripOnInput -> False]}, "GraphicsAxes", 
              StripOnInput -> False]}, PlotRangePadding -> Scaled[0.02], 
            PlotRange -> All, Frame -> True, 
            FrameTicks -> {{False, False}, {True, False}}, FrameStyle -> 
            Opacity[0], FrameTicksStyle -> Opacity[0], 
            ImageSize -> {Automatic, 360}, BaseStyle -> {}], Alignment -> 
           Left, AppearanceElements -> None, ImageMargins -> {{5, 5}, {5, 5}},
            ImageSizeAction -> "ResizeToFit"], LineIndent -> 0, StripOnInput -> 
          False], {FontFamily -> "Arial"}, Background -> Automatic, 
         StripOnInput -> False], TraditionalForm]}, "BarLegend", 
      DisplayFunction -> (#& ), 
      InterpretationFunction :> (RowBox[{"BarLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{
                 RowBox[{"Blend", "[", 
                   RowBox[{"\"M10DefaultDensityGradient\"", ",", "#1"}], 
                   "]"}], "&"}], ",", 
               RowBox[{"{", 
                 RowBox[{"0.000013826178`", ",", "0.048804621`"}], "}"}]}], 
             "}"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
           RowBox[{"LegendMarkerSize", "\[Rule]", "360"}], ",", 
           RowBox[{"Charting`TickSide", "\[Rule]", "Right"}], ",", 
           RowBox[{"ColorFunctionScaling", "\[Rule]", "True"}]}], "]"}]& )], 
     TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.7843999788814497`*^9, {3.784400089103653*^9, 3.784400116640006*^9}, 
   3.784400159035616*^9, 3.784400771708984*^9},
 CellLabel->"Out[89]=",ExpressionUUID->"cf0b7517-770f-4dce-a9f7-23f72f4819ec"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListContourPlot", "[", 
  RowBox[{
   RowBox[{"Transpose", "@", "gammaw20"}], ",", 
   RowBox[{"DataRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", "20"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", 
        RowBox[{"2", "\[Pi]"}]}], "}"}]}], "}"}]}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", 
      RowBox[{"80", 
       RowBox[{"Min", "[", "gammaw20", "]"}]}]}], "}"}]}], ",", 
   RowBox[{"ColorFunction", "\[Rule]", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"#", "\[LessEqual]", 
         RowBox[{"80", 
          RowBox[{"Min", "[", "gammaw20", "]"}]}]}], ",", "Black", ",", 
        "White"}], "]"}], "&"}], ")"}]}], ",", 
   RowBox[{"Epilog", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"First", "@", "fig1"}], " ", "}"}]}]}], 
  RowBox[{"(*", 
   RowBox[{",", 
    RowBox[{"InterpolationOrder", "\[Rule]", "5"}]}], "*)"}], "]"}]], "Input",
 CellChangeTimes->{{3.7843966270907164`*^9, 3.7843966979601727`*^9}, {
   3.784396742340074*^9, 3.784396791700028*^9}, 3.784396932886141*^9, {
   3.7843971567966623`*^9, 3.78439716317959*^9}, {3.7843973837641673`*^9, 
   3.7843975460940437`*^9}, {3.7843976954814615`*^9, 
   3.7843977066296444`*^9}, {3.784400800932824*^9, 3.7844008485343237`*^9}},
 CellLabel->"In[99]:=",ExpressionUUID->"6fde3f4d-e44d-42d9-98ec-643432f81e52"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[
    GraphicsComplexBox[CompressedData["
1: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
jjDbfZ2MJsP/ABjOaGA=
     "], {{{
        EdgeForm[], 
        GrayLevel[0], 
        GraphicsGroupBox[{
          PolygonBox[CompressedData["
1:eJwtkiFIg2EQhvf9n4iWgSCaTQYVBw6cBkX5y8LKgiAWMVgmWiwLWgSxqCiC
wbKiQcOSVYOGBWEgqMWiYWWLE8MMPi934f7v5f679+7eu7GNnfJ2kslkUixi
43yyvLs4J7AFcJ73CcuBvwIYmwLf4zuKFtMC17BR8C3/B/D3g9fxnYKXwB3w
MTYCrhFzCB4GX4BXgsXfETvpPaiXejBOce9hQ+ADfFfBcs94z73uNfgNnAev
kps6p7i3gnFWg9WQvxgsXzzqZT8Yv+rcENMHLuCbCYZLvI1oMXPR6qmuemyQ
Mw0u4/8Az4Ir4GY0fvX76HNpvt9gff4F01Tatnk3o+W+w3HpWi3jW0xMQ2lZ
8n7UY9P30sL347vI4Xt1HVQn9dxetHryS6foM64lNo/mkgYnroNm1f6klbRU
nOKlR893qr7mnV91Ct6buIuuv25B+1DdLr5B1yeb2C5VSzXzfm+ao+Oc4m67
Ppq16/1rvhe/Q92jblH4ORiv+LWHlnPqlnOOdbO6b+1Cd/EdLVd8Fddfe3jw
nX4G24f86r3qt6R9/gNIxlVi
           "]], 
          
          PolygonBox[{{850, 47, 45, 994}, {404, 20, 22, 653}, {486, 48, 47, 
           712}, {416, 22, 23, 658}, {452, 45, 47, 702}, {834, 22, 20, 975}, {
           476, 47, 48, 707}, {426, 23, 22, 663}}]}]}, {
        EdgeForm[], 
        GrayLevel[1], 
        GraphicsGroupBox[{
          PolygonBox[CompressedData["
1:eJwtki9LRFEQxe97o0EsL1hcUJANVl3QIoLBaBANJgW3aBBNIrJlwwa/gWFN
dkG3LGiw7NfYYrYI2wz6O8wJ8+55M2fO/Ll3rXtzdF2XUjawwG6rUhrOB84D
AvvgQ85fTLwTPssQF8FX4Df9g8dV8sSPuVLWwbvgH7htY/kUE2cYmS+dU3LP
sQXwCP+xsXyrcHbA3/jfwW3wJ/4KvA2erzMmTi+yP/XZgXNZpf44ch7NNQE3
kfoXEJ/c/yvx58jcPz4vrvWBfzMy9x5fN7LuWeRsmmvAuWRNaT9GzjirU0ua
2t/IHHH3qvSr5sA6/chdqGf1PrSO9Lbcg3pZ8f51D3eefVrnnPIr/uWda/cd
11LNiXWk13ddcafec6vOvahP3cPMd6q30HMt1dQuGr+XlnN1V/8MPTUj
           "]], 
          PolygonBox[CompressedData["
1:eJwtlD9sjWEUh7/vfh3UoLNRDCQqISrRGgi3EhIdKtH4M2BgaLEwaKIG4s+g
lyKVMLSDSpSEgdGVqOTehPSmBoYaWsntoN0UiUo8T94zPMm553vP+77n/H7v
XXfqfO+5UpZl+6AFruVZdhWGoQIjcBeus+gGPCC+D7eJh6EdNkEHbIeHMAp7
iizbC6uJW2ENtEE3lOEv31aKVGPtMvEvOMveA3AJBuE7uXn4SPwJFuEHTFPT
gM8wA7/J/YE6cQ16qTkELVDAMXLH4TnxJOxn7QHYSLwBLvDtYuzp3k2+LUA3
lOEw9ME8zMUdvEsrtavgBDUnS6kHe9lCvBXGYQyesXYSvsEsvCc3BR+Ip+At
cdX1xGPOnfgeHGWvI/CT3HKeZubsdvFtN2wmbo8e7KUtZv0FvpaSBmoxDQ14
zB6PQtORmIGzsAd7qYT2NeI6DEA/nIYzRbqzd5+LWThTZ7uNuAM6YUeeZu7s
u6AThshdgVvEN6FJzUIp1Vh7EHrypIFa6AG9oOf0np7Te0PEl0vJo3r1KXtN
FOlMz/bOtTjTs/tCOzVXe2foLGfCO3pYLzvz8fCQXlqBf3nSQC2eEE/kSSO1
mg0t9Yhe0XP10ERtKpx1p0ie0Bvl8JKe7A1P6+2e6N0e7OUdVENTtXVmzs6e
7X0w3kY11u4k1xVvyrfVCK3VWK2XyC3GGtd6J+9mbik8qlfVRG1eUrOW/4H1
8CI8pJf6wwtq1ow379vX03p7NN5+NU+17vGK32/gdSl5XK//By9/mjQ=
           "]], 
          
          PolygonBox[{{461, 460, 451, 35, 698}, {862, 54, 725, 857, 858}, {
           422, 421, 431, 25, 668}, {509, 508, 725, 54, 513}, {871, 870, 726, 
           54, 866}, {439, 25, 431, 672, 673}, {443, 35, 451, 693, 694}, {517,
            54, 726, 521, 522}}]}]}, {
        EdgeForm[], 
        GrayLevel[1], 
        GraphicsGroupBox[{
          
          PolygonBox[{{303, 1, 317}, {753, 67, 585}, {465, 37, 983}, {690, 27,
            440}, {589, 67, 1024}, {673, 26, 439}, {585, 67, 589}, {317, 1, 
           927}, {983, 37, 448}, {596, 1, 303}, {916, 67, 753}, {457, 36, 
           980}, {37, 26, 27}, {440, 27, 839}, {839, 27, 674}, {26, 37, 36}, {
           760, 1, 596}, {689, 36, 447}}], 
          PolygonBox[CompressedData["
1:eJwtlUtoVlcURv97/0RQB1Gog6Y0RaqYQCMoTaCmA6WNAwXfYLAaMR0YwdiR
qSbSKCg1HWisb4wDI6jgA1/4iwpGSIQIFUMdtIN2oIIdJEJFU8XYdi3OHiyy
c865+5zs/e0v01u+W7ElLxQK26EMuvjlB9idFQp7YAu0QQd0wstiofA37IY9
cA/6oRZmQztntsJe6IZacn0GdVAP/3BmDOYQz4U++Ih7K+E65y+ydwEWES+G
hdAIq6EJrrF3FT6AaVDH2uewBJYGxmfZOweriFfCBmiBZlgHrbAJXnD/KDTA
l3Cab/rgP4vCz144AUfhGCxgfT70EB+Am1CCj6EKHsMMPp0Jw+Qvo6jFspTD
XCf5thcus3cFBokH4AnxU9hPvA9OEffBn8R/QKV1gjZybIaN0AqHWDsIZ/yb
oUR8AwaJ70M/8V1zmMs7vAs+hRl56qG93Am7YAd0wvewDSbBRNjA2Rb4lrgF
mmE9XGLtItwm9x2YytoU38daa556YC++YG8ejBKPxB3e9QCGYB40FJMm1EY3
8U/wHsaLqebWfgE55mepR/ZqEAbUAdTDMDyy1pw5Cc+In8IvxA/hL3I8D03W
Rg2sxSyohhwyKIcJMBkmQQVMiR7Yiyr4JDSjdhphIazirpVx57N4k2+b499W
TJpSW+9gPE8aVIul0FJnzFp/zFYbZzbnSbNq15paWzWttss5UwZrPZMnTakt
e2JvKtn7sJhymEtNqS01o3Z+h9/ypCm19S9777NUA2uxK7ShZtSONbSWt+x5
njS4MTShNtSc2lNzam9baEkNq+X+LM2GM381T56hd1RDTTHNqLPqjDvreoBe
MDG02BReoEfoFQeJf4YfybU3T56ld+2Hniz1xN6Mh5Y6iLfnyaP0qp3QlSXP
0/umhbeoYbU8Hr1aDU3Q7rd58kS9sSbevjX2qsILrLm1P8KZw1maaWd7bmjB
N/iW5bAsTx6hV3zD3hp4zTdjWdJgeWhwcmhO7TlDzlJ9eKueqrc6g86iHlCK
mXV2G8NLu8ObB2J2nElnUw2pJTWklvTUupih3qixtT4WXviKM6/ha+KvYuac
vVKWvFwPvBIzUxEaU2t6pt6p5+q9Fzh/3rzExwNjc5q7J3o5FF5hj+21NbW2
D4iH8jRzzp4eqBfqsXrtKPEIPCIezlNNre2vxI9jzb3nekOWPK05emAvXHPP
O7zrLfGbmBFnpSG8qyu0ZE5ze+ZteK7eq8fr9Xqa3qYH6UV6/pN4o2+tDi/y
f6z/a/8HaOT52A==
           "]], 
          
          PolygonBox[{{699, 698, 447, 36, 457}, {757, 756, 588, 67, 916}, {
           927, 1, 306, 320, 321}, {1024, 67, 588, 592, 593}, {436, 26, 673, 
           427, 428}, {600, 599, 306, 1, 760}}]}]}, {
        EdgeForm[], 
        GrayLevel[1], 
        GraphicsGroupBox[{
          PolygonBox[CompressedData["
1:eJwtkD9LAmAQh98/ay1KtJggpjXrUks0izS4uAuuWeoncO4L+AFCWmuKEOoD
uEWIiKu4iPgJen7cDcc9d/d77+69Sm/QeUwhhEssYxOCAv4lhrCAG/AeblEs
wa/k7rJppK3Cp/AQrsAn8BNc87zqY+xWGu9xhdWxLnETf6D/OplG2qHrV+SW
1K7hTba+6t8ndxEsr15n5G/wOzSjaHPn8HM0/Rc8hYvwAj73WZr5F63Hmvxv
tL1W2XTS3+Pb2ebN0L8n03xHu4vuc4y2k2ZpZtH30V6fxGX4IdsftPOP/0k9
VftI5qWd+910v63fR3fSe2neku1b8vf/lBUr5g==
           "]], 
          PolygonBox[CompressedData["
1:eJwtlm9oV1UYx++9PzVQgzQyyKUJ/bEgJxO3/qgwqa2W5R82cJQamy9UaEaB
Vi5qkSPXizK0WrQKDVTIRbpooYELNklBmViJxPZiE+YLFxmZRlqfD+d58YHn
nPOcc8895/t8753TtHlVS5FlWQdMgL009kBPnmXfQncpyw7CU8TLoBZqYDU0
QgPUQxM0wwFy98MjxI/CSdY6AfX0NcBLxDfznKkwh/b9tOfCZeI/S2mOcycS
T4J9jN1JbhnU0X6b9q3E02EJ7T5y5xLPgsOMHaT9FXQSfwID0A8j9I3C48x5
DAbhDCyhbzF8TvwF3EXubLhEPA6d8DH8Rd8V+IjcD+E94vfhQJGe7R6Xkfcm
7TdgOzntcAYG4VfGzsUZeBajcAF+g/uy9A7nyGuFbdBH/49QxVqV8DfxVbhG
fNXzhAZYBSthApc3ETqYuwP6yR2AKTAZmshphkWesfskpw02wUbope97uE7O
v7AaGqEWauA6YzfgLHEFe10AV5h3nr57s/QOv9C+ifFJMAWmFkkjakUNdced
erdrGFsLg0VayzUvkXcaTsER+o/CRXIfYuxhuJ32etrNsA6eh4vkjuVJY2qt
ObR4mLEe+I/4BhSMldQi8U9wlrGf4Rn6ni6S+HM4X6Rn+cwXGT9SSlpVsy8z
bylUw176v4R3i6RFNdmZpzP2rGuiViphISyHFfAPXIs9ubet5G6BFuLNedKs
2lWjanUe8YOhAbVQbp91Aw/ANvpecw3XypMG1MKnjHWVkkbV6h73nKcas9a2
QzssgIpSWsO1zDF3F/HuuEPv8haYBj8wdhS+I+4t0hl71rfBDFisxkIztbGG
a+1jzv481ZS11Qqvw2yYBXfATLiH3LvDE/SGMpgZNWltWgPWQoW6KZKG1bI1
Z+2pUbVaTbwUdsA7RapZa/cz4i74hvgQ1BE/GRpQCxeiNk+FFt2ze3eOc59g
rLaUPFKv1CN7wnP0Hs30BbVNvC5P7+S72edYFXFlnLlnfxJORE0uCk/Sm7rc
a540qlYHw0vUcBE1Zq3pEX2hCbXhO/lu3Yx97R3lyTut0UNF0rhaXxneMSPu
bhpMD4w3MLaxSB7SH3uuCs2pPTW7NTxRb9xF3+6oCWsjgzw8VW+tjtrRY3rj
zr17n+Gz6uNb0hjeo8fpda+S8woMEQ+H5+l95eTOh2EYypPH6/V9cKxIfcPx
zfLbNTm80BprCY9tjZrZEp6pd+o5eo8eoVd4hp6lmlf7al7tDxAfz5OGW2OP
7tU7XxueuilyzD0We1OzardD7wiMx/S6Ip2ZZ6cH68Utasf78KyCDeGB66PG
rXW/UX6rPoCdMM7c34vkkXrls/AcvAVtMMLYaJHOsDy+gX4LL9P3R9REXZz5
UNRgWdSUtbUznqWH6+ULw+t8h7HwrHmxh/HwBL2hPbynLfayIrzRfwb/HdzT
SHiAXqCm1JZ7cm//A3SSEFQ=
           "]], 
          
          PolygonBox[{{832, 19, 400, 970, 971}, {414, 413, 403, 18, 651}, {
           984, 983, 448, 38, 468}, {390, 389, 400, 19, 644}, {860, 859, 502, 
           51, 999}, {396, 18, 403, 648, 649}, {880, 56, 729, 877, 878}, {484,
            483, 493, 50, 717}, {529, 528, 729, 56, 531}, {498, 50, 724, 505, 
           506}, {496, 51, 721, 488, 489}, {677, 28, 440, 839, 840}}]}]}, {
        EdgeForm[], 
        GrayLevel[1], 
        GraphicsGroupBox[{
          PolygonBox[CompressedData["
1:eJwtUD0OgUEU3N1XEAlaii9+Cgk3IBJXQEshEhQSjuAEXISCEIWOY9BQf41a
ZSazxduZnd2dN/tq0/VwFZxzVZShSlhywCXEFrASzy5BePPODUz8AK0AngHP
A7eoHngKfRc5tTn2WfAh3n7Au+B1YN/kvwc/Rh/6lbHvgCdB93i/AdyYOD2Y
jznHXkW+8OrBXhP2Mv3h4bWnfoI28urFnr+Yk3nP8GyC33H+8npLj0bM8I15
qfPe0wvfpv/TcxaUg3mu0NpB/uzD2XFunF8S/5iCF03ZOKc/7/Qk2Q==
           "]], 
          PolygonBox[CompressedData["
1:eJwtlmtol2UYh//v+5oG6Ye0NCjQ2QFckIuiCbpZjnJpmRlWjuzkDDJwuhla
aaSWkhp0wMpFWrhKpWakiw5OaIGLUguXllrpB6fph2ka1RKz6+K5P1zs3nP4
P+9zH373U/Zow5TZealUaoE+8FJWKq2CFxlcAbUwHv4rSqXzsBSWwBHGumEV
rIQ17GmGR5h7GB6A6dAGW2EwDIEPWTuMc4bCZP5v4f/10MbeT6EWxsM0qPNb
WLMSjrPmBPTlIy+AtxlbC6/Bq3CSuVPwA3u+h23Y7TCLucehHmbCW4w1w63Y
t8F3rP0W9mLvgzex34CXWfMKlMMIOMPcn34vc+thNWOvQxf2HviZuf3Qiv1R
ls7wrL3YP8IB5g5CEzTCAeYO+hvYq+G0Z8BdMAky7pjDdva2w2eMfQ7LsZfB
89gvwNPsfQoOYR+GUVAJ/zDWCx2sLS8ln29lfC5jc2A2NMA85ps8A3s7bMTe
AGtZuw7qYBr0wr+wiLmF0MHar6Ef9IUHmXsIhmOXeYZnQY6dwTlzCKqwx8Bi
fmMJrPOsLOWQuXQPTMlTjI31INYONIbGEq7Avtzvx26AC6Ef9IcBUA8z8pRD
5tItrL3ZOMNOc4mxFbADuxPGQrU5zZ6l8Y3n4s7e/V6YChXsuR7GwOgs3dm7
3wg3wDOsWZinGrAWdjG2G66FcpjP3ILwkb66iTWVWfJpb5zhWc2sXQN/Yf8N
E7EnwHvY77sGeyp0w1EoMXae3yn428f8YWySccTeFDVgLZjj5vr0qM1j8Dt8
w1gnfMWaDtiC/Qlsxv7YnMI+pL+wO2EwXArH2XsCzjB32nvAWRjI3MUwCC4x
Z7NU6yNgS55qztrbA11wP9wHp1j3B5yA434ra3cG2t7Zu3czd0T/MrY7T3tO
xR73lqkv0KMmwO1QWySNUWvOxrfqM313J3N3wAfYG2C/tQy/WVPwE/Y++AX7
1yJpVFvUeGvE0FhOhrsjp83t5/itxXny8bG4o3e1pqwtfayv9bG+tsat9eWs
WRYaq9aqEWqFNWvt1oU2tmJvLtKZnr0Re1ORctBcnM/YAqhgbGTkoLk4DIZG
DVlLJ1nTEzE0lmqgWqimqW1qmtqmhqllRyP31Fi1Vk1T2/SRvjIHi6hJa3MO
Yw2hGWqHPtSX+lhf74zaVBOqQqPVanuIvaSeNTOy1EPsJf3hoiLVeH3UhLVR
G7E2hsbSmrF2atg7DlqsoSLluLluTpvbapRaNRP7sSxputquBqqF17DnargS
ripSTI2tGqwWj4VqeIe5d4uk0Wq1NWVtWYPWojlmrqkxao091l47irHK0BC1
xJ5j77HH2GvswfZie5K9qQm7MU8aOzw0ZldonFo3ILTQGrQWu6LW1obWqvlq
vz1xVtzJu/mb/rY+0ldqttpdw9i4PPVYe6092F58HYyEZxlbVKQeZC+yB9uL
q6A6Tz3N3jZBLYMnWTOvSD2wKXLW3B0d2mpP6YicNXftSe0RA2OhBqlFaoBa
8IU+j5w2t42hsZwLjVnSCLXCHDfXt7HmyyL1PHufMTN25khN7HGva1yr5ldE
jI31xLiLPdpebY+2V9uz7F32lB0RU2NbHb7wDeVbSs1UO4dgXxYaOSg0VW31
jeVbS5/XRM+wd1hD1tITMCtLd/buvql8W9kj7ZX2DHuHbwrfFr6RfCvZU+wt
asL86IH2Qt8QviXsgfZC3zi+ddQgtehwkbTbN8TBLMXc2PvG8K2hxvZEDpgL
/wO3SF06
           "]], 
          PolygonBox[CompressedData["
1:eJwtjj8LQVEYxo97EqHYXKW4g+FaTaR8AVHqTgblz+Aqd8HqA/BNFFmU0deQ
MDDdxcjm93bu8Ot93ud53tNxhkFvbimlchCHgEWMQUypFLutlTppo8XzYQYT
Ogm8NjpNngEfbwoeXpIsi3eAvTY96feZR21y6Y1gDG/uXlCBJtmazgoa6Bve
Ar2Ejza59FyoQhj1iugyOGBD3jK3khWYT3hYpieevL9Dl9Bn/tBh78IPvlAj
a5HV5Y79Dhd6Lt6VGUa59DZkW/gD1AAicQ==
           "]]}]}, {
        EdgeForm[], 
        GrayLevel[1], 
        GraphicsGroupBox[{
          PolygonBox[CompressedData["
1:eJwtkr1KQ0EQhWfXpFQR/GuvIIqKaGEv6QyxCSEPkAdIehG01BCwUsQIgmhr
JXY2KipqIQQb8QnExtLOb5hTfMzs2XNnZ4ZbtDr1djazFRiCNozCD7wms2Xi
LYZZ8nXyB51df0d7ttDnyXvoE+Rn5PfS/buqajfgBSqwkOLs+idMcl4jnsOT
PI9QyqEbcRzPKukpnKR4y98siEuwqO/dfwnXObQ7vFcwTX5DfMtR5zsFnv8S
ty1q/ukN1/ua2WfxWbswA/tQgzJ8QFP5l+7ck6m5a/HuDhypzxH0fg7d+zq2
2OdYir1UtAP3ub+neXyuKbRSivpdzeN1LnL07f1vqQ/vZ1N79JpzeAfaeVV3
Zc2xIX2gPryfA/VbaJ5D7XiY+z3pKcW/4v9MB/4BfJ052Q==
           "]], 
          PolygonBox[CompressedData["
1:eJwtlmuQl2MYxp///10VWjVy2Ahtmp1hHWd8yAfTGCMZw9Y2kg4OnbAOlZQz
k2SNbCOZRTNKI+lEZSvaEjJGBuuwtGonbSjUsFHERvn95n4/XPNe1/M87/M+
h/u+7rd89ITqu4oppZWgBKzNUvqJ53hwSyGli9AT4XeDfvBa2ibD28E0XpyI
roH/Au5Dr2DMDvgIMJy+j9C/w+8BM9FL0a3wa8FgdCm6Gj4EHAffAPbAb/eb
9A9CPwFP8OXM3x89FbkfzEAfBlfAB4IifVVgBvwIWEbf1ejH4YfBUvRG5pkJ
z3iuRO8FfeDv0lbH2Bfg98P/BE/Rtw9U0PYheg79dfB74X+A6fTtAqfTtk5N
fyP4GX6re6C9K3oQfCsYx9hu6Ovg34EadDVjhsG3e+bokegb4Dt93/Uyfi/8
Ts+Qvh7o6z1bcDK8DIyCfw8muBf0GPhuMBndC30j/CbQG94XjPNuQQV8PHOO
he8Ckxg/ED0Y/i0Yi24CPWib6xiea3jnR/ho+9FT0G/AV4Gp3i3jy2h/3e+j
a8Br8CWuD76T/tPofwv9KPpm8Ap8oecDfwA0wFeDR+DtjH0pxRpci3M41zLX
mwXkftNvuwbXcgq6Db0V3Rk+i7Zmnk+j30lx5959K7oL/BnavinEHXqXjaAW
vh0cTftsdAvPPrzzdoo9uBf34F6MAWPBPbgX9+zeR4EFKfboXneAYxj7rDFR
iJgz9t4Ds7I4M8/OM/Vs28CxjJuD3uY30V15PoduzffoXj0zz24u+AzeBObB
+9N3DXwAuBBeT9sn8HPgB4txp97t8eYq+lP6D5jL4FL4CbQtN3ccA19F2w/u
xZgyh1wjfKQ5j96N7s7zRfRQ+FXOCa+kbT/8EM+X0fPN4ULkrLnbAl41d8CJ
hTgzz841ubbn0W08N5lDnht6s/fpXrxPUFKINbgWPUgvugxdBd8CFmThSXqT
MW6slzLfYvgi0AVeyZjb4HeAC7JYs2v3zDw7c9hc1rP0rj3o8kLElLGlR+lV
tX7DftATvQJ9UjFy0FzUI/QKc8xc0yP0Cj1Jb5qGbiiEh+lleqBeqAfoBXqk
XmnOm/vmuLk+BP0F/FzPFkOvQn+e4g68Cz1cL9eT9WY9W+92z+59GJiX4g68
C+dwLudwLmPAWPDMPLtysBZ+qvmUxR15V93yu5oNDqbwVL31CGPO4vmx50/f
UPAl/HLQAT8bbICfwZh9WeSgudgbfUAvo/9r9wI6Z1EjrBV6mF6mZ+qdeqLe
qAfrxdY0a1tP+t9MUe/K4IvAv/DpzpmFB+qFeqheqofqpXqm3mlMGBu/gQ/g
i+n/L0WNsdaYw+ZyX77bkcWZeDZr9AzGPgyflKJmWjtLQWUew/UpapS1yhpm
LdPj9Xo9V+81p83t83ivU0l4sF5sTpqberrebs2wdljDreXWFGuLOWvuWnOs
PXqsXtsL3p5FDbYWm9PmdiPt5SnWuJq1FQuRa7Y9maJmWbusadY2a5q1zRpl
rVqHPiqvudZea7a1238I/yX0AL1Aj9frranWVmu8tb459+5OPLeg/wFnwt+n
rV8xPFvv1uP1+uG0fZXin8B/g5bcu/V4vd53fHcjOL8Yd+LdGBPGRj3ogD8I
FhbCo/Vqa4C1wDv37r1D71JP1VuNYWO5Ic/dQ2B+MTxWr9WT9Wa/6bf1DL3D
mDP2jCFjaXPubZ6ZZ3cl/Y+liFFjdVteC6wh1hI9TW/T4/V6c8hc8gw8iyXe
cYo9ubdmxv/t2sGALDxX79Uj9Ur37N7NWXP3IfBrin9A/wVb89pjTbI2GTPG
jh6gF1SA9SlqpLXSHDaXbbPvYrApxR16l/5j+a/lP1VdnuPmuh6gF1iDrEV/
gaYsYt7Y1+P0OnPMXHNO5/bMPXv37N71XL3XGmYtM+fNfT1Zb74ETElR86x9
/wO3h3LH
           "]], 
          PolygonBox[CompressedData["
1:eJwtkb9LQmEUhs+nlQ1CDpWtLmkEgUO0VEiBJE0GSZvQH6CLgYiRujQ0OESQ
BdYQDf0JjUaDFSH0Y8jJxS2yJYIGew7nDg/nfV/fz3u+eyO7+a2cT0RmYBQE
s8iYdiKXzD/mERTQA5iAIn6d3hr6AebwQ7/INzOOn2Q2mTtkx3CPjjrr67kO
egF9CiF0n04aDvEOH2HeMq98tlcFapCiU3O2g+6yBytkVXpf6Ly3n3aWwK9n
4BWydJad3TEDXbjR55Jtoz/E+npulW4CfQez+AH+nR/H0HWx3R/Rz2Q/6BJM
wRlZgGwT/ea9T31m0ds5B59Q5v9aZPPoEwiie5xLwj7+wPse5/QyZA3VYu/2
iWwcrtFhZ99qBH/hbIcy/MIL5zbI2+iYs/vovf4B5Bk1vA==
           "]]}]}}, {{}, 
       TagBox[
        TooltipBox[{
          Directive[
           GrayLevel[0], 
           Opacity[0.5], 
           CapForm["Butt"]], 
          LineBox[{929, 319, 305, 598, 762, 602, 766, 770, 933, 323, 929}], 
          LineBox[{938, 337, 311, 607, 775, 316, 938}], 
          LineBox[{943, 346, 328, 612, 780, 613, 781, 782, 944, 347, 943}], 
          LineBox[{352, 945, 356, 949, 791, 787, 618, 783, 614, 338, 352}], 
          LineBox[{359, 950, 363, 954, 800, 796, 623, 792, 619, 348, 359}], 
          LineBox[{956, 370, 358, 625, 802, 627, 804, 806, 958, 372, 956}], 
          LineBox[{963, 381, 368, 632, 811, 816, 963}], 
          LineBox[CompressedData["
1:eJwl0b8rhHEAx/GvY7BYLonBcH+IdIuS5Mcgi4EynMElMRgUkhKDRWK45ZJf
SZGiGG6h6FIXOpc8BhLDJaPF68nw7vX9PN1z36tLjWT7x2tCCBnNO7TVhnCr
tIra9GwlEUKOJbtDW/ahfaq8c6dn2+ziDru5xx7us5cH7OO5d06cC3y1K4z4
xBeW+cxHVnjPMkt84A0vvH/Hd3sg/r32p/2tQftDQxrWqMaU1UR8n89OckrT
iuwZzqqqlP3FVraoOf5uu4mNSqpB9apT0K97f1RV0X7jFSMWeM0zXvKIx8xx
l+vMc40bXOYqF9ju3kUu2XOJ///nD/BkQSQ=
           "]], 
          LineBox[{967, 395, 376, 636, 820, 824, 967}], 
          LineBox[{550, 1008, 554, 1012, 903, 899, 741, 895, 737, 546, 550}], 
          LineBox[{1017, 568, 559, 746, 908, 747, 909, 910, 1018, 569, 1017}], 
          LineBox[{1023, 584, 574, 752, 915, 579, 1023}], 
          
          LineBox[{1026, 591, 587, 755, 918, 759, 922, 926, 1030, 595, 
           1026}]}, "0.001`"], Annotation[#, 0.001, "Tooltip"]& ], 
       TagBox[
        TooltipBox[{
          Directive[
           GrayLevel[0], 
           Opacity[0.5], 
           CapForm["Butt"]], 
          LineBox[{928, 318, 304, 597, 761, 601, 765, 769, 932, 322, 928}], 
          LineBox[{937, 336, 310, 606, 774, 315, 937}], 
          LineBox[{942, 345, 327, 611, 779, 332, 942}], 
          LineBox[{948, 355, 341, 617, 786, 790, 948}], 
          LineBox[{953, 362, 351, 622, 795, 799, 953}], 
          LineBox[{369, 955, 371, 957, 805, 803, 626, 801, 624, 357, 369}], 
          LineBox[{962, 380, 367, 631, 810, 815, 962}], 
          LineBox[CompressedData["
1:eJwl0DFLQlEYgOGTDi0tEdLc/4hoCSLCIYgQGiJaXDTEH1ARgtjQEpGDi0g1
RJAEBTa4GBQSiIWI1JJIi0Rjiz3S8PJ83+Hcq9y57fRaaiKEkNC+YT4awrMW
1dSZs0IkhBJb9iUV7Vf2W5XNy84qXOE5V3nJOO/dqZrrfLd32OMbu2yzwxZf
+cSa+y/s29fH/8f+Zf/Whn2gTW1pR0mltKuuuxlm1TPPjp81xzijaU1pUlGN
vPNXPxqq6eyTDX6wzkfe8YHXvGGJFzxhmcc8ZZ5HPOCC3z1kzr4X+f++f5iH
OIM=
           "]], 
          LineBox[{966, 394, 375, 635, 819, 823, 966}], 
          LineBox[{1006, 544, 540, 735, 889, 893, 1006}], 
          LineBox[{1011, 553, 549, 740, 898, 902, 1011}], 
          LineBox[{1016, 567, 558, 745, 907, 563, 1016}], 
          LineBox[{1022, 583, 573, 751, 914, 578, 1022}], 
          
          LineBox[{1025, 590, 586, 754, 917, 758, 921, 925, 1029, 594, 
           1025}]}, "0.0008`"], Annotation[#, 0.0008, "Tooltip"]& ], 
       TagBox[
        TooltipBox[{
          Directive[
           GrayLevel[0], 
           Opacity[0.5], 
           CapForm["Butt"]], 
          LineBox[{317, 927, 321, 931, 768, 764, 600, 760, 596, 303, 317}], 
          LineBox[{936, 335, 309, 605, 773, 314, 936}], 
          LineBox[{941, 344, 326, 610, 778, 331, 941}], 
          LineBox[{947, 354, 340, 616, 785, 789, 947}], 
          LineBox[{952, 361, 350, 621, 794, 798, 952}], 
          LineBox[{961, 379, 366, 630, 809, 814, 961}], 
          LineBox[{384, 827, 970, 400, 389, 639, 384}], 
          LineBox[{965, 393, 374, 634, 818, 822, 965}], 
          
          LineBox[{403, 413, 977, 836, 665, 428, 436, 674, 839, 440, 690, 448,
            983, 465, 980, 457, 699, 462, 996, 852, 714, 488, 721, 493, 483, 
           709, 478, 704, 454, 695, 444, 686, 433, 669, 423, 660, 418, 655, 
           406, 648, 403}], 
          
          LineBox[{505, 724, 502, 859, 863, 867, 872, 877, 729, 528, 523, 518,
            514, 510, 505}], 
          LineBox[{1005, 543, 539, 734, 888, 892, 1005}], 
          LineBox[{1010, 552, 548, 739, 897, 901, 1010}], 
          LineBox[{1015, 566, 557, 744, 906, 562, 1015}], 
          LineBox[{1021, 582, 572, 750, 913, 577, 1021}], 
          LineBox[{589, 1024, 593, 1028, 924, 920, 757, 916, 753, 585, 589}]},
          "0.0006`"], Annotation[#, 0.0006, "Tooltip"]& ], 
       TagBox[
        TooltipBox[{
          Directive[
           GrayLevel[0], 
           Opacity[0.5], 
           CapForm["Butt"]], 
          LineBox[{320, 930, 767, 763, 599, 306, 320}], 
          LineBox[{935, 334, 308, 604, 772, 313, 935}], 
          LineBox[{940, 343, 325, 609, 777, 330, 940}], 
          LineBox[{353, 946, 788, 784, 615, 339, 353}], 
          LineBox[{360, 951, 797, 793, 620, 349, 360}], 
          LineBox[{960, 378, 365, 629, 808, 813, 960}], 
          LineBox[{383, 826, 969, 399, 388, 638, 383}], 
          LineBox[{392, 964, 821, 817, 633, 373, 392}], 
          LineBox[{402, 412, 976, 835, 664, 427, 673, 439, 689, 447, 698, 461,
            995, 851, 713, 487, 720, 492, 482, 708, 477, 703, 453, 694, 443, 
           685, 432, 668, 422, 659, 417, 654, 405, 647, 402}], 
          
          LineBox[{504, 723, 501, 858, 862, 866, 871, 876, 728, 527, 522, 517,
            513, 509, 504}], 
          LineBox[{542, 1004, 891, 887, 733, 538, 542}], 
          LineBox[{551, 1009, 900, 896, 738, 547, 551}], 
          LineBox[{1014, 565, 556, 743, 905, 561, 1014}], 
          LineBox[{1020, 581, 571, 749, 912, 576, 1020}], 
          LineBox[{592, 1027, 923, 919, 756, 588, 592}]}, "0.0004`"], 
        Annotation[#, 0.0004, "Tooltip"]& ], 
       TagBox[
        TooltipBox[{
          Directive[
           GrayLevel[0], 
           Opacity[0.5], 
           CapForm["Butt"]], 
          LineBox[{333, 934, 312, 771, 603, 307, 333}], 
          LineBox[{342, 939, 329, 776, 608, 324, 342}], 
          LineBox[{377, 959, 812, 807, 628, 364, 377}], 
          LineBox[{825, 382, 637, 387, 398, 968, 825}], 
          
          LineBox[{411, 401, 646, 404, 653, 416, 658, 421, 431, 672, 426, 663,
            834, 975, 411}], 
          
          LineBox[{460, 451, 693, 452, 702, 476, 707, 481, 491, 719, 486, 712,
            850, 994, 460}], 
          LineBox[{722, 503, 508, 725, 857, 500, 722}], 
          LineBox[{726, 521, 526, 727, 875, 870, 726}], 
          LineBox[{564, 1013, 560, 904, 742, 555, 564}], 
          LineBox[{580, 1019, 575, 911, 748, 570, 580}]}, "0.0002`"], 
        Annotation[#, 0.0002, "Tooltip"]& ], {}, {}}}], {
    DisplayFunction -> Identity, AspectRatio -> 1, 
     AxesOrigin -> {Automatic, Automatic}, DisplayFunction :> Identity, 
     Epilog -> {{
        GraphicsComplexBox[CompressedData["
1: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
         "], {{{}, {}, 
           TagBox[
            TooltipBox[{
              Directive[
               RGBColor[0.368417, 0.506779, 0.709798], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwl1mPXEIgWBeA3uyZbk227Jtu2bds12bZt27Zt227u07ofnrV/wdn7JGzQ
tkKbQAEBAb8DBwT8SREQhKAEIzghCEkoQhOGsIQjPBH4i4hEIjJRiEo0ohOD
mMQiNnGISzzik4CE/E0iEpOEpCQjOSlISSpSk4a0pCM9GchIJjKThaxkIzs5
yEkucpOHvOQjPwUoSCH+oTBFKEoxilOCkpSiNGUoSznKU4GKVKIyVahKNapT
g5rUojZ1qEs96tOAhjSiMU1oSjOa04KWtKI1bWhLO9rTgY50ojNd6Eo3utOD
nvSiN33oSz/6M4CBDGIwQxjKMIbzLyMYyShGM4axjGM8E5jIJCYzhalMYzoz
mMksZjOHucxjPgtYyCIWs4SlLGM5K1jJKlazhrWsYz0b2MgmNrOFrWxjOzvY
yS52s4e97GM/BzjIIQ5zhKMc4zgnOMkpTnOGs5zjPBe4yCUuc4WrXOM6N7jJ
LW5zh7vc4z4PeMgjHvOEpzzjOS94ySte84a3vOM9H/jIJz7zha984zs/+Mkv
fvMff44/EIEJQlCCEZwQhCQUoQlDWMIRngj8RUQiEZkoRCUa0YlBTGIRmzjE
JR7xSUBC/iYRiUlCUpKRnBSkJBWpSUNa0pGeDGQkE5nJQlaykZ0c5CQXuclD
XvKRnwIUpBD/UJgiFKUYxSlBSUpRmjKUpRzlqUBFKlGZKlSlGtWpQU1qUZs6
1KUe9WlAQxrRmCY0pRnNaUFLWtGaP+Xdlna0pwMd6URnutCVbnSnBz3pRW/6
0Jd+9GcAAxnEYIYwlGEM519GMJJRjGYMYxnHeCYwkUlMZgpTmcZ0ZjCTWcxm
DnOZx3wWsJBFLGYJS1nGclawklWsZg1rWcd6NrCRTWxmC1vZxnZ2sJNd7GYP
e9nHfg5wkEMc5ghHOcZxTnCSU5zmDGc5x3kucJFLXOYKV7nGdW5wk1vc5g53
ucd9HvCQRzzmCU95xnNe8JJXvOYNb3nHez7wkU985gtf+cZ3fvCTX/zmP/4M
fyACE4SgBCM4IQhJKEIThrCEIzwR+IuIRCIyUYhKNKITg5jEIjZxiEs84pOA
hPxNIhKThKQkIzkpSEkqUpOGtKQjPRnISCYyk4WsZCM7OchJLnKTh7zkIz8F
KEgh/qEwRShKMYpTgpKUojRlKEs5ylOBilSiMlWoSjWqU4Oa1KI2dahLPerT
gIY0ojFNaEozmtOClrSiNW1oSzva04GOdKIzXehKN7rTg570ojd96Es/+jOA
gQxiMEMYyjCG8y8jGMkoRjOGsYxjPBOYyCQmM4WpTGM6M5jJLGYzh7nMYz4L
WMgiFrOEpSxjOStYySpWs4a1rGM9G9jIJjazha1sYzs72MkudrOHvexjPwc4
yCEOc4SjHOM4JzjJKU5zhrOc4zwXuMglLnOFq1zjOje4yS1uc4e73OM+D3jI
Ix7zhKc84zkveMkrXvOGt7zjPR/4yCc+84WvfOM7P/jJr8D///v/B+VTg0I=

               "]]}, 
             RowBox[{
               RowBox[{
                 RowBox[{"Cos", "[", 
                   RowBox[{
                    FractionBox["\[Pi]", "6"], "+", 
                    TagBox["\[Psi]", HoldForm]}], "]"}], "+", 
                 FractionBox["10", 
                  RowBox[{
                    SqrtBox["3"], " ", 
                    TagBox["V", HoldForm]}]]}], "\[Equal]", "0"}]], 
            Annotation[#, 
             Cos[Rational[1, 6] Pi + HoldForm[$CellContext`\[Psi]]] + 
              10 3^Rational[-1, 2]/HoldForm[$CellContext`V] == 0, 
             "Tooltip"]& ]}}], {}}}, Frame -> True, 
     FrameLabel -> {None, None}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "GridLinesInFront" -> True}, 
     PlotRange -> {{0, 20.}, {0, 6.283185307179586}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
       FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           GraphicsBox[{
             RasterBox[
             SparseArray[
              Automatic, {6, 1}, 0., {
               1, {{0, 0, 1, 2, 3, 4, 5}, {{1}, {1}, {1}, {1}, {1}}}, {1., 1.,
                 1., 1., 1.}}], {{
                Rational[-15, 2], -180}, {
                Rational[15, 2], 180}}], {Antialiasing -> False, 
              AbsoluteThickness[0.1], 
              Directive[
               Opacity[0.3], 
               GrayLevel[0]], 
              LineBox[
               NCache[{{
                  Rational[15, 2], -180}, {
                  Rational[-15, 2], -180}, {
                  Rational[-15, 2], 180}, {
                  Rational[15, 2], 180}, {
                  Rational[15, 2], -180}}, {{
                 7.5, -180}, {-7.5, -180}, {-7.5, 180}, {7.5, 180}, {
                 7.5, -180}}]]}, {
              CapForm[None], {{
                Directive[
                 GrayLevel[0], 
                 Opacity[0.5], 
                 CapForm["Butt"]], 
                CapForm["Butt"], 
                LineBox[
                 NCache[{{
                    Rational[-15, 2], -119.99999999999997`}, {
                    Rational[
                    15, 2], -119.99999999999997`}}, {{-7.5, \
-119.99999999999997`}, {7.5, -119.99999999999997`}}]]}, {
                Directive[
                 GrayLevel[0], 
                 Opacity[0.5], 
                 CapForm["Butt"]], 
                CapForm["Butt"], 
                LineBox[
                 NCache[{{
                    Rational[-15, 2], -59.99999999999996}, {
                    Rational[
                    15, 2], -59.99999999999996}}, {{-7.5, \
-59.99999999999996}, {7.5, -59.99999999999996}}]]}, {
                Directive[
                 GrayLevel[0], 
                 Opacity[0.5], 
                 CapForm["Butt"]], 
                CapForm["Butt"], 
                LineBox[
                 NCache[{{
                    Rational[-15, 2], 2.842170943040401*^-14}, {
                    Rational[15, 2], 2.842170943040401*^-14}}, {{-7.5, 
                  2.842170943040401*^-14}, {7.5, 2.842170943040401*^-14}}]]}, {
                Directive[
                 GrayLevel[0], 
                 Opacity[0.5], 
                 CapForm["Butt"]], 
                CapForm["Butt"], 
                LineBox[
                 NCache[{{
                    Rational[-15, 2], 60.00000000000006}, {
                    Rational[15, 2], 60.00000000000006}}, {{-7.5, 
                  60.00000000000006}, {7.5, 60.00000000000006}}]]}, {
                Directive[
                 GrayLevel[0], 
                 Opacity[0.5], 
                 CapForm["Butt"]], 
                CapForm["Butt"], 
                LineBox[
                 NCache[{{
                    Rational[-15, 2], 120.00000000000003`}, {
                    Rational[15, 2], 120.00000000000003`}}, {{-7.5, 
                  120.00000000000003`}, {7.5, 120.00000000000003`}}]]}}}, 
             StyleBox[{Antialiasing -> False, 
               StyleBox[
                
                LineBox[{{7.499999999999999, -180.}, {7.499999999999999, 
                 179.99999999999997`}}], 
                Directive[
                 AbsoluteThickness[0.2], 
                 Opacity[0.3], 
                 GrayLevel[0]], StripOnInput -> False], 
               StyleBox[
                StyleBox[{{
                   StyleBox[
                    LineBox[{{{7.499999999999999, -119.99999999999999`}, 
                    
                    Offset[{4., 0}, {
                    7.499999999999999, -119.99999999999999`}]}, {{
                    7.499999999999999, -59.999999999999964`}, 
                    
                    Offset[{4., 0}, {
                    7.499999999999999, -59.999999999999964`}]}, {{
                    7.499999999999999, 2.5410955956001312`*^-14}, 
                    
                    Offset[{4., 0}, {7.499999999999999, 
                    2.5410955956001312`*^-14}]}, {{7.499999999999999, 
                    60.00000000000004}, 
                    
                    Offset[{4., 0}, {7.499999999999999, 
                    60.00000000000004}]}, {{7.499999999999999, 
                    120.00000000000001`}, 
                    
                    Offset[{4., 0}, {7.499999999999999, 
                    120.00000000000001`}]}}], 
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]], StripOnInput -> False]}, 
                  StyleBox[
                   StyleBox[{{
                    StyleBox[{
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox[
                    "\"0.0002\"", 0.0002, AutoDelete -> True], NumberForm[#, {
                    DirectedInfinity[1], 4}]& ], TraditionalForm], 
                    
                    Offset[{7., 0.}, {
                    7.499999999999999, -119.99999999999999`}], {-1, 0.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox[
                    "\"0.0004\"", 0.0004, AutoDelete -> True], NumberForm[#, {
                    DirectedInfinity[1], 4}]& ], TraditionalForm], 
                    
                    Offset[{7., 0.}, {
                    7.499999999999999, -59.999999999999964`}], {-1, 0.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox[
                    "\"0.0006\"", 0.0006, AutoDelete -> True], NumberForm[#, {
                    DirectedInfinity[1], 4}]& ], TraditionalForm], 
                    
                    Offset[{7., 0.}, {7.499999999999999, 
                    2.5410955956001312`*^-14}], {-1, 0.}, Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox[
                    "\"0.0008\"", 0.0008, AutoDelete -> True], NumberForm[#, {
                    DirectedInfinity[1], 4}]& ], TraditionalForm], 
                    
                    Offset[{7., 0.}, {7.499999999999999, 
                    60.00000000000004}], {-1, 0.}, Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox[
                    "\"0.0010\"", 0.001, AutoDelete -> True], NumberForm[#, {
                    DirectedInfinity[1], 4}]& ], TraditionalForm], 
                    
                    Offset[{7., 0.}, {7.499999999999999, 
                    120.00000000000001`}], {-1, 0.}, Automatic, {1, 0}]}, 
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]], {
                    Directive[
                    Opacity[1]]}, StripOnInput -> False]}, {}}, {
                    Directive[
                    Opacity[1]]}, StripOnInput -> False], "GraphicsLabel", 
                   StripOnInput -> False]}, "GraphicsTicks", StripOnInput -> 
                 False], {
                 Directive[
                  AbsoluteThickness[0.2], 
                  GrayLevel[0.4]]}, StripOnInput -> False]}, "GraphicsAxes", 
              StripOnInput -> False]}, PlotRangePadding -> Scaled[0.02], 
            PlotRange -> All, Frame -> True, 
            FrameTicks -> {{False, False}, {True, False}}, FrameStyle -> 
            Opacity[0], FrameTicksStyle -> Opacity[0], 
            ImageSize -> {Automatic, 360}, BaseStyle -> {}], Alignment -> 
           Left, AppearanceElements -> None, ImageMargins -> {{5, 5}, {5, 5}},
            ImageSizeAction -> "ResizeToFit"], LineIndent -> 0, StripOnInput -> 
          False], {FontFamily -> "Arial"}, Background -> Automatic, 
         StripOnInput -> False], TraditionalForm]}, "BarLegend", 
      DisplayFunction -> (#& ), 
      InterpretationFunction :> (RowBox[{"BarLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{
                 RowBox[{
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"#1", "\[LessEqual]", 
                    RowBox[{"80", " ", 
                    RowBox[{"Min", "[", "gammaw20", "]"}]}]}], ",", "Black", 
                    ",", "White"}], "]"}], "&"}], ")"}], "[", "#1", "]"}], 
                 "&"}], ",", 
               RowBox[{"{", 
                 RowBox[{"0.000013826178`", ",", "0.00110609424`"}], "}"}]}], 
             "}"}], ",", 
           RowBox[{"{", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"0.0002`", ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                 "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{"0.0004`", ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                 "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{"0.0006`", ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                 "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{"0.0008`", ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                 "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{"0.001`", ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                 "}"}]}], "}"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
           RowBox[{"LegendMarkerSize", "\[Rule]", "360"}], ",", 
           RowBox[{"ScalingFunctions", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"Identity", ",", "Identity"}], "}"}]}], ",", 
           RowBox[{"Charting`TickSide", "\[Rule]", "Right"}], ",", 
           RowBox[{"ColorFunctionScaling", "\[Rule]", "True"}]}], "]"}]& )], 
     TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.7844008060310335`*^9, 3.784400849237445*^9}},
 CellLabel->"Out[99]=",ExpressionUUID->"6679af4b-85f6-47f3-984c-83800932f404"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"fig1", "=", 
  RowBox[{"ContourPlot", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"Cos", "[", 
       RowBox[{"\[Psi]", "+", 
        RowBox[{"\[Pi]", "/", "6"}]}], "]"}], "+", 
      FractionBox["20", 
       RowBox[{"2", 
        SqrtBox["3"], "V"}]]}], "\[Equal]", "0"}], ",", 
    RowBox[{"{", 
     RowBox[{"V", ",", "0", ",", "20"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"\[Psi]", ",", "0", ",", "\[Pi]"}], "}"}], ",", 
    RowBox[{"PlotPoints", "\[Rule]", "100"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7844000077073793`*^9, 3.7844001550811925`*^9}, {
  3.7844007124783993`*^9, 3.784400786811591*^9}},
 CellLabel->"In[88]:=",ExpressionUUID->"8da7ed0a-a4d0-426b-8942-d1fbe6ca501d"],

Cell[BoxData[
 GraphicsBox[{GraphicsComplexBox[CompressedData["
1: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
    "], {{}, {}, 
     TagBox[
      TooltipBox[
       {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
        LineBox[CompressedData["
1:eJwl1mPXEIgWBeA3uyZbk227Jtu2bds12bZt27Zt227u07ofnrV/wdn7JGzQ
tkKbQAEBAb8DBwT8SREQhKAEIzghCEkoQhOGsIQjPBH4i4hEIjJRiEo0ohOD
mMQiNnGISzzik4CE/E0iEpOEpCQjOSlISSpSk4a0pCM9GchIJjKThaxkIzs5
yEkucpOHvOQjPwUoSCH+oTBFKEoxilOCkpSiNGUoSznKU4GKVKIyVahKNapT
g5rUojZ1qEs96tOAhjSiMU1oSjOa04KWtKI1bWhLO9rTgY50ojNd6Eo3utOD
nvSiN33oSz/6M4CBDGIwQxjKMIbzLyMYyShGM4axjGM8E5jIJCYzhalMYzoz
mMksZjOHucxjPgtYyCIWs4SlLGM5K1jJKlazhrWsYz0b2MgmNrOFrWxjOzvY
yS52s4e97GM/BzjIIQ5zhKMc4zgnOMkpTnOGs5zjPBe4yCUuc4WrXOM6N7jJ
LW5zh7vc4z4PeMgjHvOEpzzjOS94ySte84a3vOM9H/jIJz7zha984zs/+Mkv
fvMff44/EIEJQlCCEZwQhCQUoQlDWMIRngj8RUQiEZkoRCUa0YlBTGIRmzjE
JR7xSUBC/iYRiUlCUpKRnBSkJBWpSUNa0pGeDGQkE5nJQlaykZ0c5CQXuclD
XvKRnwIUpBD/UJgiFKUYxSlBSUpRmjKUpRzlqUBFKlGZKlSlGtWpQU1qUZs6
1KUe9WlAQxrRmCY0pRnNaUFLWtGaP+Xdlna0pwMd6URnutCVbnSnBz3pRW/6
0Jd+9GcAAxnEYIYwlGEM519GMJJRjGYMYxnHeCYwkUlMZgpTmcZ0ZjCTWcxm
DnOZx3wWsJBFLGYJS1nGclawklWsZg1rWcd6NrCRTWxmC1vZxnZ2sJNd7GYP
e9nHfg5wkEMc5ghHOcZxTnCSU5zmDGc5x3kucJFLXOYKV7nGdW5wk1vc5g53
ucd9HvCQRzzmCU95xnNe8JJXvOYNb3nHez7wkU985gtf+cZ3fvCTX/zmP/4M
fyACE4SgBCM4IQhJKEIThrCEIzwR+IuIRCIyUYhKNKITg5jEIjZxiEs84pOA
hPxNIhKThKQkIzkpSEkqUpOGtKQjPRnISCYyk4WsZCM7OchJLnKTh7zkIz8F
KEgh/qEwRShKMYpTgpKUojRlKEs5ylOBilSiMlWoSjWqU4Oa1KI2dahLPerT
gIY0ojFNaEozmtOClrSiNW1oSzva04GOdKIzXehKN7rTg570ojd96Es/+jOA
gQxiMEMYyjCG8y8jGMkoRjOGsYxjPBOYyCQmM4WpTGM6M5jJLGYzh7nMYz4L
WMgiFrOEpSxjOStYySpWs4a1rGM9G9jIJjazha1sYzs72MkudrOHvexjPwc4
yCEOc4SjHOM4JzjJKU5zhrOc4zwXuMglLnOFq1zjOje4yS1uc4e73OM+D3jI
Ix7zhKc84zkveMkrXvOGt7zjPR/4yCc+84WvfOM7P/jJr8D///v/B+VTg0I=

         "]]},
       RowBox[{
         RowBox[{
           RowBox[{"Cos", "[", 
             RowBox[{
               FractionBox["\[Pi]", "6"], "+", 
               TagBox["\[Psi]", HoldForm]}], "]"}], "+", 
           FractionBox["10", 
            RowBox[{
              SqrtBox["3"], " ", 
              TagBox["V", HoldForm]}]]}], "\[Equal]", "0"}]],
      Annotation[#, 
       Cos[Rational[1, 6] Pi + HoldForm[$CellContext`\[Psi]]] + 
        10 3^Rational[-1, 2]/HoldForm[$CellContext`V] == 0, 
       "Tooltip"]& ]}], {}},
  AspectRatio->1,
  AxesLabel->{None, None},
  AxesOrigin->{0., 0.},
  DisplayFunction->Identity,
  Frame->True,
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "GridLinesInFront" -> 
    True},
  PlotRange->NCache[{{0, 20}, {0, Pi}}, {{0, 20}, {0, 3.141592653589793}}],
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.02]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.7844000669568863`*^9, 3.784400081295539*^9}, {
  3.784400113444584*^9, 3.784400155880089*^9}, {3.78440073638347*^9, 
  3.7844007681205807`*^9}},
 CellLabel->"Out[88]=",ExpressionUUID->"a1265842-89b7-429f-a9cd-f32e378b4502"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  FractionBox["10", 
   RowBox[{
    RowBox[{"-", 
     RowBox[{"Cos", "[", 
      RowBox[{
       RowBox[{"7", "/", "6"}], "\[Pi]"}], "]"}]}], 
    SqrtBox["3"]}]], "//", "N"}]], "Input",
 CellChangeTimes->{{3.7844002673180084`*^9, 3.784400282837536*^9}, {
  3.784400342129919*^9, 
  3.7844003470437775`*^9}},ExpressionUUID->"7890a245-ca37-4dec-a5b9-\
cdba7e89782a"],

Cell[BoxData["6.666666666666667`"], "Output",
 CellChangeTimes->{{3.784400280924617*^9, 3.7844002832414207`*^9}, 
   3.784400342559801*^9},
 CellLabel->"Out[80]=",ExpressionUUID->"147d85e5-3a0a-46c1-9400-6f919f6331f6"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"ArcCos", "[", 
   FractionBox[
    RowBox[{"-", "20"}], 
    RowBox[{"2", 
     SqrtBox["3"], "*", "V"}]], "]"}], "/.", 
  RowBox[{"V", "->", 
   FractionBox["10", 
    RowBox[{
     RowBox[{"-", 
      RowBox[{"Cos", "[", 
       RowBox[{
        RowBox[{"7", "/", "6"}], "\[Pi]"}], "]"}]}], 
     SqrtBox["3"]}]]}]}]], "Input",
 CellChangeTimes->{{3.7844003175815754`*^9, 3.7844003358267775`*^9}},
 CellLabel->"In[79]:=",ExpressionUUID->"835be73c-b305-49ca-a7c3-c66f61f02874"],

Cell[BoxData[
 FractionBox[
  RowBox[{"5", " ", "\[Pi]"}], "6"]], "Output",
 CellChangeTimes->{{3.7844003227776785`*^9, 3.7844003366615443`*^9}},
 CellLabel->"Out[79]=",ExpressionUUID->"ab023824-14a1-4b9a-9a7c-f6f8d531e1c5"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{
    FractionBox[
     RowBox[{"-", "20"}], 
     RowBox[{"2", 
      SqrtBox["3"], "*", "V"}]], "\[Equal]", 
    RowBox[{"Cos", "[", 
     RowBox[{"7", 
      RowBox[{"\[Pi]", "/", "6"}]}], "]"}]}], ",", "V"}], "]"}]], "Input",
 CellChangeTimes->{{3.784400351330338*^9, 3.784400385820069*^9}},
 CellLabel->"In[84]:=",ExpressionUUID->"f719d301-1757-4f91-807a-3856f784cca7"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"V", "\[Rule]", 
    FractionBox["20", "3"]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{{3.7844003602923427`*^9, 3.7844003877499213`*^9}},
 CellLabel->"Out[84]=",ExpressionUUID->"e1b325ea-05a3-4e22-9cc1-98c5a54c8488"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"ArcCos", "[", "x", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7844004846597147`*^9, 3.784400492751075*^9}},
 CellLabel->"In[85]:=",ExpressionUUID->"22ffc974-a3f6-4253-bc26-b163a0ab1007"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
IPJOTxmaTIP//xdYPOEfHlRsDP8FQ4txBg==
       "]]},
     Annotation[#, "Charting`Private`Tag$37624#1"]& ]}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{-1, 1}, {0., 3.1413069393030715`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.7844004930433245`*^9},
 CellLabel->"Out[85]=",ExpressionUUID->"e748419a-91ef-4779-97e2-70268e5c517e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ReliefPlot", "[", 
  RowBox[{
   RowBox[{"Transpose", "@", "kp"}], ",", 
   RowBox[{"DataRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", "20"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", 
        RowBox[{"2", "\[Pi]"}]}], "}"}]}], "}"}]}], ",", 
   RowBox[{"AspectRatio", "\[Rule]", "1"}], ",", 
   RowBox[{"FrameTicks", "\[Rule]", "All"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", "Automatic"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.784397061225279*^9, 3.784397078685548*^9}},
 CellLabel->"In[35]:=",ExpressionUUID->"f8f47f03-464e-4536-bb40-d793409a4bf2"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{
     RasterBox[CompressedData["
1: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
xR/G3jXjxoO+LOzW2hx5yLkV8efeFD3sHUb29ZLFs8TcXDS+ccjjXitK9G59
Vvg5jJuv/Ad/XyO4/ZewWN6XVijyHntIFQzjc477hx7Ce6L6SCJ7e1txpq8h
63biMLp0W3dUh7OgtCJ70zoREmYKR94FvBhG1e0zrsURLOgEB586p00CIpXW
Tt0eRt7bxODqKGIPypfulLUjQd5y06fFV4ZhfDN7y9ALFuyy9//bd42EdYkb
tn51Hcaf9r5U3VgW+IfuyUx8ICH8ha3SpP0w2P+mX76MZ8GScoGuW0cCZ8H6
1aQDw5DWu5W8LpGFDn99xzkeCRPM5qOBVsMoZKXWlxex8OLI4IOXqmTQXMXl
nhPz2SNguP9sJRWN95VrjO9TIDfyz1ElgAEetaTGcIiKXgON/+qCKQjYKDG+
9gcDmclrXN5I0pBzbOcHiUsUOK9bbi+0mIkt7Ee9FgSPiukqStq4UaDtoChv
YMWEboNy7nwXGigbh9klJygwM7h/Z1MMEw2bI5y87tOQeCJI8/QxCu6EC5v5
Efwxjvsuplk09MwJuBjYU6C2SLbW6z8WWguUKg3baWAJ3f8ub0fBs35F46hT
LDyLr/hHm6EhynRmlkXU22J38ne8Je5DKNaIpkCHYt/ij/uIvUC9wM6ktbHw
6OXi3J/b6Wjy7FYdcaLA8L+pq42L2Zg3rXHewJmO88vi+6+domBIXHryohEb
f+e5mX4NJHgvY/7F564U3I/odlQ/zUaAnOZyahQdF0+RjTs9KCg/oN4SEMbG
jsD9U44JdHjk28RPe1Ow8+/VYyNxbHx5kbKYnkuH99ajqd/9KGho+bxhy1c2
Muj3qUbldIh8PNa56CoF5hl5Jao/2OC0D8eZ/aSDkvZ2CfkaBalaOeXJVWyQ
P3zZtbyRjg1J87R2EXvEcNWkW2cFG6ZazayPDXQ05K3pfhBGwVZVjmJ/IRun
g75P6NXRceBLk6TIXQoidgh1qBGc9OHi7dszP+jQNWwYlI4gzslZ+XPqORt9
pYmHDhLn1LSi8jdFUSB1/px5fSAbLnphy4MT6VBrPjTXHE3UWyMaFRzYuJ05
zmQ/p2M7u9va/R0Fku+m6s5tZEPb6O4DNuH7V1cm57mlUvBoy7sadYLzlrzO
CCV50OF3q9rWsICClxreZ9uIexE7uVdokQ0dLjvdojfVUXDiqXMi/QMLV/1f
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
cfB/twfpgw==
      "], {{0, 0}, {20, 2 Pi}}]}, AspectRatio -> 1, Frame -> True, 
    FrameTicks -> {{All, All}, {All, All}}, GridLinesStyle -> Directive[
      GrayLevel[0.5, 0.4]], PlotRange -> {Automatic, Automatic}, 
    PlotRange -> {All, All}],FormBox[
    FormBox[
     TemplateBox[{
       FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           GraphicsBox[{
             RasterBox[CompressedData["
1:eJxFlwmcjvUWxyV3YmZsZbtJ9i1q7q2spR9ZrrJUuLYUQiEx1iRRdmNwiySk
kEtlS8qSUYYwxjIz774/27svM7JV0r3P/zznmff9fHx4/6/3Of/fOd/zO+dt
/tqMIZPurVKlSpH+5x79j/j3mmnhO19dK0TT5fGXjj1sQ395Qb0D/5LxUFzp
/ODPZ/Br2aDX6oy0YeIr3n73zpexf4p/Zt66s/il2aFZkz+04X1Xj3dG7pXx
TMS1748xv2Dz9PuX/nzRhm3//vyb/U4ZV1+3had2OIc3T87Z0KiaHUdLq/ir
1lAwLljSwvP7OTyT6diV28MOiwjTTcG1CZdeGXDhPOqO7Hbkwjw7yovOPLt/
ioIlyvnNP266AG331rPNDtmR1a/13KpbFDww/oylw6QiHL1+1zo/akfbwhV7
RlxU8GXgVK1tT1xEXi8RyYHedEEFnV898Vx21WKMWV94s90YB+htBxXnvN8v
W1hSjH/4WmV88LEDCzp/88yIl1WMfPnbnxLbL6Fqh5UNXFcc2HQ4e+a+NSpI
7luXYZsfbfPP6k4cfmz6rntOqlgwcm+ny09dwd5zA7qs7uXEla+v2oYnVJDM
zKt4V2R3gRMx/Vv7HtI4T1cxWMg/4kTGro+63zNIQ4Opg66vG1qC5iLNSSda
NL0xbfh7Gsa2L65z/kQJbgi5bVzosVU8QMPeSP/H/te8FOdF2HEujGooMq2h
Yo+4SCm2fCpeLszVqzC8VhDtFuUff7NGGR49/Fn5nnMu2LaEmuyJaBg/bEjb
L1aX4fTFHX1/uO7CkzuPdPmtUMOWRxp9bK1hwTBVFMCNDV8teem5zzSUiXLm
WRDRKSob5Mb1Qy++ueVtjfVaWa8bQ449rBOmoTcBZEVtCuzGYT27T3fUsHBp
zsD/ZtqwU4961+pG3fMnjq3N0HBk1M3j7jwb182D3CuryvySikTOj21rZ9lR
NO/U5w/meFCiZznnRxWt9er1XmPn+nqQQ/VU8arAN8vB+fBgvfZr07IZKtfT
AR1aXbAHqfjP3Vo+r+KqCJPlREPXldtDVQ8G69WY00pF9bGbB9bPd+Lra6Ix
vNivU/DLXwp6dhIXdDHPXmQTMArmZ7XSU+1CqU77oqleTKvx+xdvfKfgkBz9
+HC2G5OeCryw9hMvLtURghXEjh68N5zvxm9DRaK96CDSPllBi3VzZzau6UE+
9asXeU0npEY/q2D0RPEAD/evj7lSsEGnaFlNL6i8A3x4Tqfj7i0ZxRTHi34i
zfN9+EqndXCpjGrh/HbJmj6Q3N0+VCewZDxdMGRT83U+vCXClvkwuc+UGRXL
ZebIjyr08jN3Mg6QP/ixUXz8qB9thv5NJ1pGiDoygLbieqP9WDHaclKtJ+Nh
Aj0AasOVfgTH77A/WS6h461PfBvuk7gv/OgrwhZJ7E8SFLIpP77UKXPskjBR
2MZKie8VQDVKvIT3j/bUrUOCiKqnChMWC8OSsG1ny+N/3idj21lhZAGQbTwu
4fjajIoG/WX2gQDnXYJd9PkqGWd0qtYXBtgPAviV/EqGLlZPdQCndXreXRpA
rRcObpxUXeH76Pfo/9N7TboG8Ej3j4oX91cgqPW1ktBzhDAYP8jOVil8Twl/
Tbqtjd/hB8m/oHD/SCgQNjrcj0V3uudeqa7y/SXuHz+2ijbur4LsVddP4X7y
Gb67WuV+kPCHTmFstg9WvQpNilS8I2xsn4RjAr92PqNPamisV8LbdGGda2p8
jfmW0Fng86HX8JPVGudBwg2P44PZ/bwgXIo0fCHkZsg4Epv9ff07HsNnagSZ
Vxmzfq8dPXrQg/cgGimIJ+gl43FKiMfwn9VB/lyGXqQX/2zkwQ/17xSnioKV
/B1srS3dftlt+FJmCJS+eTKmPylIcHN/h7hvZHTsLSad2/CrvBDzJEN00/K4
i+dJCKmFIrCMr8eJi7vQR/hYZhhdV4sBI4NkDnNhnLCH58MQLjQtLLPPuoz6
5IVRLGz1rgxqt1NOnpdh1Bc2WU8BjbdZTsP3MiM8nxRMpMBOlPZxVtx4PsLz
RYFO8Uo910gKP1wT4XmtgMblfxyo3nj7q+2LIyCbma5gp95dXfs6ICjonRUF
2cZyBeMJGDt60QCO4qqwga0Kmomxc8AOGv9roqC2PqwgoLt+0wl2vHO+vY5Y
tJLT7XV3F5xuaDd8NSsGo+0UjGkmnmxjP4rhlsDqpoLGBKQNZOtrYuyjKtxi
rehkQ1zgUhwDpbmFik9FemNW3Cd8ODvOe4M5p60Q3ZczMI4mVGCV56jVeG5+
HK/TS+W5beV7xUFjdqGKjSuX685kMXw7O4E/Fk3VNxcVQ3UXnDvTgo23MvTI
CfShxUnF/UJuGwu+FX6en4CeZL2gKkq+EwUsw+VL4pUAjUOHChpL68v4fQIz
BW4VKvtJGYz1K8HzUwO1ey0LEsRjwuCzpQay40EWzmOC547GXFvYl5NGnBEa
38PCz00acXM1UDtlW5m/JPeBxnWy8lxJcl9oPF+taE8DNmnELdCYYyv3Lcd1
mHuAje/HcSs07mNz3+S4mUGezzb2O47bMogJxJeN5zrH7RHkOtrxBtXV1Bvk
59pZZxJ0/dwgjtOcsfNeYuoNoiMJtnM/mHqDIJvOcHDdkqDHFARxPy0MDt6r
TL1BLKPvO/j7HLciCGqnsw5Qmg+YekOYSnuxEyT3mKk3BC81qJP9l+P2COEF
AszJ9TT1hkDXK3TyPcz6hozyVnUxV8lKnzP8w8VcmXpDILkfuJgrs74h5trF
XKU4Tojfs39mpri+IVA7wc1cpfjzMM8lN3OVYr1hkE2fcjNXKa5vGLSG3nUz
Vxx3RJg/9/DfHDc3zH3s4fpzXN13W4r166SHueK4u8LYJGxan0cGVxy3IMxz
2MtcpeAkvWHmxsvxUlzfMBI0H7z8uak3grEk2MtcmXojIJvu5mOuUlzfCPrw
XmZwZeqNMB8+vjfHzY3gEWEbt33Mlak3AmrfLn7+nqk3wvPQz1yZeiNYQvuv
n7ky6xsB/bebfn5v6o2AytspwFyZeqNwizTPCTBXpt4oSO6RAHNl1jcKCns9
wByVs94oSP7fJX5uOec7yn4vMVflrDdq7COjJOaqnPVGec+VmKty1hvFYtF4
myXmiuM6opwvie/HcSuixlx1mvsnx82MgWz7tsRccdyWMZANN5SZK47bI4bt
VBeZuSo3uBoRY90y6zT1xir3F4MrU28MZGObZObK1BvjOsrMVTn7VQzGz2+Z
uTL1xri+Mn+/nOsbw2PCBuorzJWpN851VzhPpt648bttmMJcmXrjzIPCXJn1
jYPkbFT4Hhw3N877vsJcmXrjWCHSbFGYK1NvnPlRmCuzvnFjbj+gMlcVHCfO
9U6fG/WLc77T58RHowTrT58b/CX4Hulz43dNgjnTKs+NuiW43ulzY79KVM5V
89zwqQT/vkmfG/t3gvkOVp4b+2QCr1DB0+fm3DbqnT6fTQVMsp+lz2kcjEsa
dakXqjw35kESJPel9DmN+x1J5ix9Xsjzisp9KX3egH5YJivngHluzL8U91X6
3Ph9lGK+0+fG3E1xnPT56+zTxvsI/g9eITvj
              "], {{
                Rational[-15, 2], -180}, {
                Rational[15, 2], 180}}], {Antialiasing -> False, 
              AbsoluteThickness[0.1], 
              Directive[
               Opacity[0.3], 
               GrayLevel[0]], 
              LineBox[
               NCache[{{
                  Rational[15, 2], -180}, {
                  Rational[-15, 2], -180}, {
                  Rational[-15, 2], 180}, {
                  Rational[15, 2], 180}, {
                  Rational[15, 2], -180}}, {{
                 7.5, -180}, {-7.5, -180}, {-7.5, 180}, {7.5, 180}, {
                 7.5, -180}}]]}, {
              CapForm[None], {}}, 
             StyleBox[{Antialiasing -> False, 
               StyleBox[
                
                LineBox[{{7.5, -179.99999999999997`}, {7.5, 
                 179.99999999999997`}}], 
                Directive[
                 AbsoluteThickness[0.2], 
                 Opacity[0.3], 
                 GrayLevel[0]], StripOnInput -> False], 
               StyleBox[
                StyleBox[{{
                   StyleBox[
                    LineBox[{{{7.5, -179.99999999999997`}, 
                    Offset[{4., 0}, {7.5, -179.99999999999997`}]}, {{
                    7.5, -102.5806451612903}, 
                    Offset[{4., 0}, {7.5, -102.5806451612903}]}, {{
                    7.5, -25.161290322580623`}, 
                    Offset[{4., 0}, {7.5, -25.161290322580623`}]}, {{7.5, 
                    52.258064516129025`}, 
                    Offset[{4., 0}, {7.5, 52.258064516129025`}]}, {{7.5, 
                    129.67741935483872`}, 
                    Offset[{4., 0}, {7.5, 129.67741935483872`}]}}], 
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]], StripOnInput -> False], 
                   StyleBox[
                    LineBox[{{{7.5, -164.51612903225805`}, 
                    Offset[{2.5, 0.}, {7.5, -164.51612903225805`}]}, {{
                    7.5, -149.0322580645161}, 
                    Offset[{2.5, 0.}, {7.5, -149.0322580645161}]}, {{
                    7.5, -133.54838709677418`}, 
                    Offset[{2.5, 0.}, {7.5, -133.54838709677418`}]}, {{
                    7.5, -118.06451612903224`}, 
                    Offset[{2.5, 0.}, {7.5, -118.06451612903224`}]}, {{
                    7.5, -87.09677419354836}, 
                    Offset[{2.5, 0.}, {7.5, -87.09677419354836}]}, {{
                    7.5, -71.61290322580643}, 
                    Offset[{2.5, 0.}, {7.5, -71.61290322580643}]}, {{
                    7.5, -56.1290322580645}, 
                    Offset[{2.5, 0.}, {7.5, -56.1290322580645}]}, {{
                    7.5, -40.64516129032257}, 
                    Offset[{2.5, 0.}, {7.5, -40.64516129032257}]}, {{
                    7.5, -9.677419354838694}, 
                    Offset[{2.5, 0.}, {7.5, -9.677419354838694}]}, {{7.5, 
                    5.806451612903254}, 
                    Offset[{2.5, 0.}, {7.5, 5.806451612903254}]}, {{7.5, 
                    21.290322580645164`}, 
                    Offset[{2.5, 0.}, {7.5, 21.290322580645164`}]}, {{7.5, 
                    36.77419354838711}, 
                    Offset[{2.5, 0.}, {7.5, 36.77419354838711}]}, {{7.5, 
                    67.74193548387098}, 
                    Offset[{2.5, 0.}, {7.5, 67.74193548387098}]}, {{7.5, 
                    83.22580645161293}, 
                    Offset[{2.5, 0.}, {7.5, 83.22580645161293}]}, {{7.5, 
                    98.70967741935483}, 
                    Offset[{2.5, 0.}, {7.5, 98.70967741935483}]}, {{7.5, 
                    114.19354838709678`}, 
                    Offset[{2.5, 0.}, {7.5, 114.19354838709678`}]}, {{7.5, 
                    145.16129032258067`}, 
                    Offset[{2.5, 0.}, {7.5, 145.16129032258067`}]}, {{7.5, 
                    160.6451612903226}, 
                    Offset[{2.5, 0.}, {7.5, 160.6451612903226}]}, {{7.5, 
                    176.12903225806448`}, 
                    Offset[{2.5, 0.}, {7.5, 176.12903225806448`}]}}], 
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4], 
                    Opacity[0.3]], StripOnInput -> False]}, 
                  StyleBox[
                   StyleBox[{{
                    StyleBox[{
                    InsetBox[
                    FormBox["0", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, -179.99999999999997`}], {-1, 0.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox["\"0.01\"", 0.01, AutoDelete -> True], 
                    NumberForm[#, {
                    DirectedInfinity[1], 2}]& ], TraditionalForm], 
                    Offset[{7., 0.}, {7.5, -102.5806451612903}], {-1, 0.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox["\"0.02\"", 0.02, AutoDelete -> True], 
                    NumberForm[#, {
                    DirectedInfinity[1], 2}]& ], TraditionalForm], 
                    Offset[{7., 0.}, {7.5, -25.161290322580623`}], {-1, 0.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox["\"0.03\"", 0.03, AutoDelete -> True], 
                    NumberForm[#, {
                    DirectedInfinity[1], 2}]& ], TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 52.258064516129025`}], {-1, 0.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox["\"0.04\"", 0.04, AutoDelete -> True], 
                    NumberForm[#, {
                    DirectedInfinity[1], 2}]& ], TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 129.67741935483872`}], {-1, 0.}, 
                    Automatic, {1, 0}]}, 
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]], {
                    Directive[
                    Opacity[1]], 
                    Directive[
                    Opacity[1]]}, StripOnInput -> False], 
                    
                    StyleBox[{{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}}, 
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4], 
                    Opacity[0.3]], {
                    Directive[
                    Opacity[1]], 
                    Directive[
                    Opacity[1]]}, StripOnInput -> False]}, {}}, {
                    Directive[
                    Opacity[1]], 
                    Directive[
                    Opacity[1]]}, StripOnInput -> False], "GraphicsLabel", 
                   StripOnInput -> False]}, "GraphicsTicks", StripOnInput -> 
                 False], {
                 Directive[
                  AbsoluteThickness[0.2], 
                  GrayLevel[0.4]], 
                 Directive[
                  AbsoluteThickness[0.2], 
                  GrayLevel[0.4], 
                  Opacity[0.3]]}, StripOnInput -> False]}, "GraphicsAxes", 
              StripOnInput -> False]}, PlotRangePadding -> Scaled[0.02], 
            PlotRange -> All, Frame -> True, 
            FrameTicks -> {{False, False}, {True, False}}, FrameStyle -> 
            Opacity[0], FrameTicksStyle -> Opacity[0], 
            ImageSize -> {Automatic, 360}, BaseStyle -> {}], Alignment -> 
           Left, AppearanceElements -> None, ImageMargins -> {{5, 5}, {5, 5}},
            ImageSizeAction -> "ResizeToFit"], LineIndent -> 0, StripOnInput -> 
          False], {FontFamily -> "Arial"}, Background -> Automatic, 
         StripOnInput -> False], TraditionalForm]}, "BarLegend", 
      DisplayFunction -> (#& ), 
      InterpretationFunction :> (RowBox[{"BarLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{
                 RowBox[{"Blend", "[", 
                   RowBox[{"\"M10DefaultDensityGradient\"", ",", "#1"}], 
                   "]"}], "&"}], ",", 
               RowBox[{"{", 
                 RowBox[{"0.000011110649`", ",", "0.046547059`"}], "}"}]}], 
             "}"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
           RowBox[{"LegendMarkerSize", "\[Rule]", "360"}], ",", 
           RowBox[{"Charting`TickSide", "\[Rule]", "Right"}], ",", 
           RowBox[{"ColorFunctionScaling", "\[Rule]", "True"}]}], "]"}]& )], 
     TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.784397061799743*^9, 3.784397079527297*^9}},
 CellLabel->"Out[35]=",ExpressionUUID->"37c642f5-3acb-4586-8a32-63faf00cfd7d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ReliefPlot", "[", 
  RowBox[{
   RowBox[{"Transpose", "@", "knw20"}], ",", 
   RowBox[{"DataRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", "20"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", 
        RowBox[{"2", "\[Pi]"}]}], "}"}]}], "}"}]}], ",", 
   RowBox[{"AspectRatio", "\[Rule]", "1"}], ",", 
   RowBox[{"FrameTicks", "\[Rule]", "All"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", "Automatic"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7843999857760115`*^9, 3.784399988888685*^9}},
 CellLabel->"In[64]:=",ExpressionUUID->"6576e08d-f940-4078-8740-744502d92b66"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{
     RasterBox[CompressedData["
1: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
heG27GIBwg1uKpV712Ch3n8R2k9oeDPYqvbjugBWKzXd3uVVY+Sde98Lbxq2
Ga07VHFEgJaoah1FlWq8W83eYWdGg6hvuaEdiEfd26cZnFyFqb9Zfz01aJio
b3uqtYzwh7XL+u7mKqwwMDY7PZuGeb+mO0nJCeCcIDt7+mfSWZ6xOnojVEhf
tXZmjv///o54WZIue+ia6VTYRwXlIzNU9I2Pj4dSQ2O8K7FE4qO0KYeKXXrd
Sy+SnvjgsmByGCoRozCZadhOuLF/ZeUSNh+H/xbPt1OqxD7JnckadeR84Y6v
Pp3Er2z+CmL+UqBWyXZ4STrr9VKNIDmy/20+mIVM55Jeaytt9SKd9V/zUH81
6Sy8ExW31lKQtOqNlSHprIKoI58Pk84au+AydXEBBY23C+3Eb6jQOLny4GvS
WWuOXv7q9IKC+99jPxuTzrKtKdh6n9zPtzXLoqY+pGBu79103UwqprTunjFK
/Kd+y4WUt7cpeL3WRucB8Z+lr25o1xL/uRtxo2cu8SWHfscOV+I/NH718j7C
nzvJp6wZwRSc7napuE7857XYNNeG+M/ssMoNLf4UiJw3rPpG+PNrfED5L+FP
p2I2v5L40oo3vu/jnlLx5/u9ylbCH/8lXR/veFBwmLpVxYNw6V6jdmn7Gz6u
LdHoaXKhwCzKfUQ+iYqhZ79F+Tl8cCfezNtp1Iv0Qsc+NpOPkw8uzrb/QseK
GZ5zHYhHyfsU7zpL/n1Oc27moZcMjI0V/uRr92DqzV6/p+Gke9YPWO5zJ93Q
5tdo8EiM8GH9PXPs+TheezcjdCULnjn1n1KkxGgvmbnRaxkfCZemnToyxMKW
z0kXbY+JkECzz7X5xoP3IsnnBz6yMfHUcGZQsRDnDx7ccKKQB4F/1I3BuxwU
7NZ9v3eqEIEzbzyzCuJh3LL0ZNqpbgjKflBXkv3J77YZqd/IA2y/LJOx5OKA
7MeyvKt8uOh/Hz0m5iLMhttfrsyD4qQf7gN5PDKHfcGa5HEtn27OWhzHw+ue
33NZuVy4Cs59uZnbDVbiyzHVWXxIVpxY96mfg2P2fqUlst1Y+9Xi36lI4nfy
R31+K7FheS1GPuo4B5w7J56FyJIe8fR66gMmwsKrt3sUsJH1vfeLc4wA0U7+
UsNk/oObSnetkmHjWIXeAvY8IXRH5qUsjqZBx4ZiPOcIC8/bs4P97wnBna7D
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
81fcf1mJ4xrT15NuNSArX/j+s921EDxI67PaUwWNab7jPzS6EXqoPpQRzsVQ
3MzZZf0sTAboxWo6Ep6U2cucjebi70PjOzUXWXjFyHbXCOtGS1iebcULLm5Q
Fm5zmWbiVFbWp+z8bqz0xYlfr7gQfDGp9/sOE4MRjZ213d2Q/JPp0p/Axaf1
S/4+WkJykP3vqkCxHvgliL7IfcvFphfpAvtfMnCgWWxhlU4PDuQmWTglEv6c
eHLLcB0DEUd6lHPtemBYMJPZTeZHBN36fewrHdftnqw0v9qDrQffL7d+w4Wj
+C7dst10vEr4cvb2sx4kSoWlpbzmou75lJMfm4arNe/eXs7twaikcNDPWC7a
VoZkXyO5+Ym80phCQw9C+JXq1zzl4vVvH7OWuTSsyozeENLfgzpx/3MOkVwo
/nJcFfW8AapjGRaF/L1omXFc/TCUC/EM//YPmxqwf+fctd8lerH+8P70oltc
+HSsSdxUWQ9a9T2v6NW9uHX38XE+f1IHs9Pjl58k17/+tJfl5l6cZeUEmF3k
YqrBwvgyfz3466Vucbb3YlinViHWlYuzCw22GcbW4XrpzCL7vb04Hs2rFLLn
IjYgfMrLoA6nu/l2l9j2oiPuxugdwvlF26xblFpqscwzkKZwrBc8xeZbioTz
BUr3ynb418Luz4J350/2IsaYX5dJOL/le1U3Z0UtklYddX1m2QsPY8sh59Vc
jApHSMWI18Lw6KNVhUq9uDTZKlQgw8XHna9LvivX4vgX2yrVvz0wji8JIeTC
Y++vXyS1alHswMtqrO5BTa6B/sspklPDWMbRJrU4Kf/Moz6+B2eiIjVU+znY
az3D2GFVizUFebWLfXogGJ7ILmgkvrYtXGk58Q+xKyqZMZY9+CG3dMr5B4f8
jr0Fy4/Xwv7ITluX5T3I0Fnz/P/7e7aLrT+1/XQtXh4Llb/4k+y3m38kK+I4
CNlQUh98rhYlC+YGFX7vhn1Q1qx7wRxUhK+JG/CsxSHtSUnTiG5s+X1EdOcl
DvQmjPWOX6pF4UbTw/zO3ZC7Ii4yx56D9b6zsrsukvUzQzh9G7rRMUXp+7id
g/C2T4wzF2qxa0Ni6tRMF76PHx058P//y5+rOjbkUYttnSNn1Su7IJd827JZ
jIPnzC7voydrUUSVGTof3YXb6uJbjH+zQYmsqEuxr8XrdwudKSQvLP7uYXWV
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
5+D/AeuuljU=
      "], {{0, 0}, {20, 2 Pi}}]}, AspectRatio -> 1, Frame -> True, 
    FrameTicks -> {{All, All}, {All, All}}, GridLinesStyle -> Directive[
      GrayLevel[0.5, 0.4]], PlotRange -> {Automatic, Automatic}, 
    PlotRange -> {All, All}],FormBox[
    FormBox[
     TemplateBox[{
       FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           GraphicsBox[{
             RasterBox[CompressedData["
1:eJxFlwmcjvUWxyV3YmZsZbtJ9i1q7q2spR9ZrrJUuLYUQiEx1iRRdmNwiySk
kEtlS8qSUYYwxjIz774/27svM7JV0r3P/zznmff9fHx4/6/3Of/fOd/zO+dt
/tqMIZPurVKlSpH+5x79j/j3mmnhO19dK0TT5fGXjj1sQ395Qb0D/5LxUFzp
/ODPZ/Br2aDX6oy0YeIr3n73zpexf4p/Zt66s/il2aFZkz+04X1Xj3dG7pXx
TMS1748xv2Dz9PuX/nzRhm3//vyb/U4ZV1+3had2OIc3T87Z0KiaHUdLq/ir
1lAwLljSwvP7OTyT6diV28MOiwjTTcG1CZdeGXDhPOqO7Hbkwjw7yovOPLt/
ioIlyvnNP266AG331rPNDtmR1a/13KpbFDww/oylw6QiHL1+1zo/akfbwhV7
RlxU8GXgVK1tT1xEXi8RyYHedEEFnV898Vx21WKMWV94s90YB+htBxXnvN8v
W1hSjH/4WmV88LEDCzp/88yIl1WMfPnbnxLbL6Fqh5UNXFcc2HQ4e+a+NSpI
7luXYZsfbfPP6k4cfmz6rntOqlgwcm+ny09dwd5zA7qs7uXEla+v2oYnVJDM
zKt4V2R3gRMx/Vv7HtI4T1cxWMg/4kTGro+63zNIQ4Opg66vG1qC5iLNSSda
NL0xbfh7Gsa2L65z/kQJbgi5bVzosVU8QMPeSP/H/te8FOdF2HEujGooMq2h
Yo+4SCm2fCpeLszVqzC8VhDtFuUff7NGGR49/Fn5nnMu2LaEmuyJaBg/bEjb
L1aX4fTFHX1/uO7CkzuPdPmtUMOWRxp9bK1hwTBVFMCNDV8teem5zzSUiXLm
WRDRKSob5Mb1Qy++ueVtjfVaWa8bQ449rBOmoTcBZEVtCuzGYT27T3fUsHBp
zsD/ZtqwU4961+pG3fMnjq3N0HBk1M3j7jwb182D3CuryvySikTOj21rZ9lR
NO/U5w/meFCiZznnRxWt9er1XmPn+nqQQ/VU8arAN8vB+fBgvfZr07IZKtfT
AR1aXbAHqfjP3Vo+r+KqCJPlREPXldtDVQ8G69WY00pF9bGbB9bPd+Lra6Ix
vNivU/DLXwp6dhIXdDHPXmQTMArmZ7XSU+1CqU77oqleTKvx+xdvfKfgkBz9
+HC2G5OeCryw9hMvLtURghXEjh68N5zvxm9DRaK96CDSPllBi3VzZzau6UE+
9asXeU0npEY/q2D0RPEAD/evj7lSsEGnaFlNL6i8A3x4Tqfj7i0ZxRTHi34i
zfN9+EqndXCpjGrh/HbJmj6Q3N0+VCewZDxdMGRT83U+vCXClvkwuc+UGRXL
ZebIjyr08jN3Mg6QP/ixUXz8qB9thv5NJ1pGiDoygLbieqP9WDHaclKtJ+Nh
Aj0AasOVfgTH77A/WS6h461PfBvuk7gv/OgrwhZJ7E8SFLIpP77UKXPskjBR
2MZKie8VQDVKvIT3j/bUrUOCiKqnChMWC8OSsG1ny+N/3idj21lhZAGQbTwu
4fjajIoG/WX2gQDnXYJd9PkqGWd0qtYXBtgPAviV/EqGLlZPdQCndXreXRpA
rRcObpxUXeH76Pfo/9N7TboG8Ej3j4oX91cgqPW1ktBzhDAYP8jOVil8Twl/
Tbqtjd/hB8m/oHD/SCgQNjrcj0V3uudeqa7y/SXuHz+2ijbur4LsVddP4X7y
Gb67WuV+kPCHTmFstg9WvQpNilS8I2xsn4RjAr92PqNPamisV8LbdGGda2p8
jfmW0Fng86HX8JPVGudBwg2P44PZ/bwgXIo0fCHkZsg4Epv9ff07HsNnagSZ
Vxmzfq8dPXrQg/cgGimIJ+gl43FKiMfwn9VB/lyGXqQX/2zkwQ/17xSnioKV
/B1srS3dftlt+FJmCJS+eTKmPylIcHN/h7hvZHTsLSad2/CrvBDzJEN00/K4
i+dJCKmFIrCMr8eJi7vQR/hYZhhdV4sBI4NkDnNhnLCH58MQLjQtLLPPuoz6
5IVRLGz1rgxqt1NOnpdh1Bc2WU8BjbdZTsP3MiM8nxRMpMBOlPZxVtx4PsLz
RYFO8Uo910gKP1wT4XmtgMblfxyo3nj7q+2LIyCbma5gp95dXfs6ICjonRUF
2cZyBeMJGDt60QCO4qqwga0Kmomxc8AOGv9roqC2PqwgoLt+0wl2vHO+vY5Y
tJLT7XV3F5xuaDd8NSsGo+0UjGkmnmxjP4rhlsDqpoLGBKQNZOtrYuyjKtxi
rehkQ1zgUhwDpbmFik9FemNW3Cd8ODvOe4M5p60Q3ZczMI4mVGCV56jVeG5+
HK/TS+W5beV7xUFjdqGKjSuX685kMXw7O4E/Fk3VNxcVQ3UXnDvTgo23MvTI
CfShxUnF/UJuGwu+FX6en4CeZL2gKkq+EwUsw+VL4pUAjUOHChpL68v4fQIz
BW4VKvtJGYz1K8HzUwO1ey0LEsRjwuCzpQay40EWzmOC547GXFvYl5NGnBEa
38PCz00acXM1UDtlW5m/JPeBxnWy8lxJcl9oPF+taE8DNmnELdCYYyv3Lcd1
mHuAje/HcSs07mNz3+S4mUGezzb2O47bMogJxJeN5zrH7RHkOtrxBtXV1Bvk
59pZZxJ0/dwgjtOcsfNeYuoNoiMJtnM/mHqDIJvOcHDdkqDHFARxPy0MDt6r
TL1BLKPvO/j7HLciCGqnsw5Qmg+YekOYSnuxEyT3mKk3BC81qJP9l+P2COEF
AszJ9TT1hkDXK3TyPcz6hozyVnUxV8lKnzP8w8VcmXpDILkfuJgrs74h5trF
XKU4Tojfs39mpri+IVA7wc1cpfjzMM8lN3OVYr1hkE2fcjNXKa5vGLSG3nUz
Vxx3RJg/9/DfHDc3zH3s4fpzXN13W4r166SHueK4u8LYJGxan0cGVxy3IMxz
2MtcpeAkvWHmxsvxUlzfMBI0H7z8uak3grEk2MtcmXojIJvu5mOuUlzfCPrw
XmZwZeqNMB8+vjfHzY3gEWEbt33Mlak3AmrfLn7+nqk3wvPQz1yZeiNYQvuv
n7ky6xsB/bebfn5v6o2AytspwFyZeqNwizTPCTBXpt4oSO6RAHNl1jcKCns9
wByVs94oSP7fJX5uOec7yn4vMVflrDdq7COjJOaqnPVGec+VmKty1hvFYtF4
myXmiuM6opwvie/HcSuixlx1mvsnx82MgWz7tsRccdyWMZANN5SZK47bI4bt
VBeZuSo3uBoRY90y6zT1xir3F4MrU28MZGObZObK1BvjOsrMVTn7VQzGz2+Z
uTL1xri+Mn+/nOsbw2PCBuorzJWpN851VzhPpt648bttmMJcmXrjzIPCXJn1
jYPkbFT4Hhw3N877vsJcmXrjWCHSbFGYK1NvnPlRmCuzvnFjbj+gMlcVHCfO
9U6fG/WLc77T58RHowTrT58b/CX4Hulz43dNgjnTKs+NuiW43ulzY79KVM5V
89zwqQT/vkmfG/t3gvkOVp4b+2QCr1DB0+fm3DbqnT6fTQVMsp+lz2kcjEsa
dakXqjw35kESJPel9DmN+x1J5ix9Xsjzisp9KX3egH5YJivngHluzL8U91X6
3Ph9lGK+0+fG3E1xnPT56+zTxvsI/g9eITvj
              "], {{
                Rational[-15, 2], -180}, {
                Rational[15, 2], 180}}], {Antialiasing -> False, 
              AbsoluteThickness[0.1], 
              Directive[
               Opacity[0.3], 
               GrayLevel[0]], 
              LineBox[
               NCache[{{
                  Rational[15, 2], -180}, {
                  Rational[-15, 2], -180}, {
                  Rational[-15, 2], 180}, {
                  Rational[15, 2], 180}, {
                  Rational[15, 2], -180}}, {{
                 7.5, -180}, {-7.5, -180}, {-7.5, 180}, {7.5, 180}, {
                 7.5, -180}}]]}, {
              CapForm[None], {}}, 
             StyleBox[{Antialiasing -> False, 
               StyleBox[
                LineBox[{{7.5, -180.}, {7.5, 180.}}], 
                Directive[
                 AbsoluteThickness[0.2], 
                 Opacity[0.3], 
                 GrayLevel[0]], StripOnInput -> False], 
               StyleBox[
                StyleBox[{{
                   StyleBox[
                    LineBox[{{{7.5, -180.}, 
                    Offset[{4., 0}, {7.5, -180.}]}, {{
                    7.5, -106.22950819672133`}, 
                    Offset[{4., 0}, {7.5, -106.22950819672133`}]}, {{
                    7.5, -32.45901639344263}, 
                    Offset[{4., 0}, {7.5, -32.45901639344263}]}, {{7.5, 
                    41.31147540983602}, 
                    Offset[{4., 0}, {7.5, 41.31147540983602}]}, {{7.5, 
                    115.08196721311474`}, 
                    Offset[{4., 0}, {7.5, 115.08196721311474`}]}}], 
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]], StripOnInput -> False], 
                   StyleBox[
                    LineBox[{{{7.5, -165.24590163934425`}, 
                    Offset[{2.5, 0.}, {7.5, -165.24590163934425`}]}, {{
                    7.5, -150.49180327868854`}, 
                    Offset[{2.5, 0.}, {7.5, -150.49180327868854`}]}, {{
                    7.5, -135.7377049180328}, 
                    Offset[{2.5, 0.}, {7.5, -135.7377049180328}]}, {{
                    7.5, -120.98360655737704`}, 
                    Offset[{2.5, 0.}, {7.5, -120.98360655737704`}]}, {{
                    7.5, -91.47540983606557}, 
                    Offset[{2.5, 0.}, {7.5, -91.47540983606557}]}, {{
                    7.5, -76.72131147540983}, 
                    Offset[{2.5, 0.}, {7.5, -76.72131147540983}]}, {{
                    7.5, -61.96721311475411}, 
                    Offset[{2.5, 0.}, {7.5, -61.96721311475411}]}, {{
                    7.5, -47.21311475409838}, 
                    Offset[{2.5, 0.}, {7.5, -47.21311475409838}]}, {{
                    7.5, -17.7049180327869}, 
                    Offset[{2.5, 0.}, {7.5, -17.7049180327869}]}, {{
                    7.5, -2.95081967213115}, 
                    Offset[{2.5, 0.}, {7.5, -2.95081967213115}]}, {{7.5, 
                    11.803278688524562`}, 
                    Offset[{2.5, 0.}, {7.5, 11.803278688524562`}]}, {{7.5, 
                    26.55737704918031}, 
                    Offset[{2.5, 0.}, {7.5, 26.55737704918031}]}, {{7.5, 
                    56.065573770491774`}, 
                    Offset[{2.5, 0.}, {7.5, 56.065573770491774`}]}, {{7.5, 
                    70.81967213114753}, 
                    Offset[{2.5, 0.}, {7.5, 70.81967213114753}]}, {{7.5, 
                    85.57377049180323}, 
                    Offset[{2.5, 0.}, {7.5, 85.57377049180323}]}, {{7.5, 
                    100.32786885245898`}, 
                    Offset[{2.5, 0.}, {7.5, 100.32786885245898`}]}, {{7.5, 
                    129.83606557377047`}, 
                    Offset[{2.5, 0.}, {7.5, 129.83606557377047`}]}, {{7.5, 
                    144.5901639344262}, 
                    Offset[{2.5, 0.}, {7.5, 144.5901639344262}]}, {{7.5, 
                    159.3442622950819}, 
                    Offset[{2.5, 0.}, {7.5, 159.3442622950819}]}, {{7.5, 
                    174.09836065573768`}, 
                    Offset[{2.5, 0.}, {7.5, 174.09836065573768`}]}}], 
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4], 
                    Opacity[0.3]], StripOnInput -> False]}, 
                  StyleBox[
                   StyleBox[{{
                    StyleBox[{
                    InsetBox[
                    FormBox["0", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, -180.}], {-1, 0.}, Automatic, {1, 
                    0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox["\"0.01\"", 0.01, AutoDelete -> True], 
                    NumberForm[#, {
                    DirectedInfinity[1], 2}]& ], TraditionalForm], 
                    Offset[{7., 0.}, {7.5, -106.22950819672133`}], {-1, 0.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox["\"0.02\"", 0.02, AutoDelete -> True], 
                    NumberForm[#, {
                    DirectedInfinity[1], 2}]& ], TraditionalForm], 
                    Offset[{7., 0.}, {7.5, -32.45901639344263}], {-1, 0.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox["\"0.03\"", 0.03, AutoDelete -> True], 
                    NumberForm[#, {
                    DirectedInfinity[1], 2}]& ], TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 41.31147540983602}], {-1, 0.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox["\"0.04\"", 0.04, AutoDelete -> True], 
                    NumberForm[#, {
                    DirectedInfinity[1], 2}]& ], TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 115.08196721311474`}], {-1, 0.}, 
                    Automatic, {1, 0}]}, 
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]], {
                    Directive[
                    Opacity[1]], 
                    Directive[
                    Opacity[1]]}, StripOnInput -> False], 
                    
                    StyleBox[{{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}}, 
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4], 
                    Opacity[0.3]], {
                    Directive[
                    Opacity[1]], 
                    Directive[
                    Opacity[1]]}, StripOnInput -> False]}, {}}, {
                    Directive[
                    Opacity[1]], 
                    Directive[
                    Opacity[1]]}, StripOnInput -> False], "GraphicsLabel", 
                   StripOnInput -> False]}, "GraphicsTicks", StripOnInput -> 
                 False], {
                 Directive[
                  AbsoluteThickness[0.2], 
                  GrayLevel[0.4]], 
                 Directive[
                  AbsoluteThickness[0.2], 
                  GrayLevel[0.4], 
                  Opacity[0.3]]}, StripOnInput -> False]}, "GraphicsAxes", 
              StripOnInput -> False]}, PlotRangePadding -> Scaled[0.02], 
            PlotRange -> All, Frame -> True, 
            FrameTicks -> {{False, False}, {True, False}}, FrameStyle -> 
            Opacity[0], FrameTicksStyle -> Opacity[0], 
            ImageSize -> {Automatic, 360}, BaseStyle -> {}], Alignment -> 
           Left, AppearanceElements -> None, ImageMargins -> {{5, 5}, {5, 5}},
            ImageSizeAction -> "ResizeToFit"], LineIndent -> 0, StripOnInput -> 
          False], {FontFamily -> "Arial"}, Background -> Automatic, 
         StripOnInput -> False], TraditionalForm]}, "BarLegend", 
      DisplayFunction -> (#& ), 
      InterpretationFunction :> (RowBox[{"BarLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{
                 RowBox[{"Blend", "[", 
                   RowBox[{"\"M10DefaultDensityGradient\"", ",", "#1"}], 
                   "]"}], "&"}], ",", 
               RowBox[{"{", 
                 RowBox[{"0.000039006944`", ",", "0.048822842`"}], "}"}]}], 
             "}"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
           RowBox[{"LegendMarkerSize", "\[Rule]", "360"}], ",", 
           RowBox[{"Charting`TickSide", "\[Rule]", "Right"}], ",", 
           RowBox[{"ColorFunctionScaling", "\[Rule]", "True"}]}], "]"}]& )], 
     TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.7843999865589237`*^9, 3.784399989823185*^9}},
 CellLabel->"Out[64]=",ExpressionUUID->"dfa29dd2-cb18-4802-901e-fdcdc5cbb6ee"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Row", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"ImageAdjust", "[", 
     RowBox[{"Image", "[", 
      RowBox[{
       RowBox[{"GradientFilter", "[", 
        RowBox[{
         RowBox[{"Transpose", "@", "gammaw20"}], ",", 
         RowBox[{"{", 
          RowBox[{"2", ",", "0.05"}], "}"}]}], "]"}], ",", 
       RowBox[{"ImageSize", "\[Rule]", "Medium"}]}], "]"}], "]"}], ",", 
    RowBox[{"ImageAdjust", "[", 
     RowBox[{"Image", "[", 
      RowBox[{
       RowBox[{"GradientFilter", "[", 
        RowBox[{
         RowBox[{"Transpose", "@", "knw20"}], ",", 
         RowBox[{"{", 
          RowBox[{"2", ",", "0.05"}], "}"}]}], "]"}], ",", 
       RowBox[{"ImageSize", "\[Rule]", "Medium"}]}], "]"}], "]"}]}], "}"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.7844009134596767`*^9, 3.7844009362856274`*^9}, {
  3.784400977548764*^9, 3.7844009849011335`*^9}, {3.784401072660823*^9, 
  3.7844011729246407`*^9}, {3.7844012032445464`*^9, 3.784401372327939*^9}, {
  3.784401433365122*^9, 3.7844014426263795`*^9}},
 CellLabel->
  "In[139]:=",ExpressionUUID->"56bdd242-e990-40bf-bd45-3e1148b0f34a"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[
    TagBox[
     RasterBox[CompressedData["
1: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

      "], {{0, 50}, {50, 0}}, {0., 1.}, ColorFunction -> GrayLevel], 
     BoxForm`ImageTag[
     "Real32", ColorSpace -> Automatic, Interleaving -> None], Selectable -> 
     False], DefaultBaseStyle -> "ImageGraphics", ImageSizeRaw -> {50, 50}, 
    PlotRange -> {{0, 50}, {0, 50}}, ImageSize -> Medium],GraphicsBox[
    TagBox[
     RasterBox[CompressedData["
1:eJzdWvk3V9/XJyRFA0IKhZKUSgnve177ajBFmaXIPCcyhITMkSJSIiSVBooG
mjQnzSSa69NApUEDkooe37Wev8IP5651172/nH323me/hkkewTY+Q4SEhMKG
DTxs3CPnh4a6r7Md+r8Xb/fAOTqB//uo8//L5e4PtvhXKPxXhuCfZTA+DFuN
wB0BkBT1w3gnb6jt9YD3G1c0K61EzPIVOLJzGSa9tEOPlg1eJlnC9L0FsGwx
EptNUOFqhMm9C6C4zxDpLoQzGgzJ/wzwuU0PlU91kf1iDhZ3zEa65CxI62sj
Ys10RFVPQ+VQTdR5asDvzmRMNlRHwwVV/DKZBDxTgXeUMuRVlNB3bzzqNipi
odk4yMsooKdVDmUXxsI5XRY6twpZ97avrKwvGGn/BaHPejXKt6xC3B5/FOf7
QjfeG0krPaGo746Ysa7o6nVG94cVMGlzhNR3B7RI2eMTs4XOBmvMabGEPr8U
7rstkCxjjh/NZphRZQqlYhPMLjZGY6URfJsWwU1sEZRNF0K6YAEO/J4PC//5
iGozRHGQIeaLGuLxfh5vbHj8Hc4j/y7BtmAgHmsIAVaELn1CtyZBS21gqRN2
TidUTCM8/jgKZxw/sLDR/pDY54dzv33Rb+qLNwU+uNnrjXuB3rDt9YLyXi/c
DPTC62VeGO3thYBcL+S3eeHqMm9ca/eG18D/Gn6+iLH2g+NSf5wYH4BMiVV4
EB2I/aOCUHoyGGP9QuAxNQy6XeEwvRWB+ENReLg1GvYbYiAIj4OjXjyE9RJw
Uz8RgSwJ++YnQ2Cagi7LVOxx3IiRHmlQDkzHgYhNiEvIQN7mzbiZtwXORZmQ
aE+Amd4L1mLmguaLLrjq5AptMzf8yHDHLXVP9I7xRrulL24+8UfDoUC0nwlG
vUgY1BIi8FIrGoL+WPj1xsN1SBKOyqfARm8j/FzTsSAjA9fTtkBuYxZCy7Kx
tGMbWqx3QPHkTtjJ7sL3kCK43tmNOWqlkIrYh8prZWgfeQhb7coRs/0ICu9X
on3YcdhxJ9HqV4Md2acRWn0WKc21eNhxAdGilxE19ireT6qD2JR69Mtfwnzn
e+z0QE7MdbWG7j5b6F9ywPWyFSg1doXEZi/0uQeg4sQa6K+OBB8TB5kPiVA5
koqHqZtQHpyJFo8cuDrvQKtjAbLsizHcqhSrjMsgoXcY//09gn0lx9A/uxor
G09DMbIWInKXoNZ6FdE19ciKuY0l8xpw+G0TapMf4uC4p9hd+gKXVV4D2a2w
73kPfZtPmFXagbj33+Gq2g0521/4uO4P5PL6Ed4iRAHLh9CFY0J0XLSWrfoB
WNcZIkfZCO/7Fg/koQ3ydw/UtJAXgmcEwedPFE6pJqKpeyP2tG/BmM5tEJMo
wGj1EuhSGYpsKpC68jjeOp2Gl/kFcNOuYWTPTTyvakCHQwvK658iS/wVfs5r
Q8aCj/gk+IqHel04o9mLRSP6sSJImNQaREhz6lC6UjCM/g0bQeOCpMj01ii6
rCRNp/1kybtcjvrbFKhWYTw1LVSiSF8Vep40iYx2qpH8KjW6FVPGLL5PRb71
DHwwmIvR6wDL46bYk2oPnWJPlFaEQtogAY4r08EfzYb0+AIU7hiIuVw55uSc
QIJILXS9r8HuxJ2BemuGi8QLaEq1oafrM15c7IL16r8I6xcm41NipOUuQTP/
SpLiqtEkUydDPdLy1GmnSJShRJI1E+nuPTWyfz6FVN9pEv9uOn15NpP863Wo
66AuXY3XJ3lLjtRlibQbDckvaSEN1zam/Q2mFPzCjDqVM9k6gzHoTpeHf/4k
OLzUxqwjBItVVriU74kpLZE47ZcKq2nZsBlXiNvqB1DKHx/osefxNuYGfm99
gK4dL1G/qR3G/l34MPMf7DpE6de84bQwZBSdKZSl/tPjqLFOmcSvqlFi1VSa
nTmDFJx1aLGiHj2/wdEnX0PK61lEQlFm5FS/hC6K2pC3rgNFLl9BiiEutC7G
gy6s9yHZ4AAqdwiiCp1QMhGJoIob6yg3MZYujoun6/t82MeiDnZvthAOzBoJ
ffWJ0P45FxeazdGg5YXfubHIb80AzPMR/7kMLudOQvvoFTSeb8Sj1pfgVb5A
IuAPEl+Lko2sJPVayJB+hiL9uTeJvBQ06bzvLIo+r0daijzlxhlTzqclpO1h
TzveOtOEEC/iJQPpUE0Y6Yaup6iSBErOSaGkrenUsGsLvanOJpdX22mIUgGd
Xl1MOc2l9MD2AD3+Uk6C/VVUFVNNwpFnqcjpIh2VnsFEmk4xVeH7bEL7T2ZS
Io3Dm6dDyckUxpu88fddAmJisuEetQcuD45BadMVqBc+gOmINox99hOeaaKU
8ESK/njJ096Zk2gUr0XF+bqUa2xI45aak+0ZB3LL8aDg1iCqPreeanKS6UFe
BuV35VBFVQGdfVBKi7zLySXwJNl9PU/BnfV0MKaJAra8oKgp7dRm3E0yP4V4
xXRxvn35SN7XeyyvfHAC76Oszkdc0+LTd8zh47Zw/JC+V1xnZjyLsdrP5rNH
rHD4MHRmTYFHnjEu/ucLiakp2PNjB67YHYKtYy20RzSiJK4VEfW9GPZPnHR2
y9CMZhVqr5xO5sYCmnrElL7+WUbG5n7kcnId9Wmk0h7FrSSoLaBq2TKaq3mc
kv9coA/pd2how1NSudJO65b1kuclUf6unBTftn8sf8NTmW8w0uBXG87iu4wN
eM58AS8Nc75Kwo4fvcuZ3/TIix9bGsjfehbGy/tG80JC8bzgpAn31EGFxd1L
Ya0hV5nL/CH4LKmOWnETrOVXIcQ/DfN/7kKsWxXi6+vwxPI5/NW6cOv0UFqv
J0vBh1Xp40wdqny3gAI+21GIkx/5msZSxX/pdG4gJ2L2lNK4sVWUo3GBOs/f
oeM1z6iv/SPd1fxN90tE+b+/R/D3hWX45qxxvEuMCv+8SJ2feG8qb/VNi/f4
OYM3eavN77ihzf+7NIP3+6jFX3LX5N8YTuEVi1X5fZuV+XlKivyJaWP5XY9y
De6r93KO/bHMwOgyy9o/BLeOTobBFzPY7wxGXlQGciaVIOVHNfZOuIu8h204
P0OIFoWPpGvPlehMgjYdjTAk3Wu2dMDTjwK5OJqeuYn03XbQeu9SKvc6ShaK
Z8nMoI4ermogOfvH9Dn3P3JraKVRp9+TssoHWvG7jfZ4v6b8gqeU13qffm2v
pw1CteS+ppLiNUtpmW8uZbmmUl3GGirZbUc6QQYUE65Cw+aK0xmLNwjSPzfQ
19M4SR1DtrErl8nV32fnV0pANUoL97Ut8fpQOLplM+EgtBd6xmdgNe4+7Cs+
QlVOhBY9H0OVFZPIPVqHZFUXkYWPAxl/8SPj+evJ1j+VymMzqThhO4XI7CK5
+8Wk7V5CZzbsps4RhaQgvYNy72yhMYVJNLormDa2OFBwG6OyiWr0LXg48Qbv
sTzuApqcdmHW8/XgK81x+4U6qp+LwcrpKXMUO8GEc7Yxi/xwJnTZnJ2P12RP
tIaw37257D+J80zV6Rv7ZDAWpTVzscHKAT7C0ajszkKK6j6s3X8Gzjsb4Sre
DqkwYbosPIoc/02geBUtOvZLn+6LGVPFYWvyETiRmZAHrbDwpumpXiRj4kqH
I+1JyteEahp0Sf/aJLJOkySpax0QeXYd8T9LkdaXhEgzO+TNnYbghGFw3viM
zaNj7PKdLKa5OYAlmRiyhlXKTERdhLmNfMqd66/mdq/ayd0Vj+deFy7j/Btm
c4elidnX3WHKtp/ZNrsR6LFXh5fAEH6pLpAaugHLW7aiQ38vrA/UQEHiNmo1
X+FdeTdC4sXo5fFRVNWpQA8H7jDOZwq9DdSkWiNNCsqaTJaTlSlcX4ZkXMQo
XeoTpE7exMO+g9h+exNSCtxwuXMO+laPQsCSVvbuUzX77p3NjqzwZ1/HMzbZ
UYFNed3D9Sff4moVyrjmo2lcUJ4715Ar4JZmKXLb1YW4qthmgcrQKsGEpGxB
7AMnwZeaCKaaLIxPbiNhc0MFOrfnYu1BC7x74YOX6QkwT9yKPJ0SiPpUQf7u
JfR2NiIWryDW9gVLhvWix0mImoYOoT1qwrT13W8ca/mCj2nPcGJkHfp/l6Nv
cg58i0NxfJsRJA8qQzL+L/PsqmejxxWzcXOiWf1qY9b7XIk1jvrLqf24ybnb
lXLdzxO56TG23J9pWtyN/cM5++xXgqFF1YIb4TkCgeIqQaILJwi9LSMorGkz
yNx+1KDG/qu+87btbEOrItZlTMaluoEYiRvB8OIAvlgdBJ2GRDz6kom+xbtg
tOkALs05Acnj55G87DpOBNzBX/0G1Ey/h0VtN5C99CIWVx9DVGMJHtdsgXRo
GF5ZWKBi0lQ0WQyDSfVTVupzlInXbGI95c7szauZ7MtuSaZ94TWn+a2ac+G2
cZpzgrn67gWc7TIVbnPcEG5NX4sgb32lIOpylsD1R4Bg6gxewDYrCubG9xiE
RF810FuRZ2Bo62kwAAeFVBYcYVJvZkOjUgDDicZ4+toWynGekIwOxxuNJPjq
bMb5f7lQmViEhDH7EGB8CKd0KiC0sgKLQg7hkfVeXFYrQJztwH4z4zHTyxMq
S4xQHDsVN7VHIkW9g0mcus68ru5nelmbmHuYH0u5s5B1753Mnp2UZJ0/vnLt
i+5ysuOqOJ2gPC4vKpE7peXOtaYu4KRnTuW8IsdwC/f+EUhufSLo+XZO8HBS
qWD7zgwBdzlYYKe9RLC3XltQlfbXIFP0CrslYoymKUswYowDTmx2Q9jcQLzc
GoWkTYlYvyUNq79vga1FDtJmb8cH7EDllO1QuJGNJzM3o6gkGe8VInFwhCc6
rZciQ1SACT+m4E3GWOh3iOFY71d2Q+wRK829xMYurWCJ3/PZXqt01rQ1nNVE
LGdmE+YzUQstVtwoz/zWDmUzRnZw2oeauDWuZzmDZ/u4z3ezOY1v8ZxAxItb
k23GuavrcJLuSlzHz+HcT3QL7s1+LOhfUiO4nfyArfvkgIMJzvig4ImujAA4
xIciOzUabZIJmGydjJcXUmEqngah9o34x1JhN4CblG/GQDI8BDlfvTBX3xHh
GhZYuWg+1hzRg+yUmQjnNSCzUQU7D8jDdu0A7vw4FJaCv6zV7SNLyX/Mjsys
ZxUeNeyoRxl7YZXHWg3TWVlEFBOPd2Onti5mSTnzmJO/OnvQLcO65MSY6bKv
3ESNR1yJ62Wu6PoRrmdyIXfbfDNnLBPDBR504W6uf82OW3khPdwPHV8CcbI0
BIsXRuBtUDTETsUi6sAGlDZvwNKvsah8tg5b6sLgNy0QWk2ecD3mhLU1dhiS
aYk54Rbo0DTHHmlz6PubIzHUHGZFi6GeaYquCUYYYm6IznkChI+Zgx4ZLTSt
U0X6+nHoNR+Np3LiyBf6y4QWf2TbdZ+wb29uMAvfM8yq4TA7ObGInXLaylbF
JLPMnlCmtseFab4yZ2uLBOzXpWlsiM4EVtIkxdyOf2L9/atx8f4a1AeFQaVu
LVRyIlGfHoVtK6OgeSMC34vCMPp1EBY2+2GJmAe+mzghs8AelZ3WWCNqjRZx
W2SdWgaTABd4mfhgf8RAj6AITBgViwkLE1AyJwnfFyfDdWMy0r8loTw3EZ6p
8XhQvR5LrNeCSQbBXNoHhzavhNEeO/gOxGC98gJIXNLHw9UzIc1NQZGeEizX
yML06wgY1oqg+EwPiz70gcHiKRs97A5zEP7BopvDsCx5LW7vjECjRCQm742A
6Ky1aEkKhfvGIIiY+WOflCcEK52xXcQBH/qssHegFnKalmL6Fxv8yFqBaPJG
P4XCwisek8ekIfVxFmbH5mFnYzE8q/ZDRLQC+WePweVmDVynnUPGswv4/uIy
VHWv4fi7OlzpvY7iiHoE+9TjbdN1/Kmrwy2za7DyuwJLrUtgheeheu0scstP
oXLFSYg+qULFjCNQdz2EVKP9uGbTxZyurMW0zAjMSoyARsFaZJaF4V7kGhi2
roLbfW8IkwuMLeyRbGoOvcOGMJCaBxm16agvUkOanBI+dSvAyUseWmYKeOE4
Hpe1JiLWdgqu+s/AAnld9MoCt6YZ4eX0JRjSa4e4cGfYbfKE0LQApBmvQVPL
WvCN0cCsDRizLgG/JZJQPHB+kVwKSl+koEEnFXORish/KTgYkwKN08korE7C
66hE3BRLgP3D2EGzj8GSV4OlzgdL3x0s9+BgmUsGy5w4WOb2wYKjBguuHSw8
w2DhfQYLDzdYeNHBwlMPFt1gsOg4g0VXGyw652DRnQeLD2Cw+DIGi09msPiW
BouP7P8ART1bvQ==
      "], {{0, 50}, {50, 0}}, {0., 1.}, ColorFunction -> GrayLevel], 
     BoxForm`ImageTag[
     "Real32", ColorSpace -> Automatic, Interleaving -> None], Selectable -> 
     False], DefaultBaseStyle -> "ImageGraphics", ImageSizeRaw -> {50, 50}, 
    PlotRange -> {{0, 50}, {0, 50}}, ImageSize -> Medium]},
  "RowDefault"]], "Output",
 CellChangeTimes->{
  3.7844009856840053`*^9, {3.784401077226613*^9, 3.784401173185969*^9}, {
   3.7844012036594353`*^9, 3.7844012214688034`*^9}, {3.784401267872344*^9, 
   3.784401372763773*^9}, 3.784401443511984*^9},
 CellLabel->
  "Out[139]=",ExpressionUUID->"05155688-dc86-4015-8eb8-52ddb5064be8"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ArrayPlot", "[", 
  RowBox[{"ImageData", "[", 
   RowBox[{"ImageAdjust", "[", 
    RowBox[{"Image", "[", 
     RowBox[{
      RowBox[{"GradientFilter", "[", 
       RowBox[{
        RowBox[{"Transpose", "@", "gammaw20"}], ",", 
        RowBox[{"{", 
         RowBox[{"2", ",", "0.05"}], "}"}]}], "]"}], ",", 
      RowBox[{"ImageSize", "\[Rule]", "Medium"}]}], "]"}], "]"}], "]"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.784401561340843*^9, 3.7844016358535614`*^9}},
 CellLabel->
  "In[151]:=",ExpressionUUID->"3bd3d8d2-bcb7-40d2-8ad9-f27d1c1c788b"],

Cell[BoxData[
 GraphicsBox[RasterBox[CompressedData["
1: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
o1h/T0b595YU6+8tKf8emQL9PbL/A1Dz+ss=
   "], {{0, 0}, {50, 50}}, {0, 1.}],
  Frame->Automatic,
  FrameLabel->{None, None},
  FrameTicks->{{None, None}, {None, None}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultPlotStyle" -> 
    Automatic}]], "Output",
 CellChangeTimes->{{3.784401603589845*^9, 3.7844016370413785`*^9}},
 CellLabel->
  "Out[151]=",ExpressionUUID->"91474a02-63e8-418f-90cb-12b9e04e2847"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Image", "[", 
  RowBox[{"1", "-", 
   RowBox[{"ImageData", "[", 
    RowBox[{"ImageAdjust", "[", 
     RowBox[{"Image", "[", 
      RowBox[{
       RowBox[{"GradientFilter", "[", 
        RowBox[{
         RowBox[{"Transpose", "@", "knw20"}], ",", 
         RowBox[{"{", 
          RowBox[{"2", ",", "0.05"}], "}"}]}], "]"}], ",", 
       RowBox[{"ImageSize", "\[Rule]", "Medium"}]}], "]"}], "]"}], "]"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.784401408866679*^9, 3.7844014104544325`*^9}, {
  3.784401497170521*^9, 3.784401507621518*^9}},
 CellLabel->
  "In[140]:=",ExpressionUUID->"b43d51ff-13fe-4e7c-869e-9af6d8025663"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJzdmvdXVFf3xrH33tBYUAFLEJWIopH5iF1UBKVJ78xQZm6ZGRhg5tpfTayJ
GmOiKKIYC5qIYI+9vDY0YtTYEnvF2BL797xrff8Kfthzp61179772Xs/zzmn
c4JpYkp1Jycnta54mRif5aco8bZJtf/3ITk+4wuvjP/96PX/tsSQTW65RI+H
Ek4NZJTeMt+HyvyqyQRskDlTIXOlmkJXTwV9hIJllkLHXxT8rikcrKMyt6+w
CJUd01RqbVAxlqvse6XSpp2ZGb5m6saZWT3VTEiBmW4HzXz2p5kBn8xo7S28
8bGwPtjCEpOFw3MsDFpj4eNuCy0uWJjyyMK46lZynK008bTSdJiVGWFWMtKt
nHVY+XmRldaFVtLKrBS3zSVuejbuTjJ1m8vc7CnjNkrmfrJMyiyZD0Uy3f8r
43gss76xQnwfBTlIYZOsULlQ+LZFoe8phUb3FTZXV2nYXqV+f5XjASo/J6h8
MKt0nKXSYalKjbUqV35R2fCriuOkSuxFldCbKukPVNb/rdL6jcqeTyoFtcyc
r28msIkZ9xZmIlubeels5o2Ii9zeTHwHM6eF7RXWX1iIsInVshi0N5s3RhF/
i0zwFBnpa5mJS2USV8l88ZNM+laRk+3i/U6ZabtktojrzlKZdT/LzBD5Slot
EyH+75gj/M+RaZcuMyJGJnWCzCQfmdqdZEprymgPJHJOS+zdKhH1rYTeIvEi
VKKBj8QeZ4lWb0y4XDZxb4cJZZmJU1km3oSaqN7fxOOWJva9MJJ33sjnPxsp
X2Ak02ikzngjwR5Gbhw0MbK1jcTPFGq0VBheXyHznYzfPZltp0V+imWqCb8S
E4R5y8SL5zl8VuLpdxJDoyXau0j8dtNESb6J+tEmWrc1CUwYWTbfyL0AIx2a
GPE6mUn/aZkc8c7E/iAD64oMDgZlYK6dwfLd6ejkdNK6pdP1ehrGJWkEjk/j
VK00bu0zsDTbwG0vA6ef6Jn4kx5Tsh63LnrkG6kErUjlUGQqfJaK04dUOs6z
USgw0eihwt4jCu+/VVgcorC0gQJlwpfJMkdeSnjMkRgs4vaxwERUTxNuW4w0
8DKydlsm5n6Z3C7JIMA7g0/b0/liQDqddqaRNCSNxycN7J9s4OUdPR1kPUPE
PfOmp9K3XirGhSn0b5vC12uS0fdO5uSeJDaNTaLu1UQuZSbSqloiO5cksOvz
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
/wDZcB/V
    "], {{0, 50}, {50, 0}}, {0., 1.},
    ColorFunction->GrayLevel],
   BoxForm`ImageTag["Real32", ColorSpace -> Automatic, Interleaving -> None],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->Medium,
  ImageSizeRaw->{50, 50},
  PlotRange->{{0, 50}, {0, 50}}]], "Output",
 CellChangeTimes->{3.784401410897214*^9, 3.7844015079755716`*^9},
 CellLabel->
  "Out[140]=",ExpressionUUID->"3e8ee1b3-0c7e-4fc9-9c4d-dbf676002871"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FindPeaks", "[", "]"}]], "Input",
 CellChangeTimes->{{3.7844017489012356`*^9, 
  3.7844017677986593`*^9}},ExpressionUUID->"7b1a1910-f852-4816-ac71-\
419a0dd2823d"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"50", ",", "0.048804621`"}], "}"}], "}"}]], "Output",
 CellChangeTimes->{3.7844017604612846`*^9},
 CellLabel->
  "Out[152]=",ExpressionUUID->"c24a227d-5c78-4bc8-a323-1b02a2f97ac5"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{"-", 
   RowBox[{"gammaw20", "[", 
    RowBox[{"[", 
     RowBox[{"All", ",", "25"}], "]"}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.784401769078268*^9, 3.784401824736375*^9}, {
  3.7844021665087614`*^9, 3.7844021670084257`*^9}, {3.7844021979526653`*^9, 
  3.7844022001328325`*^9}},
 CellLabel->
  "In[172]:=",ExpressionUUID->"2686d0b3-c17f-4d1f-ad2f-518a991b17a9"],

Cell[BoxData[
 GraphicsBox[{{}, {
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.011000000000000001`],
      AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJw10V1I01EYx3FfyFykmJSZiE2TfGGIU+d05vb7b845GptYOma2ar6U1Zyj
WkykNhZqaWmZhSBmVnThRS01hKylN2WNyrUKwgUuDWMVw0ibUFT4dODh8Dnf
q4eTqDOU1YYEBQVl/Z1/9+rxi8xLppX0iS4HPaDpiSqYp+4kh+PWO66xnH2e
HIXmmqgh64dz5I046WdEDy61kWPxeJN9mi9sIcejSMlkar02MhsejmrMYbGS
kzAcWzrJzj1FTkaOcUuvoM5M3g6TK01/puc4ORWi6oIv5k4DOR2uu9ac1OA6
MgflLGe7OlJDzkDvyN6YE0w+ORNnI7mDK3EMmYuH4QmGz8kSchYaWucUfLmU
nI3NVb68ra0ycg7w0nPd65GTebgcryl0KhTkXAgaR33c10oyHzd0974KxkrJ
ebCH3NeFRpeR89E/x3t1x7SLLMDa5vZA6Kfd5AI4R/T8qX0V5B0YPPaL9eKj
mlyI2rfPZ+eN//cVwu2uv7LA2kMWQTW7PGMfqiIDKWmcDYlq7aotQKByOWF9
2H7qDDrCFvjCebKFgfZnRFvc1AHqYiijlq712HXUxQj0uQI3+6upS/DUN+4T
dtVQl2BAE8qpbKmlXoTu6G3h3yz0X5YisLJ2yhdPH6QuhWQ4xa21HaIuxaTf
HcNpr6deDPGP7Iqyq4epFyPwvpL/7PYR6jKIZ7ySjvGj1GVgbAMZF9/oqZdA
2OS7ML3YQL0EE6MRv5PWNVKX41HXGvP3vkbHHwHz6sA=
      "]]}, {
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
      0.011000000000000001`], AbsoluteThickness[1.6]}, {}}, {
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
      0.011000000000000001`], AbsoluteThickness[1.6]}, {}}}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0., 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0., 50.}, {-0.016361877, 0}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.02]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.7844017727982864`*^9, 3.784401825049573*^9}, 
   3.7844021675589533`*^9, {3.7844021984333954`*^9, 3.784402200461955*^9}},
 CellLabel->
  "Out[172]=",ExpressionUUID->"378710aa-ec7f-4f1b-a198-18242d3205a8"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{"Flatten", "[", 
   RowBox[{
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{"#", ",", "i"}], "}"}], "&"}], "/@", 
       RowBox[{
        RowBox[{"FindPeaks", "[", 
         RowBox[{"-", 
          RowBox[{"gammaw20", "[", 
           RowBox[{"[", 
            RowBox[{"All", ",", "i"}], "]"}], "]"}]}], "]"}], "[", 
        RowBox[{"[", 
         RowBox[{"All", ",", "1"}], "]"}], "]"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "50"}], "}"}]}], "]"}], ",", "1"}], "]"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.784401898677123*^9, 3.7844019811106215`*^9}, {
  3.7844021136920233`*^9, 3.784402134436542*^9}},
 CellLabel->
  "In[169]:=",ExpressionUUID->"c1cd746b-719f-44cd-a561-308febae2563"],

Cell[BoxData[
 GraphicsBox[{{}, {
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.011000000000000001`],
      AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJxt0zkKwlAURuGHlaWFhYWFioiIiGMcYkyMYxoLlyBYu4W3ZJdgxPsHclCQ
y8fxkvhC2o/X/Vlxzt3y73f+Pu/4/3RJ2VW4BtfhBtyEW3AH7sI9c5aUrd43
X5OyU5sD7MuRzSG6vLY5QpcDm2N0eW5zgi5PMTNYv5uhy7xOBus+F+gL9AA9
QF+iL9FX6Ct0nuMGDrEfom/Rt+gReoS+Q5d1fjG6rPNP0GV7Th69sJ7DHvuy
nbNHL6xzS7Ev2//06IU1D9iX7f3xsr0/Ht0dsX8sdw+7Ezrszuiwu6DDxXuu
Duf3+QFt7WRL
      "]]}, {
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
      0.011000000000000001`], AbsoluteThickness[1.6]}, {}}, {
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
      0.011000000000000001`], AbsoluteThickness[1.6]}, {}}}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 50.}, {0, 50.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.78440192615959*^9, 3.7844019824789715`*^9}, {
  3.7844021195214577`*^9, 3.784402135660294*^9}},
 CellLabel->
  "Out[169]=",ExpressionUUID->"5d614c99-cd0f-4dca-b6f1-5555d4e7cb0d"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"int1", "=", 
   RowBox[{"Import", "[", 
    RowBox[{
     RowBox[{"NotebookDirectory", "[", "]"}], "<>", "\"\<int1.dat\>\""}], 
    "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7844882429843173`*^9, 3.784488262093227*^9}, {
  3.784488414761024*^9, 3.7844884194684334`*^9}},
 CellLabel->"In[19]:=",ExpressionUUID->"5de6bfd6-7e40-4849-af52-758d3ac939ea"],

Cell[BoxData[
 RowBox[{
  RowBox[{"int2", "=", 
   RowBox[{"Import", "[", 
    RowBox[{
     RowBox[{"NotebookDirectory", "[", "]"}], "<>", "\"\<int2.dat\>\""}], 
    "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7844882670257254`*^9, 3.784488269255555*^9}, {
  3.7844884064707365`*^9, 3.7844884102601557`*^9}},
 CellLabel->"In[17]:=",ExpressionUUID->"9267309a-024d-46ed-ab10-14b30a6b893a"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Export", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"NotebookDirectory", "[", "]"}], "<>", "\"\<int1.dat\>\""}], ",", 
   "int1"}], "]"}]], "Input",
 CellChangeTimes->{{3.7844920404024134`*^9, 3.7844920556104*^9}},
 CellLabel->"In[47]:=",ExpressionUUID->"ecc51441-ec0e-4084-a4af-f5cfabaa869c"],

Cell[BoxData["\<\"D:\\\\CMTC\\\\TBG\\\\int1.dat\"\>"], "Output",
 CellChangeTimes->{3.7844920578095174`*^9},
 CellLabel->"Out[47]=",ExpressionUUID->"e12ea9a9-a2a5-4424-b03b-24ceb69b83b6"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Export", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"NotebookDirectory", "[", "]"}], "<>", "\"\<int2.dat\>\""}], ",", 
   "int2"}], "]"}]], "Input",
 CellChangeTimes->{{3.784492063054304*^9, 3.784492065125664*^9}},
 CellLabel->"In[48]:=",ExpressionUUID->"861c8509-7857-47d1-afd5-df6d031e0bd8"],

Cell[BoxData["\<\"D:\\\\CMTC\\\\TBG\\\\int2.dat\"\>"], "Output",
 CellChangeTimes->{3.7844920655634995`*^9},
 CellLabel->"Out[48]=",ExpressionUUID->"4d91a0d0-f9ac-4905-83c0-98594731a823"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListDensityPlot", "[", 
  RowBox[{
   RowBox[{"Transpose", "@", "int1"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"ColorFunction", "\[Rule]", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"#", "\[GreaterEqual]", "1"}], ",", "Black", ",", "White"}], 
       "]"}], "&"}], ")"}]}], ",", 
   RowBox[{"ColorFunctionScaling", "\[Rule]", "False"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7844882718185434`*^9, 3.7844883545436745`*^9}, {
  3.784488430328541*^9, 3.784488434560398*^9}},
 CellLabel->"In[20]:=",ExpressionUUID->"ed8897c4-c4b3-486d-b969-2390589d8bc6"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[
    GraphicsComplexBox[CompressedData["
1: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
T7Iu6INf/+f5X/jk+VE=
     "], {{{
        EdgeForm[], 
        GrayLevel[0.8], 
        GraphicsGroupBox[{
          PolygonBox[CompressedData["
1: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
           "]]}]}, {}, {}, {}, {}}}, VertexColors -> CompressedData["
1:eJzt0bENAjEQBVETUgaV0AMlIBHTJAVRAinZ2ifrxt6dl0z6174934/XpbX2
uTZJkiRJkiTpz/e+ZldHv0/W/6Dv3KWz0ffs3lnoO7L0KHp31o6i92bvKHpv
9vaid1ZpL3pnlfaid1ZphN5XrRF6X7VG6H3VGqH3VWuE3letEXpftfaid1Zp
L3pnlfaid1bpKHpv9o6i92bvUfTurJ2FviNLZ6Pv2b1noe/cpauj38f/OAf9
7v6HJEmSJElS5AeBi0pt
      "]], {
    DisplayFunction -> Identity, AspectRatio -> 1, 
     AxesOrigin -> {Automatic, Automatic}, DisplayFunction :> Identity, Frame -> 
     True, FrameLabel -> {None, None}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultColorFunction" -> 
       "M10DefaultDensityGradient", 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "GridLinesInFront" -> True}, PlotRange -> {{1., 50.}, {1., 50.}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
       FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           GraphicsBox[{
             RasterBox[CompressedData["
1:eJztxsEJwCAURMEvqcRK7CElBDxbp91YQhRbEE8z8NjNX3vrExF9lmbrb6Oc
WQAAAAC44wcGGQ0h
              "], {{
                Rational[-15, 2], -180}, {
                Rational[15, 2], 180}}], {Antialiasing -> False, 
              AbsoluteThickness[0.1], 
              Directive[
               Opacity[0.3], 
               GrayLevel[0]], 
              LineBox[
               NCache[{{
                  Rational[15, 2], -180}, {
                  Rational[-15, 2], -180}, {
                  Rational[-15, 2], 180}, {
                  Rational[15, 2], 180}, {
                  Rational[15, 2], -180}}, {{
                 7.5, -180}, {-7.5, -180}, {-7.5, 180}, {7.5, 180}, {
                 7.5, -180}}]]}, {
              CapForm[None], {}}, 
             StyleBox[{Antialiasing -> False, 
               StyleBox[
                
                LineBox[{{7.499999999999999, -179.99999999999997`}, {
                 7.499999999999999, 179.99999999999997`}}], 
                Directive[
                 AbsoluteThickness[0.2], 
                 Opacity[0.3], 
                 GrayLevel[0]], StripOnInput -> False], 
               StyleBox[
                StyleBox[{{
                   StyleBox[
                    LineBox[{{{7.499999999999999, -133.53324641460233`}, 
                    
                    Offset[{4., 0}, {
                    7.499999999999999, -133.53324641460233`}]}, {{
                    7.499999999999999, -86.59713168187744}, 
                    
                    Offset[{4., 0}, {
                    7.499999999999999, -86.59713168187744}]}, {{
                    7.499999999999999, -39.66101694915254}, 
                    
                    Offset[{4., 0}, {
                    7.499999999999999, -39.66101694915254}]}, {{
                    7.499999999999999, 7.27509778357236}, 
                    
                    Offset[{4., 0}, {7.499999999999999, 
                    7.27509778357236}]}, {{7.499999999999999, 
                    54.21121251629726}, 
                    
                    Offset[{4., 0}, {7.499999999999999, 
                    54.21121251629726}]}, {{7.499999999999999, 
                    101.14732724902215`}, 
                    
                    Offset[{4., 0}, {7.499999999999999, 
                    101.14732724902215`}]}, {{7.499999999999999, 
                    148.08344198174706`}, 
                    
                    Offset[{4., 0}, {7.499999999999999, 
                    148.08344198174706`}]}}], 
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]], StripOnInput -> False], 
                   StyleBox[
                    LineBox[{{{7.499999999999999, -171.08213820078225`}, 
                    
                    Offset[{2.5, 0.}, {
                    7.499999999999999, -171.08213820078225`}]}, {{
                    7.499999999999999, -161.69491525423726`}, 
                    
                    Offset[{2.5, 0.}, {
                    7.499999999999999, -161.69491525423726`}]}, {{
                    7.499999999999999, -152.3076923076923}, 
                    
                    Offset[{2.5, 0.}, {
                    7.499999999999999, -152.3076923076923}]}, {{
                    7.499999999999999, -142.92046936114733`}, 
                    
                    Offset[{2.5, 0.}, {
                    7.499999999999999, -142.92046936114733`}]}, {{
                    7.499999999999999, -124.14602346805735`}, 
                    
                    Offset[{2.5, 0.}, {
                    7.499999999999999, -124.14602346805735`}]}, {{
                    7.499999999999999, -114.75880052151237`}, 
                    
                    Offset[{2.5, 0.}, {
                    7.499999999999999, -114.75880052151237`}]}, {{
                    7.499999999999999, -105.37157757496739`}, 
                    
                    Offset[{2.5, 0.}, {
                    7.499999999999999, -105.37157757496739`}]}, {{
                    7.499999999999999, -95.98435462842241}, 
                    
                    Offset[{2.5, 0.}, {
                    7.499999999999999, -95.98435462842241}]}, {{
                    7.499999999999999, -77.20990873533246}, 
                    
                    Offset[{2.5, 0.}, {
                    7.499999999999999, -77.20990873533246}]}, {{
                    7.499999999999999, -67.82268578878748}, 
                    
                    Offset[{2.5, 0.}, {
                    7.499999999999999, -67.82268578878748}]}, {{
                    7.499999999999999, -58.4354628422425}, 
                    
                    Offset[{2.5, 0.}, {
                    7.499999999999999, -58.4354628422425}]}, {{
                    7.499999999999999, -49.04823989569752}, 
                    
                    Offset[{2.5, 0.}, {
                    7.499999999999999, -49.04823989569752}]}, {{
                    7.499999999999999, -30.27379400260756}, 
                    Offset[{2.5, 0.}, {
                    7.499999999999999, -30.27379400260756}]}, {{
                    7.499999999999999, -20.88657105606258}, 
                    
                    Offset[{2.5, 0.}, {
                    7.499999999999999, -20.88657105606258}]}, {{
                    7.499999999999999, -11.4993481095176}, 
                    
                    Offset[{2.5, 0.}, {
                    7.499999999999999, -11.4993481095176}]}, {{
                    7.499999999999999, -2.1121251629726205`}, 
                    
                    Offset[{2.5, 0.}, {
                    7.499999999999999, -2.1121251629726205`}]}, {{
                    7.499999999999999, 16.66232073011734}, 
                    
                    Offset[{2.5, 0.}, {7.499999999999999, 
                    16.66232073011734}]}, {{7.499999999999999, 
                    26.049543676662317`}, 
                    
                    Offset[{2.5, 0.}, {7.499999999999999, 
                    26.049543676662317`}]}, {{7.499999999999999, 
                    35.4367666232073}, 
                    
                    Offset[{2.5, 0.}, {7.499999999999999, 
                    35.4367666232073}]}, {{7.499999999999999, 
                    44.82398956975228}, 
                    
                    Offset[{2.5, 0.}, {7.499999999999999, 
                    44.82398956975228}]}, {{7.499999999999999, 
                    63.59843546284224}, 
                    
                    Offset[{2.5, 0.}, {7.499999999999999, 
                    63.59843546284224}]}, {{7.499999999999999, 
                    72.98565840938721}, 
                    
                    Offset[{2.5, 0.}, {7.499999999999999, 
                    72.98565840938721}]}, {{7.499999999999999, 
                    82.3728813559322}, 
                    
                    Offset[{2.5, 0.}, {7.499999999999999, 
                    82.3728813559322}]}, {{7.499999999999999, 
                    91.76010430247717}, 
                    
                    Offset[{2.5, 0.}, {7.499999999999999, 
                    91.76010430247717}]}, {{7.499999999999999, 
                    110.53455019556714`}, 
                    
                    Offset[{2.5, 0.}, {7.499999999999999, 
                    110.53455019556714`}]}, {{7.499999999999999, 
                    119.92177314211212`}, 
                    
                    Offset[{2.5, 0.}, {7.499999999999999, 
                    119.92177314211212`}]}, {{7.499999999999999, 
                    129.3089960886571}, 
                    
                    Offset[{2.5, 0.}, {7.499999999999999, 
                    129.3089960886571}]}, {{7.499999999999999, 
                    138.69621903520206`}, 
                    Offset[{2.5, 0.}, {7.499999999999999, 
                    138.69621903520206`}]}, {{7.499999999999999, 
                    157.47066492829202`}, 
                    
                    Offset[{2.5, 0.}, {7.499999999999999, 
                    157.47066492829202`}]}, {{7.499999999999999, 
                    166.85788787483702`}, 
                    
                    Offset[{2.5, 0.}, {7.499999999999999, 
                    166.85788787483702`}]}, {{7.499999999999999, 
                    176.24511082138199`}, 
                    
                    Offset[{2.5, 0.}, {7.499999999999999, 
                    176.24511082138199`}]}}], 
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4], 
                    Opacity[0.3]], StripOnInput -> False]}, 
                  StyleBox[
                   StyleBox[{{
                    StyleBox[{
                    InsetBox[
                    FormBox["10", TraditionalForm], 
                    
                    Offset[{7., 0.}, {
                    7.499999999999999, -133.53324641460233`}], {-1, 0.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["20", TraditionalForm], 
                    
                    Offset[{7., 0.}, {
                    7.499999999999999, -86.59713168187744}], {-1, 0.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["30", TraditionalForm], 
                    
                    Offset[{7., 0.}, {
                    7.499999999999999, -39.66101694915254}], {-1, 0.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["40", TraditionalForm], 
                    
                    Offset[{7., 0.}, {7.499999999999999, 
                    7.27509778357236}], {-1, 0.}, Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["50", TraditionalForm], 
                    
                    Offset[{7., 0.}, {7.499999999999999, 
                    54.21121251629726}], {-1, 0.}, Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["60", TraditionalForm], 
                    
                    Offset[{7., 0.}, {7.499999999999999, 
                    101.14732724902215`}], {-1, 0.}, Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["70", TraditionalForm], 
                    
                    Offset[{7., 0.}, {7.499999999999999, 
                    148.08344198174706`}], {-1, 0.}, Automatic, {1, 0}]}, 
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]], {
                    Directive[
                    Opacity[1]], 
                    Directive[
                    Opacity[1]]}, StripOnInput -> False], 
                    
                    StyleBox[{{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}, 
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4], 
                    Opacity[0.3]], {
                    Directive[
                    Opacity[1]], 
                    Directive[
                    Opacity[1]]}, StripOnInput -> False]}, {}}, {
                    Directive[
                    Opacity[1]], 
                    Directive[
                    Opacity[1]]}, StripOnInput -> False], "GraphicsLabel", 
                   StripOnInput -> False]}, "GraphicsTicks", StripOnInput -> 
                 False], {
                 Directive[
                  AbsoluteThickness[0.2], 
                  GrayLevel[0.4]], 
                 Directive[
                  AbsoluteThickness[0.2], 
                  GrayLevel[0.4], 
                  Opacity[0.3]]}, StripOnInput -> False]}, "GraphicsAxes", 
              StripOnInput -> False]}, PlotRangePadding -> Scaled[0.02], 
            PlotRange -> All, Frame -> True, 
            FrameTicks -> {{False, False}, {True, False}}, FrameStyle -> 
            Opacity[0], FrameTicksStyle -> Opacity[0], 
            ImageSize -> {Automatic, 360}, BaseStyle -> {}], Alignment -> 
           Left, AppearanceElements -> None, ImageMargins -> {{5, 5}, {5, 5}},
            ImageSizeAction -> "ResizeToFit"], LineIndent -> 0, StripOnInput -> 
          False], {FontFamily -> "Arial"}, Background -> Automatic, 
         StripOnInput -> False], TraditionalForm]}, "BarLegend", 
      DisplayFunction -> (#& ), 
      InterpretationFunction :> (RowBox[{"BarLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{
                 RowBox[{
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"#1", "\[GreaterEqual]", "1"}], ",", "Black", ",",
                     "White"}], "]"}], "&"}], ")"}], "[", "#1", "]"}], "&"}], 
               ",", 
               RowBox[{"{", 
                 RowBox[{"0.055572682`", ",", "76.760333`"}], "}"}]}], "}"}], 
           ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
           RowBox[{"LegendMarkerSize", "\[Rule]", "360"}], ",", 
           RowBox[{"ScalingFunctions", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"Identity", ",", "Identity"}], "}"}]}], ",", 
           RowBox[{"Charting`TickSide", "\[Rule]", "Right"}], ",", 
           RowBox[{"ColorFunctionScaling", "\[Rule]", "False"}]}], "]"}]& )], 
     TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.7844882757794285`*^9, 3.7844883127102003`*^9}, 
   3.784488355571852*^9, 3.7844884353457003`*^9},
 CellLabel->"Out[20]=",ExpressionUUID->"fa543dbf-1422-4ef6-87fc-4b282c787af4"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListDensityPlot", "[", 
  RowBox[{
   RowBox[{"Transpose", "@", "int2"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"ColorFunction", "\[Rule]", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"#", "\[GreaterEqual]", "1"}], ",", "Black", ",", "White"}], 
       "]"}], "&"}], ")"}]}], ",", 
   RowBox[{"ColorFunctionScaling", "\[Rule]", "False"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.784488288124777*^9, 3.784488319012739*^9}, {
  3.7844883689087453`*^9, 3.784488400771138*^9}, {3.784488441922925*^9, 
  3.7844884421573315`*^9}},
 CellLabel->"In[21]:=",ExpressionUUID->"9ae8be60-c686-4444-9939-8cff4d20ccad"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[
    GraphicsComplexBox[CompressedData["
1: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
T7Iu6INf/+f5X/jk+VE=
     "], {{{
        EdgeForm[], 
        GrayLevel[0.8], 
        GraphicsGroupBox[{
          PolygonBox[CompressedData["
1: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
           "]]}]}, {}, {}, {}, {}}}, VertexColors -> CompressedData["
1:eJzt0bENgDAMRcFQMgaTsAMjIFGzJAMxAg0NDUqT2Ih7zdX2n9Z92YZSyjGW
u3Puo+qyR67skatee9ilrt572Oe96D3s8yz6/3Z7Fv3Xr9m66PtIkiRJkiRJ
kiRJkiRJkiRJkiRJkn1sXfR9Wf8SVfRf//Ln2vw/V/6fKzvkyh65skeWLmE5
PXM=
      "]], {
    DisplayFunction -> Identity, AspectRatio -> 1, 
     AxesOrigin -> {Automatic, Automatic}, DisplayFunction :> Identity, Frame -> 
     True, FrameLabel -> {None, None}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultColorFunction" -> 
       "M10DefaultDensityGradient", 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "GridLinesInFront" -> True}, PlotRange -> {{1., 50.}, {1., 50.}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
       FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           GraphicsBox[{
             RasterBox[
             SparseArray[
              Automatic, {201, 1}, 1., {
               1, {{0, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 
                 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 
                 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 
                 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 
                 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 
                 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 
                 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 
                 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 
                 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 
                 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 
                 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 
                 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 
                 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 
                 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 
                 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 
                 200}, {{1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {
                 1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {
                 1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {
                 1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {
                 1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {
                 1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {
                 1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {
                 1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {
                 1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {
                 1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {
                 1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {
                 1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {
                 1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {
                 1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {
                 1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {
                 1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {
                 1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {
                 1}}}, CompressedData["
1:eJxTTMoPSmVkYGA4wQADH+zJo0fBKBgFo2AUjFQAADWXCrw=
                "]}], {{
                Rational[-15, 2], -180}, {
                Rational[15, 2], 180}}], {Antialiasing -> False, 
              AbsoluteThickness[0.1], 
              Directive[
               Opacity[0.3], 
               GrayLevel[0]], 
              LineBox[
               NCache[{{
                  Rational[15, 2], -180}, {
                  Rational[-15, 2], -180}, {
                  Rational[-15, 2], 180}, {
                  Rational[15, 2], 180}, {
                  Rational[15, 2], -180}}, {{
                 7.5, -180}, {-7.5, -180}, {-7.5, 180}, {7.5, 180}, {
                 7.5, -180}}]]}, {
              CapForm[None], {}}, 
             StyleBox[{Antialiasing -> False, 
               StyleBox[
                LineBox[{{7.5, -180.}, {7.5, 180.}}], 
                Directive[
                 AbsoluteThickness[0.2], 
                 Opacity[0.3], 
                 GrayLevel[0]], StripOnInput -> False], 
               StyleBox[
                StyleBox[{{
                   StyleBox[
                    LineBox[{{{7.5, -180.}, 
                    Offset[{4., 0}, {7.5, -180.}]}, {{
                    7.5, -110.23255813953489`}, 
                    Offset[{4., 0}, {7.5, -110.23255813953489`}]}, {{
                    7.5, -40.46511627906977}, 
                    Offset[{4., 0}, {7.5, -40.46511627906977}]}, {{7.5, 
                    29.302325581395348`}, 
                    Offset[{4., 0}, {7.5, 29.302325581395348`}]}, {{7.5, 
                    99.06976744186046}, 
                    Offset[{4., 0}, {7.5, 99.06976744186046}]}, {{7.5, 
                    168.8372093023256}, 
                    Offset[{4., 0}, {7.5, 168.8372093023256}]}}], 
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]], StripOnInput -> False], 
                   StyleBox[
                    LineBox[{{{7.5, -166.04651162790697`}, 
                    Offset[{2.5, 0.}, {7.5, -166.04651162790697`}]}, {{
                    7.5, -152.09302325581396`}, 
                    Offset[{2.5, 0.}, {7.5, -152.09302325581396`}]}, {{
                    7.5, -138.13953488372093`}, 
                    Offset[{2.5, 0.}, {7.5, -138.13953488372093`}]}, {{
                    7.5, -124.18604651162791`}, 
                    Offset[{2.5, 0.}, {7.5, -124.18604651162791`}]}, {{
                    7.5, -96.27906976744185}, 
                    Offset[{2.5, 0.}, {7.5, -96.27906976744185}]}, {{
                    7.5, -82.32558139534883}, 
                    Offset[{2.5, 0.}, {7.5, -82.32558139534883}]}, {{
                    7.5, -68.37209302325581}, 
                    Offset[{2.5, 0.}, {7.5, -68.37209302325581}]}, {{
                    7.5, -54.41860465116279}, 
                    Offset[{2.5, 0.}, {7.5, -54.41860465116279}]}, {{
                    7.5, -26.511627906976745`}, 
                    Offset[{2.5, 0.}, {7.5, -26.511627906976745`}]}, {{
                    7.5, -12.55813953488372}, 
                    Offset[{2.5, 0.}, {7.5, -12.55813953488372}]}, {{7.5, 
                    1.3953488372093024`}, 
                    Offset[{2.5, 0.}, {7.5, 1.3953488372093024`}]}, {{7.5, 
                    15.348837209302326`}, 
                    Offset[{2.5, 0.}, {7.5, 15.348837209302326`}]}, {{7.5, 
                    43.25581395348837}, 
                    Offset[{2.5, 0.}, {7.5, 43.25581395348837}]}, {{7.5, 
                    57.2093023255814}, 
                    Offset[{2.5, 0.}, {7.5, 57.2093023255814}]}, {{7.5, 
                    71.16279069767442}, 
                    Offset[{2.5, 0.}, {7.5, 71.16279069767442}]}, {{7.5, 
                    85.11627906976744}, 
                    Offset[{2.5, 0.}, {7.5, 85.11627906976744}]}, {{7.5, 
                    113.02325581395348`}, 
                    Offset[{2.5, 0.}, {7.5, 113.02325581395348`}]}, {{7.5, 
                    126.97674418604652`}, 
                    Offset[{2.5, 0.}, {7.5, 126.97674418604652`}]}, {{7.5, 
                    140.93023255813952`}, 
                    Offset[{2.5, 0.}, {7.5, 140.93023255813952`}]}, {{7.5, 
                    154.88372093023256`}, 
                    Offset[{2.5, 0.}, {7.5, 154.88372093023256`}]}}], 
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4], 
                    Opacity[0.3]], StripOnInput -> False]}, 
                  StyleBox[
                   StyleBox[{{
                    StyleBox[{
                    InsetBox[
                    FormBox["0", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, -180.}], {-1, 0.}, Automatic, {1, 
                    0}], 
                    InsetBox[
                    FormBox["5", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, -110.23255813953489`}], {-1, 0.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["10", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, -40.46511627906977}], {-1, 0.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["15", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 29.302325581395348`}], {-1, 0.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["20", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 99.06976744186046}], {-1, 0.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["25", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 168.8372093023256}], {-1, 0.}, 
                    Automatic, {1, 0}]}, 
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]], {
                    Directive[
                    Opacity[1]], 
                    Directive[
                    Opacity[1]]}, StripOnInput -> False], 
                    
                    StyleBox[{{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}}, 
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4], 
                    Opacity[0.3]], {
                    Directive[
                    Opacity[1]], 
                    Directive[
                    Opacity[1]]}, StripOnInput -> False]}, {}}, {
                    Directive[
                    Opacity[1]], 
                    Directive[
                    Opacity[1]]}, StripOnInput -> False], "GraphicsLabel", 
                   StripOnInput -> False]}, "GraphicsTicks", StripOnInput -> 
                 False], {
                 Directive[
                  AbsoluteThickness[0.2], 
                  GrayLevel[0.4]], 
                 Directive[
                  AbsoluteThickness[0.2], 
                  GrayLevel[0.4], 
                  Opacity[0.3]]}, StripOnInput -> False]}, "GraphicsAxes", 
              StripOnInput -> False]}, PlotRangePadding -> Scaled[0.02], 
            PlotRange -> All, Frame -> True, 
            FrameTicks -> {{False, False}, {True, False}}, FrameStyle -> 
            Opacity[0], FrameTicksStyle -> Opacity[0], 
            ImageSize -> {Automatic, 360}, BaseStyle -> {}], Alignment -> 
           Left, AppearanceElements -> None, ImageMargins -> {{5, 5}, {5, 5}},
            ImageSizeAction -> "ResizeToFit"], LineIndent -> 0, StripOnInput -> 
          False], {FontFamily -> "Arial"}, Background -> Automatic, 
         StripOnInput -> False], TraditionalForm]}, "BarLegend", 
      DisplayFunction -> (#& ), 
      InterpretationFunction :> (RowBox[{"BarLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{
                 RowBox[{
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"#1", "\[GreaterEqual]", "1"}], ",", "Black", ",",
                     "White"}], "]"}], "&"}], ")"}], "[", "#1", "]"}], "&"}], 
               ",", 
               RowBox[{"{", 
                 RowBox[{"0.013342572`", ",", "25.775847`"}], "}"}]}], "}"}], 
           ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
           RowBox[{"LegendMarkerSize", "\[Rule]", "360"}], ",", 
           RowBox[{"ScalingFunctions", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"Identity", ",", "Identity"}], "}"}]}], ",", 
           RowBox[{"Charting`TickSide", "\[Rule]", "Right"}], ",", 
           RowBox[{"ColorFunctionScaling", "\[Rule]", "False"}]}], "]"}]& )], 
     TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.784488288500745*^9, 3.78448831979163*^9, {3.784488375098234*^9, 
   3.7844884015829043`*^9}, 3.784488443566553*^9},
 CellLabel->"Out[21]=",ExpressionUUID->"c9626e76-2b82-4972-bd5e-f060104073fe"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"int", "=", 
   RowBox[{
    RowBox[{"UnitStep", "[", 
     RowBox[{"int1", "-", "1"}], "]"}], "*", 
    RowBox[{"UnitStep", "[", 
     RowBox[{"1", "-", "int2"}], "]"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7844889003744903`*^9, 3.78448891850391*^9}},
 CellLabel->"In[42]:=",ExpressionUUID->"31e69048-9843-420f-932e-94639533b2bf"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"mask", "=", 
  RowBox[{"ListDensityPlot", "[", 
   RowBox[{
    RowBox[{"Transpose", "@", "int"}], ",", 
    RowBox[{"PlotLegends", "\[Rule]", "Automatic"}], ",", 
    RowBox[{"DataRange", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", "20"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "2"}], "}"}]}], "}"}]}], ",", 
    RowBox[{"ColorFunction", "\[Rule]", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"#", "<", "0.5"}], ",", " ", "Blue", ",", "Transparent"}], 
        "]"}], "&"}], ")"}]}], ",", 
    RowBox[{"ColorFunctionScaling", "\[Rule]", "False"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7844887592886963`*^9, 3.784488771513688*^9}, {
  3.784488995064557*^9, 3.784489033135225*^9}, {3.7845005753432283`*^9, 
  3.7845006316713805`*^9}},
 CellLabel->"In[78]:=",ExpressionUUID->"d099b108-9f7e-484c-ab55-8eb296d0f8fb"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[
    GraphicsComplexBox[CompressedData["
1:eJxd3F3IPXtZx+GhRUErwlVLM5TaWfZimZXtAoN0R1BIYJAQdmKRREJI4FEU
FhhoBQZJ4YknQtCJFOKgB0oiDBJ1UMRkMFZjY2otQ3cv9rJ69Zk91/fhvveJ
XM7M77+eNf8Pw+/ez54X/PTP/9jPfNEwDNOXDsPD//Z/fu0j9z97zRPLK6pv
8aee/cF3vvkd/9KO3+PnPBx+9fBUPf8Uv/8NH3vfGz72JU/V68/xTzzxvM/8
4Ou+PH5mvUv8y69/97Pe9vmvaOtf41d9+E9e9Asve078vv3P+6r4ax+Wf9NX
x2/Z//znxZ994/m1r/rw8+Mf3z/P18R/+LD8Fz8RX/fP93XxD7/9ha98+wtf
EP/S/nkf/Qcvf/Kjb/3I18ef2D//N8TPffh4r39h/CP7z/ON8a+849VPv/H8
TfF795/v0Z9+uPzd3xw/f/95vyX+0acffsAXxb+6//zfGr//4cd5+tGf2b+P
b4ufeOXDD/ji+NX79/Pt8Vs//673vPzJl8Qf2L+v74g/93D4o4/+yv37+874
xb/38U8++4OP/qH9+/yu+Kfe9PCFPvoX9+/30b/98PW89qXx7+/f96P/aP84
3x1v+/f/6Gf+ebJ5GL5w0Rc+2e++Qh/Vt1gf9fg91kc9/xTro15/jvVR17vE
+qjrX2N9sD5YH6wP1gfrg/XB+mB9sD5YH6wP1gfrg/XB+mB9sD5YH6yP3J+j
D9YH64P1wfpgfbA+WB+sD9YH64P1wfpgfbA+WB+sj2p9jK2PsfUxtj7G1sfY
+hhbH2PrY2x9jK2PsfUxtj7G1sfY+hhbH2PrY2x9jK2PsfUxtj7G1sfY+hhb
H2PrY2x9jK2PsfUxtj7G1sfY+hhbH2PrY2x9jK2PsfUxtj7G1sfY+hhbH2Pr
Y2x9jK2PsfUxtj7G1sfY+hhbH2PrY2x9jK2PMX18YZEvfFEfSh/Vt1gf9fg9
1kc9/xTro15/jvVR17vE+qjrX2N9sD5YH6wP1gfrg/XB+mB9sD5YH6wP1gfr
g/XB+mB9sD5YH6yP3J+jD9YH64P1wfpgfbA+WB+sD9YH64P1wfpgfbA+WB+s
j2rPj6k9P6b2/Jja82Nqz4+pPT+m9vyY2vNjas+PqT0/pvb8mNrzY2rPj6k9
P6b2/Jja82Nqz4+pPT+m9vyY2vNjas+PqT0/pvb8mNrzY2rPj6k9P6b2/Jja
82Nqz4+pPT+m9vyY2vNjas+PqT0/pvb8mNrzY2rPj6k9P6b2/Jja82Nqz4+p
PT+m9vyY2vNjas+PqT0/pvb8mNrzY2rPj6k9P6b0sefyxB+nj+pbrI96/B7r
o55/ivVRrz/H+qjrXWJ91PWvsT5YH6wP1gfrg/XB+mB9sD5YH6wP1gfrg/XB
+mB9sD5YH6wP1kfuz9EH64P1wfpgfbA+WB+sD9YH64P1wfpgfbA+WB+sD9ZH
9TD8xf5//Gn6qL7F+qjH77E+6vmnWB/1+nOsj7reJdZHXf8a64P1wfpgfbA+
WB+sD9YH64P1wfpgfbA+WB+sD9YH64P1wfpgfeT+HH2wPlgfrA/WB+uD9cH6
YH2wPlgfrA/WB+uD9cH6YH1UD8P+MV755+mj+hbrox6/x/qo559ifdTrz7E+
6nqXWB91/WusD9YH64P1wfpgfbA+WB+sD9YH64P1wfpgfbA+WB+sD9YH64P1
kftz9MH6YH2wPlgfrA/WB+uD9cH6YH2wPlgfrA/WB+uD9VFt/zG3/cfc9h9z
23/Mbf8xt/3H3PYfc9t/zG3/Mbf9x9z2H3Pbf8xt/zG3/cfc9h9z23/Mbf8x
t/3H3PYfc9t/zG3/Mbf9x9z2H3Pbf8xt/zG3/cfc9h9z23/Mbf8xt/3H3PYf
c9t/zG3/Mbf9x9z2H3Pbf8xt/zG3/cfc9h9z23/Mbf8xt/3H3PYfc9t/zG3/
Mbf9x9z2H3Pbf8xt/zG3/cecPh4+1Tvf/Jfpo/oW66Mev8f6qOefYn3U68+x
Pup6l1gfdf1rrA/WB+uD9cH6YH2wPlgfrA/WB+uD9cH6YH2wPlgfrA/WB+uD
9ZH7c/TB+mB9sD5YH6wP1gfrg/XB+mB9sD5YH6wP1gfrg/VRbX++tP350vbn
S9ufL21/vrT9+dL250vbny9tf760/fnS9udL258vbX++tP350vbnS9ufL21/
vrT9+dL250vbny9tf760/fnS9udL258vbX++tP350vbnS9ufL21/vrT9+dL2
50vbny9tf760/fnS9udL258vbX++tP350vbnS9ufL21/vrT9+dL250vbny9t
f760/fnS9udL258vbX++tP354++RvGT/XH+VPqpvsT7q8Xusj3r+KdZHvf4c
66Oud4n1Ude/xvpgfbA+WB+sD9YH64P1wfpgfbA+WB+sD9YH64P1wfpgfbA+
WB+5P0cfrA/WB+uD9cH6YH2wPlgfrA/WB+uD9cH6YH2wPlgf1eZXa5tfrW1+
tbb51drmV2ubX61tfrW2+dXa5ldrm1+tbX61tvnV2uZXa5tfrW1+tbb51drm
V2ubX61tfrW2+dXa5ldrm1+tbX61tvnV2uZXa5tfrW1+tbb51drmV2ubX61t
frW2+dXa5ldrm1+tbX61tvnV2uZXa5tfrW1+tbb51drmV2ubX61tfrW2+dXa
5ldrm1+tbX61tvnV2uZXa5tfreljX+b+8fRRfYv1UY/fY33U80+xPur151gf
db1LrI+6/jXWB+uD9cH6YH2wPlgfrA/WB+uD9cH6YH2wPlgfrA/WB+uD9cH6
yP05+mB9sD5YH6wP1gfrg/XB+mB9sD5YH6wP1gfrg/XB+qg2393afHdr892t
zXe3Nt/d2nx3a/Pdrc13tzbf3dp8d2vz3a3Nd7c2393afHdr892tzXe3Nt/d
2nx3a/Pdrc13tzbf3dp8d2vz3a3Nd7c2393afHdr892tzXe3Nt/d2nx3a/Pd
rc13tzbf3dp8d2vz3a3Nd7c2393afHdr892tzXe3Nt/d2nx3a/Pdrc13tzbf
3dp8d2vz3a3Nd7c2393afHdrv7f+ifRRfYv1UY/fY33U80+xPur151gfdb1L
rI+6/jXWB+uD9cH6YH2wPlgfrA/WB+uD9cH6YH2wPlgfrA/WB+uD9cH6yP05
+mB9sD5YH6wP1gfrg/XB+mB9sD5YH6wP1gfrg/XB+qgehu/b571/lz6qb7E+
6vF7rI96/inWR73+HOujrneJ9VHXv8b6YH2wPlgfrA/WB+uD9cH6YH2wPlgf
rA/WB+uD9cH6YH2wPlgfuT9HH6wP1gfrg/XB+mB9sD5YH6wP1gfrg/XB+mB9
sD5YH9XD8Jv7z/Wp9FF9i/VRj99jfdTzT7E+6vXnWB91vUusj7r+NdYH64P1
wfpgfbA+WB+sD9YH64P1wfpgfbA+WB+sD9YH64P1wfrI/Tn6YH2wPlgfrA/W
B+uD9cH6YH2wPlgfrA/WB+uD9cH6qB6Gbf/3IZ9OH9W3WB/1+D3WRz3/FOuj
Xn+O9VHXu8T6qOtfY32wPlgfrA/WB+uD9cH6YH2wPlgfrA/WB+uD9cH6YH2w
PlgfrI/cn6MP1gfrg/XB+mB9sD5YH6wP1gfrg/XB+mB9sD5YH6yP6mH43v0X
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
1gfrg/XB+mB9sD5YH6wP1gfro3oYPrn/91L/nj6qb7E+6vF7rI96/inWR73+
HOujrneJ9VHXv8b6YH2wPlgfrA/WB+uD9cH6YH2wPlgfrA/WB+uD9cH6YH2w
PlgfuT9HH6wP1gfrg/XB+mB9sD5YH6wP1gfrg/XB+mB9sD5YH9XD8KzXPvzN
+o/0UX2L9VGP32N91PNPsT7q9edYH3W9S6yPuv411gfrg/XB+mB9sD5YH6wP
1gfrg/XB+mB9sD5YH6wP1gfrg/XB+sj9OfpgfbA+WB+sD9YH64P1wfpgfbA+
WB+sD9YH64P1wfqoHoaX7f894WMf1bdYH/X4Pc7728v5pzjvby/Xn+O8v72s
d4nz/vay/jXO+9sP64Pz/vbDeX/74by//XDe3344728/nPe3H8772w/n/e2H
8/72w3l/++G8v/1w3t9+OO9vP5z3tx/O+9sP5/3th/P+9sN5f7v7c/TBeX/7
4by//XDe3344728/nPe3H8772w/n/e2H8/72w3l/++G8v/1w3t9+OO9vP5z3
tx/O+9sP5/3th/VRPQyv2/9i/Wf6qL7F+qjH77E+6vmnWB/1+nOsj7reJdZH
Xf8a64P1wfpgfbA+WB+sD9YH64P1wfpgfbA+WB+sD9YH64P1wfpgfeT+HH2w
PlgfrA/WB+uD9cH6YH2wPlgfrA/WB+uD9cH6YH1UD8Pbjr/n+qi+xfqox++x
Pur5p1gf9fpzrI+63iXWR13/GuuD9cH6YH2wPlgfrA/WB+uD9cH6YH2wPlgf
rA/WB+uD9cH6YH3k/hx9sD5YH6wP1gfrg/XB+mB9sD5YH6wP1gfrg/XB+mB9
VA/D+5954Wj6qL7F+qjH77E+6vmnWB/1+nOsj7reJdZHXf8a64P1wfpgfbA+
WB+sD9YH64P1wfpgfbA+WB+sD9YH64P1wfpgfeT+HH2wPlgfrA/WB+uD9cH6
YH2wPlgfrA/WB+uD9cH6YH1UD8Pf7n+R/it9VN9ifdTj91gf9fxTrI96/TnW
R13vEuujrn+N9cH6YH2wPlgfrA/WB+uD9cH6YH2wPlgfrA/WB+uD9cH6YH2w
PnJ/jj5YH6wP1gfrg/XB+mB9sD5YH6wP1gfrg/XB+mB9sD6qh+HLHv51+rP/
O31U32J91OP3WB/1/FOsj3r9OdZHXe8S66Ouf431wfpgfbA+WB+sD9YH64P1
wfpgfbA+WB+sD9YH64P1wfpgfbA+cn+OPlgfrA/WB+uD9cH6YH2wPlgfrA/W
B+uD9cH6YH2wPqqH4Xv2z/XYR/Ut1kc9fo/1Uc8/xfqo159jfdT1LrE+6vrX
WB+sD9YH64P1wfpgfbA+WB+sD9YH64P1wfpgfbA+WB+sD9YH6yP35+iD9cH6
YH2wPlgfrA/WB+uD9cH6YH2wPlgfrA/WB+ujehh+cv85/yd9VN9ifdTj91gf
9fxTrI96/TnWR13vEuujrn+N9cH6YH2wPlgfrA/WB+uD9cH6YH2wPlgfrA/W
B+uD9cH6YH2wPnJ/jj5YH6wP1gfrg/XB+mB9sD5YH6wP1gfrg/XB+mB9sD6q
h+HX9+/9f9NH9S3WRz1+j/VRzz/F+qjXn2N91PUusT7q+tdYH6wP1gfrg/XB
+mB9sD5YH6wP1gfrg/XB+mB9sD5YH6wP1gfrI/fn6IP1wfpgfbA+WB+sD9YH
64P1wfpgfbA+WB+sD9YH66N6GN778J/bvuexj+pbrI96/B7ro55/ivVRrz/H
+qjrXWJ91PWvsT5YH6wP1gfrg/XB+mB9sD5YH6wP1gfrg/XB+mB9sD5YH6wP
1kfuz9EH64P1wfpgfbA+WB+sD9YH64P1wfpgfbA+WB+sD9ZH9TD89cO/LnzN
/6WP6lusj3r8Huujnn+K9VGvP8f6qOtdYn3U9a+xPlgfrA/WB+uD9cH6YH2w
PlgfrA/WB+uD9cH6YH2wPlgfrA/WR+7P0Qfrg/XB+mB9sD5YH6wP1gfrg/XB
+mB9sD5YH6wP1kd1/nlKH9V5T+9T+qjHMyd+Sh/1/FOsj3r9OdZHXe8S66Ou
f431wfpgfbA+WB+sD9YH64P1wfpgfbA+WB+sD9YH64P1wfpgfbA+WB+sD9YH
64P1wfpgfbA+WB+sD9YH64P1wfpgfbA++Jn/eTL+f3BoFQU=
     "], {{{
        EdgeForm[], 
        GrayLevel[0.8], 
        GraphicsGroupBox[{
          PolygonBox[CompressedData["
1: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
           "]]}]}, {}, {}, {}, {}}}, VertexColors -> {
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       GrayLevel[0, 0], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 0, 1]}], {
    DisplayFunction -> Identity, AspectRatio -> 1, 
     AxesOrigin -> {Automatic, Automatic}, DisplayFunction :> Identity, Frame -> 
     True, FrameLabel -> {None, None}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultColorFunction" -> 
       "M10DefaultDensityGradient", 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "GridLinesInFront" -> True}, PlotRange -> {{0., 20.}, {0., 2.}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
       FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           GraphicsBox[{
             RasterBox[CompressedData["
1:eJztybENgCAURdFPYBEncQdGIKFmTrdhBH9rYanVOcnLK+4xVp81Iq5cybV4
s8/n67qu67qu67quf9UBAAD+dwMkyu8z
              "], {{
                Rational[-15, 2], -180}, {
                Rational[15, 2], 180}}], {Antialiasing -> False, 
              AbsoluteThickness[0.1], 
              Directive[
               Opacity[0.3], 
               GrayLevel[0]], 
              LineBox[
               NCache[{{
                  Rational[15, 2], -180}, {
                  Rational[-15, 2], -180}, {
                  Rational[-15, 2], 180}, {
                  Rational[15, 2], 180}, {
                  Rational[15, 2], -180}}, {{
                 7.5, -180}, {-7.5, -180}, {-7.5, 180}, {7.5, 180}, {
                 7.5, -180}}]]}, {
              CapForm[None], {}}, 
             StyleBox[{Antialiasing -> False, 
               StyleBox[
                LineBox[{{7.5, -180.}, {7.5, 180.}}], 
                Directive[
                 AbsoluteThickness[0.2], 
                 Opacity[0.3], 
                 GrayLevel[0]], StripOnInput -> False], 
               StyleBox[
                StyleBox[{{
                   StyleBox[
                    LineBox[{{{7.5, -180.}, 
                    Offset[{4., 0}, {7.5, -180.}]}, {{7.5, -108.}, 
                    Offset[{4., 0}, {7.5, -108.}]}, {{7.5, -36.}, 
                    Offset[{4., 0}, {7.5, -36.}]}, {{7.5, 36.}, 
                    Offset[{4., 0}, {7.5, 36.}]}, {{7.5, 108.}, 
                    Offset[{4., 0}, {7.5, 108.}]}, {{7.5, 180.}, 
                    Offset[{4., 0}, {7.5, 180.}]}}], 
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]], StripOnInput -> False], 
                   StyleBox[
                    LineBox[{{{7.5, -162.}, 
                    Offset[{2.5, 0.}, {7.5, -162.}]}, {{7.5, -144.}, 
                    Offset[{2.5, 0.}, {7.5, -144.}]}, {{7.5, -126.}, 
                    Offset[{2.5, 0.}, {7.5, -126.}]}, {{7.5, -90.}, 
                    Offset[{2.5, 0.}, {7.5, -90.}]}, {{7.5, -72.}, 
                    Offset[{2.5, 0.}, {7.5, -72.}]}, {{
                    7.5, -54.000000000000014`}, 
                    Offset[{2.5, 0.}, {7.5, -54.000000000000014`}]}, {{
                    7.5, -18.}, 
                    Offset[{2.5, 0.}, {7.5, -18.}]}, {{7.5, 0.}, 
                    Offset[{2.5, 0.}, {7.5, 0.}]}, {{7.5, 18.00000000000003}, 
                    Offset[{2.5, 0.}, {7.5, 18.00000000000003}]}, {{7.5, 54.}, 
                    Offset[{2.5, 0.}, {7.5, 54.}]}, {{7.5, 71.99999999999997}, 
                    Offset[{2.5, 0.}, {7.5, 71.99999999999997}]}, {{7.5, 90.}, 
                    Offset[{2.5, 0.}, {7.5, 90.}]}, {{7.5, 126.}, 
                    Offset[{2.5, 0.}, {7.5, 126.}]}, {{7.5, 144.}, 
                    Offset[{2.5, 0.}, {7.5, 144.}]}, {{7.5, 162.}, 
                    Offset[{2.5, 0.}, {7.5, 162.}]}}], 
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4], 
                    Opacity[0.3]], StripOnInput -> False]}, 
                  StyleBox[
                   StyleBox[{{
                    StyleBox[{
                    InsetBox[
                    FormBox["0", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, -180.}], {-1, 0.}, Automatic, {1, 
                    0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox["\"0.2\"", 0.2, AutoDelete -> True], 
                    NumberForm[#, {
                    DirectedInfinity[1], 1}]& ], TraditionalForm], 
                    Offset[{7., 0.}, {7.5, -108.}], {-1, 0.}, Automatic, {1, 
                    0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox["\"0.4\"", 0.4, AutoDelete -> True], 
                    NumberForm[#, {
                    DirectedInfinity[1], 1}]& ], TraditionalForm], 
                    Offset[{7., 0.}, {7.5, -36.}], {-1, 0.}, Automatic, {1, 
                    0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox["\"0.6\"", 0.6, AutoDelete -> True], 
                    NumberForm[#, {
                    DirectedInfinity[1], 1}]& ], TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 36.}], {-1, 0.}, Automatic, {1, 
                    0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox["\"0.8\"", 0.8, AutoDelete -> True], 
                    NumberForm[#, {
                    DirectedInfinity[1], 1}]& ], TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 108.}], {-1, 0.}, Automatic, {1, 
                    0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox["\"1.0\"", 1., AutoDelete -> True], 
                    NumberForm[#, {
                    DirectedInfinity[1], 1}]& ], TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 180.}], {-1, 0.}, Automatic, {1, 
                    0}]}, 
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]], {
                    Directive[
                    Opacity[1]], 
                    Directive[
                    Opacity[1]]}, StripOnInput -> False], 
                    
                    StyleBox[{{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}}, 
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4], 
                    Opacity[0.3]], {
                    Directive[
                    Opacity[1]], 
                    Directive[
                    Opacity[1]]}, StripOnInput -> False]}, {}}, {
                    Directive[
                    Opacity[1]], 
                    Directive[
                    Opacity[1]]}, StripOnInput -> False], "GraphicsLabel", 
                   StripOnInput -> False]}, "GraphicsTicks", StripOnInput -> 
                 False], {
                 Directive[
                  AbsoluteThickness[0.2], 
                  GrayLevel[0.4]], 
                 Directive[
                  AbsoluteThickness[0.2], 
                  GrayLevel[0.4], 
                  Opacity[0.3]]}, StripOnInput -> False]}, "GraphicsAxes", 
              StripOnInput -> False]}, PlotRangePadding -> Scaled[0.02], 
            PlotRange -> All, Frame -> True, 
            FrameTicks -> {{False, False}, {True, False}}, FrameStyle -> 
            Opacity[0], FrameTicksStyle -> Opacity[0], 
            ImageSize -> {Automatic, 360}, BaseStyle -> {}], Alignment -> 
           Left, AppearanceElements -> None, ImageMargins -> {{5, 5}, {5, 5}},
            ImageSizeAction -> "ResizeToFit"], LineIndent -> 0, StripOnInput -> 
          False], {FontFamily -> "Arial"}, Background -> Automatic, 
         StripOnInput -> False], TraditionalForm]}, "BarLegend", 
      DisplayFunction -> (#& ), 
      InterpretationFunction :> (RowBox[{"BarLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{
                 RowBox[{
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"#1", "<", "0.5`"}], ",", "Blue", ",", 
                    "Transparent"}], "]"}], "&"}], ")"}], "[", "#1", "]"}], 
                 "&"}], ",", 
               RowBox[{"{", 
                 RowBox[{"0.`", ",", "1.`"}], "}"}]}], "}"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
           RowBox[{"LegendMarkerSize", "\[Rule]", "360"}], ",", 
           RowBox[{"ScalingFunctions", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"Identity", ",", "Identity"}], "}"}]}], ",", 
           RowBox[{"Charting`TickSide", "\[Rule]", "Right"}], ",", 
           RowBox[{"ColorFunctionScaling", "\[Rule]", "False"}]}], "]"}]& )], 
     TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.784488772128078*^9, 3.784488941924466*^9, 3.784488999079645*^9, {
   3.7844890297682066`*^9, 3.784489034482317*^9}, {3.784500598721549*^9, 
   3.7845006332172456`*^9}},
 CellLabel->"Out[78]=",ExpressionUUID->"d1ac7722-cdbd-44a4-af3d-8c6f25556e36"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"peakdiff", "=", 
   RowBox[{"Import", "[", 
    RowBox[{
     RowBox[{"NotebookDirectory", "[", "]"}], "<>", "\"\<peakdiff.dat\>\""}], 
    "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.784492348062978*^9, 3.784492348593243*^9}, {
  3.7844972183414764`*^9, 3.784497245139658*^9}},
 CellLabel->"In[63]:=",ExpressionUUID->"f0fd5a1e-9646-4f24-a3c1-46547a44391e"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"pd", "=", 
  RowBox[{"ListDensityPlot", "[", 
   RowBox[{
    RowBox[{"Transpose", "@", 
     RowBox[{"(", 
      RowBox[{"1000", "peakdiff", "*", "int"}], ")"}]}], ",", 
    RowBox[{"PlotLegends", "\[Rule]", "Automatic"}], ",", 
    RowBox[{"DataRange", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", "20"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "2"}], "}"}]}], "}"}]}], ",", 
    RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
    RowBox[{"ColorFunction", "\[Rule]", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"39", "<", "#", "<", "41"}], ",", "Black", ",", "White"}], 
        "]"}], "&"}], 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"#", "<=", "10"}], ",", "White", ",", 
          RowBox[{
           RowBox[{"ColorData", "[", "\"\<TemperatureMap\>\"", "]"}], "[", 
           RowBox[{
            RowBox[{"Floor", "[", "#", "]"}], "/", "50"}], "]"}]}], "]"}], 
        "&"}], "*)"}], ")"}]}], ",", 
    RowBox[{"ColorFunctionScaling", "\[Rule]", "False"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.784497255943733*^9, 3.7844972657494745`*^9}, {
  3.7844973055926447`*^9, 3.7844974964741497`*^9}, {3.784499042791068*^9, 
  3.784499050788639*^9}, {3.784499118221301*^9, 3.7844991833587785`*^9}, {
  3.784499217278932*^9, 3.7844992480127506`*^9}, {3.7844992827328444`*^9, 
  3.784499331495405*^9}, {3.7845002422251515`*^9, 3.784500286199822*^9}, {
  3.7845006429512205`*^9, 3.7845006577696247`*^9}},
 CellLabel->"In[80]:=",ExpressionUUID->"9645d5e9-98f5-44c0-9854-92c841d50634"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[
    GraphicsComplexBox[CompressedData["
1:eJxd3F3IPXtZx+GhRUErwlVLM5TaWfZimZXtAoN0R1BIYJAQdmKRREJI4FEU
FhhoBQZJ4YknQtCJFOKgB0oiDBJ1UMRkMFZjY2otQ3cv9rJ69Zk91/fhvveJ
XM7M77+eNf8Pw+/ez54X/PTP/9jPfNEwDNOXDsPD//Z/fu0j9z97zRPLK6pv
8aee/cF3vvkd/9KO3+PnPBx+9fBUPf8Uv/8NH3vfGz72JU/V68/xTzzxvM/8
4Ou+PH5mvUv8y69/97Pe9vmvaOtf41d9+E9e9Asve078vv3P+6r4ax+Wf9NX
x2/Z//znxZ994/m1r/rw8+Mf3z/P18R/+LD8Fz8RX/fP93XxD7/9ha98+wtf
EP/S/nkf/Qcvf/Kjb/3I18ef2D//N8TPffh4r39h/CP7z/ON8a+849VPv/H8
TfF795/v0Z9+uPzd3xw/f/95vyX+0acffsAXxb+6//zfGr//4cd5+tGf2b+P
b4ufeOXDD/ji+NX79/Pt8Vs//673vPzJl8Qf2L+v74g/93D4o4/+yv37+874
xb/38U8++4OP/qH9+/yu+Kfe9PCFPvoX9+/30b/98PW89qXx7+/f96P/aP84
3x1v+/f/6Gf+ebJ5GL5w0Rc+2e++Qh/Vt1gf9fg91kc9/xTro15/jvVR17vE
+qjrX2N9sD5YH6wP1gfrg/XB+mB9sD5YH6wP1gfrg/XB+mB9sD5YH6yP3J+j
D9YH64P1wfpgfbA+WB+sD9YH64P1wfpgfbA+WB+sj2p9jK2PsfUxtj7G1sfY
+hhbH2PrY2x9jK2PsfUxtj7G1sfY+hhbH2PrY2x9jK2PsfUxtj7G1sfY+hhb
H2PrY2x9jK2PsfUxtj7G1sfY+hhbH2PrY2x9jK2PsfUxtj7G1sfY+hhbH2Pr
Y2x9jK2PsfUxtj7G1sfY+hhbH2PrY2x9jK2PMX18YZEvfFEfSh/Vt1gf9fg9
1kc9/xTro15/jvVR17vE+qjrX2N9sD5YH6wP1gfrg/XB+mB9sD5YH6wP1gfr
g/XB+mB9sD5YH6yP3J+jD9YH64P1wfpgfbA+WB+sD9YH64P1wfpgfbA+WB+s
j2rPj6k9P6b2/Jja82Nqz4+pPT+m9vyY2vNjas+PqT0/pvb8mNrzY2rPj6k9
P6b2/Jja82Nqz4+pPT+m9vyY2vNjas+PqT0/pvb8mNrzY2rPj6k9P6b2/Jja
82Nqz4+pPT+m9vyY2vNjas+PqT0/pvb8mNrzY2rPj6k9P6b2/Jja82Nqz4+p
PT+m9vyY2vNjas+PqT0/pvb8mNrzY2rPj6k9P6b0sefyxB+nj+pbrI96/B7r
o55/ivVRrz/H+qjrXWJ91PWvsT5YH6wP1gfrg/XB+mB9sD5YH6wP1gfrg/XB
+mB9sD5YH6wP1kfuz9EH64P1wfpgfbA+WB+sD9YH64P1wfpgfbA+WB+sD9ZH
9TD8xf5//Gn6qL7F+qjH77E+6vmnWB/1+nOsj7reJdZHXf8a64P1wfpgfbA+
WB+sD9YH64P1wfpgfbA+WB+sD9YH64P1wfpgfeT+HH2wPlgfrA/WB+uD9cH6
YH2wPlgfrA/WB+uD9cH6YH1UD8P+MV755+mj+hbrox6/x/qo559ifdTrz7E+
6nqXWB91/WusD9YH64P1wfpgfbA+WB+sD9YH64P1wfpgfbA+WB+sD9YH64P1
kftz9MH6YH2wPlgfrA/WB+uD9cH6YH2wPlgfrA/WB+uD9VFt/zG3/cfc9h9z
23/Mbf8xt/3H3PYfc9t/zG3/Mbf9x9z2H3Pbf8xt/zG3/cfc9h9z23/Mbf8x
t/3H3PYfc9t/zG3/Mbf9x9z2H3Pbf8xt/zG3/cfc9h9z23/Mbf8xt/3H3PYf
c9t/zG3/Mbf9x9z2H3Pbf8xt/zG3/cfc9h9z23/Mbf8xt/3H3PYfc9t/zG3/
Mbf9x9z2H3Pbf8xt/zG3/cecPh4+1Tvf/Jfpo/oW66Mev8f6qOefYn3U68+x
Pup6l1gfdf1rrA/WB+uD9cH6YH2wPlgfrA/WB+uD9cH6YH2wPlgfrA/WB+uD
9ZH7c/TB+mB9sD5YH6wP1gfrg/XB+mB9sD5YH6wP1gfrg/VRbX++tP350vbn
S9ufL21/vrT9+dL250vbny9tf760/fnS9udL258vbX++tP350vbnS9ufL21/
vrT9+dL250vbny9tf760/fnS9udL258vbX++tP350vbnS9ufL21/vrT9+dL2
50vbny9tf760/fnS9udL258vbX++tP350vbnS9ufL21/vrT9+dL250vbny9t
f760/fnS9udL258vbX++tP354++RvGT/XH+VPqpvsT7q8Xusj3r+KdZHvf4c
66Oud4n1Ude/xvpgfbA+WB+sD9YH64P1wfpgfbA+WB+sD9YH64P1wfpgfbA+
WB+5P0cfrA/WB+uD9cH6YH2wPlgfrA/WB+uD9cH6YH2wPlgf1eZXa5tfrW1+
tbb51drmV2ubX61tfrW2+dXa5ldrm1+tbX61tvnV2uZXa5tfrW1+tbb51drm
V2ubX61tfrW2+dXa5ldrm1+tbX61tvnV2uZXa5tfrW1+tbb51drmV2ubX61t
frW2+dXa5ldrm1+tbX61tvnV2uZXa5tfrW1+tbb51drmV2ubX61tfrW2+dXa
5ldrm1+tbX61tvnV2uZXa5tfreljX+b+8fRRfYv1UY/fY33U80+xPur151gf
db1LrI+6/jXWB+uD9cH6YH2wPlgfrA/WB+uD9cH6YH2wPlgfrA/WB+uD9cH6
yP05+mB9sD5YH6wP1gfrg/XB+mB9sD5YH6wP1gfrg/XB+qg2393afHdr892t
zXe3Nt/d2nx3a/Pdrc13tzbf3dp8d2vz3a3Nd7c2393afHdr892tzXe3Nt/d
2nx3a/Pdrc13tzbf3dp8d2vz3a3Nd7c2393afHdr892tzXe3Nt/d2nx3a/Pd
rc13tzbf3dp8d2vz3a3Nd7c2393afHdr892tzXe3Nt/d2nx3a/Pdrc13tzbf
3dp8d2vz3a3Nd7c2393afHdrv7f+ifRRfYv1UY/fY33U80+xPur151gfdb1L
rI+6/jXWB+uD9cH6YH2wPlgfrA/WB+uD9cH6YH2wPlgfrA/WB+uD9cH6yP05
+mB9sD5YH6wP1gfrg/XB+mB9sD5YH6wP1gfrg/XB+qgehu/b571/lz6qb7E+
6vF7rI96/inWR73+HOujrneJ9VHXv8b6YH2wPlgfrA/WB+uD9cH6YH2wPlgf
rA/WB+uD9cH6YH2wPlgfuT9HH6wP1gfrg/XB+mB9sD5YH6wP1gfrg/XB+mB9
sD5YH9XD8Jv7z/Wp9FF9i/VRj99jfdTzT7E+6vXnWB91vUusj7r+NdYH64P1
wfpgfbA+WB+sD9YH64P1wfpgfbA+WB+sD9YH64P1wfrI/Tn6YH2wPlgfrA/W
B+uD9cH6YH2wPlgfrA/WB+uD9cH6qB6Gbf/3IZ9OH9W3WB/1+D3WRz3/FOuj
Xn+O9VHXu8T6qOtfY32wPlgfrA/WB+uD9cH6YH2wPlgfrA/WB+uD9cH6YH2w
PlgfrI/cn6MP1gfrg/XB+mB9sD5YH6wP1gfrg/XB+mB9sD5YH6yP6mH43v0X
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
1gfrg/XB+mB9sD5YH6wP1gfro3oYPrn/91L/nj6qb7E+6vF7rI96/inWR73+
HOujrneJ9VHXv8b6YH2wPlgfrA/WB+uD9cH6YH2wPlgfrA/WB+uD9cH6YH2w
PlgfuT9HH6wP1gfrg/XB+mB9sD5YH6wP1gfrg/XB+mB9sD5YH9XD8KzXPvzN
+o/0UX2L9VGP32N91PNPsT7q9edYH3W9S6yPuv411gfrg/XB+mB9sD5YH6wP
1gfrg/XB+mB9sD5YH6wP1gfrg/XB+sj9OfpgfbA+WB+sD9YH64P1wfpgfbA+
WB+sD9YH64P1wfqoHoaX7f894WMf1bdYH/X4Pc7728v5pzjvby/Xn+O8v72s
d4nz/vay/jXO+9sP64Pz/vbDeX/74by//XDe3344728/nPe3H8772w/n/e2H
8/72w3l/++G8v/1w3t9+OO9vP5z3tx/O+9sP5/3th/P+9sN5f7v7c/TBeX/7
4by//XDe3344728/nPe3H8772w/n/e2H8/72w3l/++G8v/1w3t9+OO9vP5z3
tx/O+9sP5/3th/VRPQyv2/9i/Wf6qL7F+qjH77E+6vmnWB/1+nOsj7reJdZH
Xf8a64P1wfpgfbA+WB+sD9YH64P1wfpgfbA+WB+sD9YH64P1wfpgfeT+HH2w
PlgfrA/WB+uD9cH6YH2wPlgfrA/WB+uD9cH6YH1UD8Pbjr/n+qi+xfqox++x
Pur5p1gf9fpzrI+63iXWR13/GuuD9cH6YH2wPlgfrA/WB+uD9cH6YH2wPlgf
rA/WB+uD9cH6YH3k/hx9sD5YH6wP1gfrg/XB+mB9sD5YH6wP1gfrg/XB+mB9
VA/D+5954Wj6qL7F+qjH77E+6vmnWB/1+nOsj7reJdZHXf8a64P1wfpgfbA+
WB+sD9YH64P1wfpgfbA+WB+sD9YH64P1wfpgfeT+HH2wPlgfrA/WB+uD9cH6
YH2wPlgfrA/WB+uD9cH6YH1UD8Pf7n+R/it9VN9ifdTj91gf9fxTrI96/TnW
R13vEuujrn+N9cH6YH2wPlgfrA/WB+uD9cH6YH2wPlgfrA/WB+uD9cH6YH2w
PnJ/jj5YH6wP1gfrg/XB+mB9sD5YH6wP1gfrg/XB+mB9sD6qh+HLHv51+rP/
O31U32J91OP3WB/1/FOsj3r9OdZHXe8S66Ouf431wfpgfbA+WB+sD9YH64P1
wfpgfbA+WB+sD9YH64P1wfpgfbA+cn+OPlgfrA/WB+uD9cH6YH2wPlgfrA/W
B+uD9cH6YH2wPqqH4Xv2z/XYR/Ut1kc9fo/1Uc8/xfqo159jfdT1LrE+6vrX
WB+sD9YH64P1wfpgfbA+WB+sD9YH64P1wfpgfbA+WB+sD9YH6yP35+iD9cH6
YH2wPlgfrA/WB+uD9cH6YH2wPlgfrA/WB+ujehh+cv85/yd9VN9ifdTj91gf
9fxTrI96/TnWR13vEuujrn+N9cH6YH2wPlgfrA/WB+uD9cH6YH2wPlgfrA/W
B+uD9cH6YH2wPnJ/jj5YH6wP1gfrg/XB+mB9sD5YH6wP1gfrg/XB+mB9sD6q
h+HX9+/9f9NH9S3WRz1+j/VRzz/F+qjXn2N91PUusT7q+tdYH6wP1gfrg/XB
+mB9sD5YH6wP1gfrg/XB+mB9sD5YH6wP1gfrI/fn6IP1wfpgfbA+WB+sD9YH
64P1wfpgfbA+WB+sD9YH66N6GN778J/bvuexj+pbrI96/B7ro55/ivVRrz/H
+qjrXWJ91PWvsT5YH6wP1gfrg/XB+mB9sD5YH6wP1gfrg/XB+mB9sD5YH6wP
1kfuz9EH64P1wfpgfbA+WB+sD9YH64P1wfpgfbA+WB+sD9ZH9TD89cO/LnzN
/6WP6lusj3r8Huujnn+K9VGvP8f6qOtdYn3U9a+xPlgfrA/WB+uD9cH6YH2w
PlgfrA/WB+uD9cH6YH2wPlgfrA/WR+7P0Qfrg/XB+mB9sD5YH6wP1gfrg/XB
+mB9sD5YH6wP1kd1/nlKH9V5T+9T+qjHMyd+Sh/1/FOsj3r9OdZHXe8S66Ou
f431wfpgfbA+WB+sD9YH64P1wfpgfbA+WB+sD9YH64P1wfpgfbA+WB+sD9YH
64P1wfpgfbA+WB+sD9YH64P1wfpgfbA++Jn/eTL+f3BoFQU=
     "], {{{
        EdgeForm[], 
        GrayLevel[0.8], 
        GraphicsGroupBox[{
          PolygonBox[CompressedData["
1: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
           "]]}]}, {}, {}, {}, {}}}, VertexColors -> CompressedData["
1:eJztzrENAlEQQ8ElpAwqoQdKQCKmySvoSiAhhSU4yejvvGRC+3J/3h6nqtrO
9W6/HmPXUTv8za70v2l2pf9NtSv9b7pd6X+sr6V/kSRJkiRJkiRJkiRJkiRJ
kiRJkiRJklzfT6V/rW5X+t/qdqX/TbEr/W+aXel/0+xK//t/Xw1WW6c=
      "]], {
    DisplayFunction -> Identity, AspectRatio -> 1, 
     AxesOrigin -> {Automatic, Automatic}, DisplayFunction :> Identity, Frame -> 
     True, FrameLabel -> {None, None}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultColorFunction" -> 
       "M10DefaultDensityGradient", 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "GridLinesInFront" -> True}, PlotRange -> {{0., 20.}, {0., 2.}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
       FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           GraphicsBox[{
             RasterBox[
             SparseArray[
              Automatic, {201, 1}, 1., {
               1, {{0, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 
                 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 
                 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 
                 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 
                 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 
                 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 
                 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 
                 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 
                 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 
                 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 
                 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 
                 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 
                 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 
                 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 
                 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 
                 200}, {{1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {
                 1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {
                 1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {
                 1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {
                 1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {
                 1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {
                 1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {
                 1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {
                 1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {
                 1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {
                 1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {
                 1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {
                 1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {
                 1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {
                 1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {
                 1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {
                 1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {
                 1}}}, CompressedData["
1:eJxTTMoPSmVkYGA4wQADH+xH6VF6lB6lR+lRGkETBgDa3elA
                "]}], {{
                Rational[-15, 2], -180}, {
                Rational[15, 2], 180}}], {Antialiasing -> False, 
              AbsoluteThickness[0.1], 
              Directive[
               Opacity[0.3], 
               GrayLevel[0]], 
              LineBox[
               NCache[{{
                  Rational[15, 2], -180}, {
                  Rational[-15, 2], -180}, {
                  Rational[-15, 2], 180}, {
                  Rational[15, 2], 180}, {
                  Rational[15, 2], -180}}, {{
                 7.5, -180}, {-7.5, -180}, {-7.5, 180}, {7.5, 180}, {
                 7.5, -180}}]]}, {
              CapForm[None], {}}, 
             StyleBox[{Antialiasing -> False, 
               StyleBox[
                LineBox[{{7.5, -180.}, {7.5, 180.}}], 
                Directive[
                 AbsoluteThickness[0.2], 
                 Opacity[0.3], 
                 GrayLevel[0]], StripOnInput -> False], 
               StyleBox[
                StyleBox[{{
                   StyleBox[
                    LineBox[{{{7.5, -180.}, 
                    Offset[{4., 0}, {7.5, -180.}]}, {{7.5, -90.}, 
                    Offset[{4., 0}, {7.5, -90.}]}, {{7.5, 0.}, 
                    Offset[{4., 0}, {7.5, 0.}]}, {{7.5, 90.}, 
                    Offset[{4., 0}, {7.5, 90.}]}, {{7.5, 180.}, 
                    Offset[{4., 0}, {7.5, 180.}]}}], 
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]], StripOnInput -> False], 
                   StyleBox[
                    LineBox[{{{7.5, -162.}, 
                    Offset[{2.5, 0.}, {7.5, -162.}]}, {{7.5, -144.}, 
                    Offset[{2.5, 0.}, {7.5, -144.}]}, {{7.5, -126.}, 
                    Offset[{2.5, 0.}, {7.5, -126.}]}, {{7.5, -108.}, 
                    Offset[{2.5, 0.}, {7.5, -108.}]}, {{7.5, -72.}, 
                    Offset[{2.5, 0.}, {7.5, -72.}]}, {{7.5, -54.}, 
                    Offset[{2.5, 0.}, {7.5, -54.}]}, {{7.5, -36.}, 
                    Offset[{2.5, 0.}, {7.5, -36.}]}, {{7.5, -18.}, 
                    Offset[{2.5, 0.}, {7.5, -18.}]}, {{7.5, 18.}, 
                    Offset[{2.5, 0.}, {7.5, 18.}]}, {{7.5, 36.}, 
                    Offset[{2.5, 0.}, {7.5, 36.}]}, {{7.5, 54.}, 
                    Offset[{2.5, 0.}, {7.5, 54.}]}, {{7.5, 72.}, 
                    Offset[{2.5, 0.}, {7.5, 72.}]}, {{7.5, 108.}, 
                    Offset[{2.5, 0.}, {7.5, 108.}]}, {{7.5, 126.}, 
                    Offset[{2.5, 0.}, {7.5, 126.}]}, {{7.5, 144.}, 
                    Offset[{2.5, 0.}, {7.5, 144.}]}, {{7.5, 162.}, 
                    Offset[{2.5, 0.}, {7.5, 162.}]}}], 
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4], 
                    Opacity[0.3]], StripOnInput -> False]}, 
                  StyleBox[
                   StyleBox[{{
                    StyleBox[{
                    InsetBox[
                    FormBox["0", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, -180.}], {-1, 0.}, Automatic, {1, 
                    0}], 
                    InsetBox[
                    FormBox["10", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, -90.}], {-1, 0.}, Automatic, {1, 
                    0}], 
                    InsetBox[
                    FormBox["20", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 0.}], {-1, 0.}, Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["30", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 90.}], {-1, 0.}, Automatic, {1, 
                    0}], 
                    InsetBox[
                    FormBox["40", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 180.}], {-1, 0.}, Automatic, {1, 
                    0}]}, 
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]], {
                    Directive[
                    Opacity[1]], 
                    Directive[
                    Opacity[1]]}, StripOnInput -> False], 
                    
                    StyleBox[{{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}}, 
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4], 
                    Opacity[0.3]], {
                    Directive[
                    Opacity[1]], 
                    Directive[
                    Opacity[1]]}, StripOnInput -> False]}, {}}, {
                    Directive[
                    Opacity[1]], 
                    Directive[
                    Opacity[1]]}, StripOnInput -> False], "GraphicsLabel", 
                   StripOnInput -> False]}, "GraphicsTicks", StripOnInput -> 
                 False], {
                 Directive[
                  AbsoluteThickness[0.2], 
                  GrayLevel[0.4]], 
                 Directive[
                  AbsoluteThickness[0.2], 
                  GrayLevel[0.4], 
                  Opacity[0.3]]}, StripOnInput -> False]}, "GraphicsAxes", 
              StripOnInput -> False]}, PlotRangePadding -> Scaled[0.02], 
            PlotRange -> All, Frame -> True, 
            FrameTicks -> {{False, False}, {True, False}}, FrameStyle -> 
            Opacity[0], FrameTicksStyle -> Opacity[0], 
            ImageSize -> {Automatic, 360}, BaseStyle -> {}], Alignment -> 
           Left, AppearanceElements -> None, ImageMargins -> {{5, 5}, {5, 5}},
            ImageSizeAction -> "ResizeToFit"], LineIndent -> 0, StripOnInput -> 
          False], {FontFamily -> "Arial"}, Background -> Automatic, 
         StripOnInput -> False], TraditionalForm]}, "BarLegend", 
      DisplayFunction -> (#& ), 
      InterpretationFunction :> (RowBox[{"BarLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{
                 RowBox[{
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"39", "<", "#1", "<", "41"}], ",", "Black", ",", 
                    "White"}], "]"}], "&"}], ")"}], "[", "#1", "]"}], "&"}], 
               ",", 
               RowBox[{"{", 
                 RowBox[{"0.`", ",", "40.592519`"}], "}"}]}], "}"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
           RowBox[{"LegendMarkerSize", "\[Rule]", "360"}], ",", 
           RowBox[{"ScalingFunctions", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"Identity", ",", "Identity"}], "}"}]}], ",", 
           RowBox[{"Charting`TickSide", "\[Rule]", "Right"}], ",", 
           RowBox[{"ColorFunctionScaling", "\[Rule]", "False"}]}], "]"}]& )], 
     TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.784497253401499*^9, 3.784497266998165*^9}, {
   3.7844973629325914`*^9, 3.78449740243583*^9}, {3.7844974736948986`*^9, 
   3.7844974978754015`*^9}, {3.7844990458558683`*^9, 3.7844990518697476`*^9}, 
   3.784499249308283*^9, {3.784499286818942*^9, 3.784499333705495*^9}, {
   3.784500263867262*^9, 3.7845002883551664`*^9}, 3.7845006586572037`*^9},
 CellLabel->"Out[80]=",ExpressionUUID->"155f9147-3b59-4e2f-a1ed-7fba916d73bc"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{"pd", "[", 
    RowBox[{"[", "1", "]"}], "]"}], ",", 
   RowBox[{"mask", "[", 
    RowBox[{"[", "1", "]"}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.784500541661607*^9, 3.784500561770102*^9}, 
   3.784500615580456*^9, {3.7845006618865814`*^9, 3.7845006712495103`*^9}},
 CellLabel->"In[81]:=",ExpressionUUID->"505c9e57-f1fb-47a2-8460-cac37a78ac60"],

Cell[BoxData[
 GraphicsBox[{GraphicsComplexBox[CompressedData["
1:eJxd3F3IPXtZx+GhRUErwlVLM5TaWfZimZXtAoN0R1BIYJAQdmKRREJI4FEU
FhhoBQZJ4YknQtCJFOKgB0oiDBJ1UMRkMFZjY2otQ3cv9rJ69Zk91/fhvveJ
XM7M77+eNf8Pw+/ez54X/PTP/9jPfNEwDNOXDsPD//Z/fu0j9z97zRPLK6pv
8aee/cF3vvkd/9KO3+PnPBx+9fBUPf8Uv/8NH3vfGz72JU/V68/xTzzxvM/8
4Ou+PH5mvUv8y69/97Pe9vmvaOtf41d9+E9e9Asve078vv3P+6r4ax+Wf9NX
x2/Z//znxZ994/m1r/rw8+Mf3z/P18R/+LD8Fz8RX/fP93XxD7/9ha98+wtf
EP/S/nkf/Qcvf/Kjb/3I18ef2D//N8TPffh4r39h/CP7z/ON8a+849VPv/H8
TfF795/v0Z9+uPzd3xw/f/95vyX+0acffsAXxb+6//zfGr//4cd5+tGf2b+P
b4ufeOXDD/ji+NX79/Pt8Vs//673vPzJl8Qf2L+v74g/93D4o4/+yv37+874
xb/38U8++4OP/qH9+/yu+Kfe9PCFPvoX9+/30b/98PW89qXx7+/f96P/aP84
3x1v+/f/6Gf+ebJ5GL5w0Rc+2e++Qh/Vt1gf9fg91kc9/xTro15/jvVR17vE
+qjrX2N9sD5YH6wP1gfrg/XB+mB9sD5YH6wP1gfrg/XB+mB9sD5YH6yP3J+j
D9YH64P1wfpgfbA+WB+sD9YH64P1wfpgfbA+WB+sj2p9jK2PsfUxtj7G1sfY
+hhbH2PrY2x9jK2PsfUxtj7G1sfY+hhbH2PrY2x9jK2PsfUxtj7G1sfY+hhb
H2PrY2x9jK2PsfUxtj7G1sfY+hhbH2PrY2x9jK2PsfUxtj7G1sfY+hhbH2Pr
Y2x9jK2PsfUxtj7G1sfY+hhbH2PrY2x9jK2PMX18YZEvfFEfSh/Vt1gf9fg9
1kc9/xTro15/jvVR17vE+qjrX2N9sD5YH6wP1gfrg/XB+mB9sD5YH6wP1gfr
g/XB+mB9sD5YH6yP3J+jD9YH64P1wfpgfbA+WB+sD9YH64P1wfpgfbA+WB+s
j2rPj6k9P6b2/Jja82Nqz4+pPT+m9vyY2vNjas+PqT0/pvb8mNrzY2rPj6k9
P6b2/Jja82Nqz4+pPT+m9vyY2vNjas+PqT0/pvb8mNrzY2rPj6k9P6b2/Jja
82Nqz4+pPT+m9vyY2vNjas+PqT0/pvb8mNrzY2rPj6k9P6b2/Jja82Nqz4+p
PT+m9vyY2vNjas+PqT0/pvb8mNrzY2rPj6k9P6b0sefyxB+nj+pbrI96/B7r
o55/ivVRrz/H+qjrXWJ91PWvsT5YH6wP1gfrg/XB+mB9sD5YH6wP1gfrg/XB
+mB9sD5YH6wP1kfuz9EH64P1wfpgfbA+WB+sD9YH64P1wfpgfbA+WB+sD9ZH
9TD8xf5//Gn6qL7F+qjH77E+6vmnWB/1+nOsj7reJdZHXf8a64P1wfpgfbA+
WB+sD9YH64P1wfpgfbA+WB+sD9YH64P1wfpgfeT+HH2wPlgfrA/WB+uD9cH6
YH2wPlgfrA/WB+uD9cH6YH1UD8P+MV755+mj+hbrox6/x/qo559ifdTrz7E+
6nqXWB91/WusD9YH64P1wfpgfbA+WB+sD9YH64P1wfpgfbA+WB+sD9YH64P1
kftz9MH6YH2wPlgfrA/WB+uD9cH6YH2wPlgfrA/WB+uD9VFt/zG3/cfc9h9z
23/Mbf8xt/3H3PYfc9t/zG3/Mbf9x9z2H3Pbf8xt/zG3/cfc9h9z23/Mbf8x
t/3H3PYfc9t/zG3/Mbf9x9z2H3Pbf8xt/zG3/cfc9h9z23/Mbf8xt/3H3PYf
c9t/zG3/Mbf9x9z2H3Pbf8xt/zG3/cfc9h9z23/Mbf8xt/3H3PYfc9t/zG3/
Mbf9x9z2H3Pbf8xt/zG3/cecPh4+1Tvf/Jfpo/oW66Mev8f6qOefYn3U68+x
Pup6l1gfdf1rrA/WB+uD9cH6YH2wPlgfrA/WB+uD9cH6YH2wPlgfrA/WB+uD
9ZH7c/TB+mB9sD5YH6wP1gfrg/XB+mB9sD5YH6wP1gfrg/VRbX++tP350vbn
S9ufL21/vrT9+dL250vbny9tf760/fnS9udL258vbX++tP350vbnS9ufL21/
vrT9+dL250vbny9tf760/fnS9udL258vbX++tP350vbnS9ufL21/vrT9+dL2
50vbny9tf760/fnS9udL258vbX++tP350vbnS9ufL21/vrT9+dL250vbny9t
f760/fnS9udL258vbX++tP354++RvGT/XH+VPqpvsT7q8Xusj3r+KdZHvf4c
66Oud4n1Ude/xvpgfbA+WB+sD9YH64P1wfpgfbA+WB+sD9YH64P1wfpgfbA+
WB+5P0cfrA/WB+uD9cH6YH2wPlgfrA/WB+uD9cH6YH2wPlgf1eZXa5tfrW1+
tbb51drmV2ubX61tfrW2+dXa5ldrm1+tbX61tvnV2uZXa5tfrW1+tbb51drm
V2ubX61tfrW2+dXa5ldrm1+tbX61tvnV2uZXa5tfrW1+tbb51drmV2ubX61t
frW2+dXa5ldrm1+tbX61tvnV2uZXa5tfrW1+tbb51drmV2ubX61tfrW2+dXa
5ldrm1+tbX61tvnV2uZXa5tfreljX+b+8fRRfYv1UY/fY33U80+xPur151gf
db1LrI+6/jXWB+uD9cH6YH2wPlgfrA/WB+uD9cH6YH2wPlgfrA/WB+uD9cH6
yP05+mB9sD5YH6wP1gfrg/XB+mB9sD5YH6wP1gfrg/XB+qg2393afHdr892t
zXe3Nt/d2nx3a/Pdrc13tzbf3dp8d2vz3a3Nd7c2393afHdr892tzXe3Nt/d
2nx3a/Pdrc13tzbf3dp8d2vz3a3Nd7c2393afHdr892tzXe3Nt/d2nx3a/Pd
rc13tzbf3dp8d2vz3a3Nd7c2393afHdr892tzXe3Nt/d2nx3a/Pdrc13tzbf
3dp8d2vz3a3Nd7c2393afHdrv7f+ifRRfYv1UY/fY33U80+xPur151gfdb1L
rI+6/jXWB+uD9cH6YH2wPlgfrA/WB+uD9cH6YH2wPlgfrA/WB+uD9cH6yP05
+mB9sD5YH6wP1gfrg/XB+mB9sD5YH6wP1gfrg/XB+qgehu/b571/lz6qb7E+
6vF7rI96/inWR73+HOujrneJ9VHXv8b6YH2wPlgfrA/WB+uD9cH6YH2wPlgf
rA/WB+uD9cH6YH2wPlgfuT9HH6wP1gfrg/XB+mB9sD5YH6wP1gfrg/XB+mB9
sD5YH9XD8Jv7z/Wp9FF9i/VRj99jfdTzT7E+6vXnWB91vUusj7r+NdYH64P1
wfpgfbA+WB+sD9YH64P1wfpgfbA+WB+sD9YH64P1wfrI/Tn6YH2wPlgfrA/W
B+uD9cH6YH2wPlgfrA/WB+uD9cH6qB6Gbf/3IZ9OH9W3WB/1+D3WRz3/FOuj
Xn+O9VHXu8T6qOtfY32wPlgfrA/WB+uD9cH6YH2wPlgfrA/WB+uD9cH6YH2w
PlgfrI/cn6MP1gfrg/XB+mB9sD5YH6wP1gfrg/XB+mB9sD5YH6yP6mH43v0X
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
1gfrg/XB+mB9sD5YH6wP1gfro3oYPrn/91L/nj6qb7E+6vF7rI96/inWR73+
HOujrneJ9VHXv8b6YH2wPlgfrA/WB+uD9cH6YH2wPlgfrA/WB+uD9cH6YH2w
PlgfuT9HH6wP1gfrg/XB+mB9sD5YH6wP1gfrg/XB+mB9sD5YH9XD8KzXPvzN
+o/0UX2L9VGP32N91PNPsT7q9edYH3W9S6yPuv411gfrg/XB+mB9sD5YH6wP
1gfrg/XB+mB9sD5YH6wP1gfrg/XB+sj9OfpgfbA+WB+sD9YH64P1wfpgfbA+
WB+sD9YH64P1wfqoHoaX7f894WMf1bdYH/X4Pc7728v5pzjvby/Xn+O8v72s
d4nz/vay/jXO+9sP64Pz/vbDeX/74by//XDe3344728/nPe3H8772w/n/e2H
8/72w3l/++G8v/1w3t9+OO9vP5z3tx/O+9sP5/3th/P+9sN5f7v7c/TBeX/7
4by//XDe3344728/nPe3H8772w/n/e2H8/72w3l/++G8v/1w3t9+OO9vP5z3
tx/O+9sP5/3th/VRPQyv2/9i/Wf6qL7F+qjH77E+6vmnWB/1+nOsj7reJdZH
Xf8a64P1wfpgfbA+WB+sD9YH64P1wfpgfbA+WB+sD9YH64P1wfpgfeT+HH2w
PlgfrA/WB+uD9cH6YH2wPlgfrA/WB+uD9cH6YH1UD8Pbjr/n+qi+xfqox++x
Pur5p1gf9fpzrI+63iXWR13/GuuD9cH6YH2wPlgfrA/WB+uD9cH6YH2wPlgf
rA/WB+uD9cH6YH3k/hx9sD5YH6wP1gfrg/XB+mB9sD5YH6wP1gfrg/XB+mB9
VA/D+5954Wj6qL7F+qjH77E+6vmnWB/1+nOsj7reJdZHXf8a64P1wfpgfbA+
WB+sD9YH64P1wfpgfbA+WB+sD9YH64P1wfpgfeT+HH2wPlgfrA/WB+uD9cH6
YH2wPlgfrA/WB+uD9cH6YH1UD8Pf7n+R/it9VN9ifdTj91gf9fxTrI96/TnW
R13vEuujrn+N9cH6YH2wPlgfrA/WB+uD9cH6YH2wPlgfrA/WB+uD9cH6YH2w
PnJ/jj5YH6wP1gfrg/XB+mB9sD5YH6wP1gfrg/XB+mB9sD6qh+HLHv51+rP/
O31U32J91OP3WB/1/FOsj3r9OdZHXe8S66Ouf431wfpgfbA+WB+sD9YH64P1
wfpgfbA+WB+sD9YH64P1wfpgfbA+cn+OPlgfrA/WB+uD9cH6YH2wPlgfrA/W
B+uD9cH6YH2wPqqH4Xv2z/XYR/Ut1kc9fo/1Uc8/xfqo159jfdT1LrE+6vrX
WB+sD9YH64P1wfpgfbA+WB+sD9YH64P1wfpgfbA+WB+sD9YH6yP35+iD9cH6
YH2wPlgfrA/WB+uD9cH6YH2wPlgfrA/WB+ujehh+cv85/yd9VN9ifdTj91gf
9fxTrI96/TnWR13vEuujrn+N9cH6YH2wPlgfrA/WB+uD9cH6YH2wPlgfrA/W
B+uD9cH6YH2wPnJ/jj5YH6wP1gfrg/XB+mB9sD5YH6wP1gfrg/XB+mB9sD6q
h+HX9+/9f9NH9S3WRz1+j/VRzz/F+qjXn2N91PUusT7q+tdYH6wP1gfrg/XB
+mB9sD5YH6wP1gfrg/XB+mB9sD5YH6wP1gfrI/fn6IP1wfpgfbA+WB+sD9YH
64P1wfpgfbA+WB+sD9YH66N6GN778J/bvuexj+pbrI96/B7ro55/ivVRrz/H
+qjrXWJ91PWvsT5YH6wP1gfrg/XB+mB9sD5YH6wP1gfrg/XB+mB9sD5YH6wP
1kfuz9EH64P1wfpgfbA+WB+sD9YH64P1wfpgfbA+WB+sD9ZH9TD89cO/LnzN
/6WP6lusj3r8Huujnn+K9VGvP8f6qOtdYn3U9a+xPlgfrA/WB+uD9cH6YH2w
PlgfrA/WB+uD9cH6YH2wPlgfrA/WR+7P0Qfrg/XB+mB9sD5YH6wP1gfrg/XB
+mB9sD5YH6wP1kd1/nlKH9V5T+9T+qjHMyd+Sh/1/FOsj3r9OdZHXe8S66Ou
f431wfpgfbA+WB+sD9YH64P1wfpgfbA+WB+sD9YH64P1wfpgfbA+WB+sD9YH
64P1wfpgfbA+WB+sD9YH64P1wfpgfbA++Jn/eTL+f3BoFQU=
    "], {
     {GrayLevel[0.8], EdgeForm[None], 
      GraphicsGroupBox[PolygonBox[CompressedData["
1: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
        "]]]}, {}, {}, {}, {}},
    VertexColors->CompressedData["
1:eJztzrENAlEQQ8ElpAwqoQdKQCKmySvoSiAhhSU4yejvvGRC+3J/3h6nqtrO
9W6/HmPXUTv8za70v2l2pf9NtSv9b7pd6X+sr6V/kSRJkiRJkiRJkiRJkiRJ
kiRJkiRJklzfT6V/rW5X+t/qdqX/TbEr/W+aXel/0+xK//t/Xw1WW6c=
     "]], GraphicsComplexBox[CompressedData["
1:eJxd3F3IPXtZx+GhRUErwlVLM5TaWfZimZXtAoN0R1BIYJAQdmKRREJI4FEU
FhhoBQZJ4YknQtCJFOKgB0oiDBJ1UMRkMFZjY2otQ3cv9rJ69Zk91/fhvveJ
XM7M77+eNf8Pw+/ez54X/PTP/9jPfNEwDNOXDsPD//Z/fu0j9z97zRPLK6pv
8aee/cF3vvkd/9KO3+PnPBx+9fBUPf8Uv/8NH3vfGz72JU/V68/xTzzxvM/8
4Ou+PH5mvUv8y69/97Pe9vmvaOtf41d9+E9e9Asve078vv3P+6r4ax+Wf9NX
x2/Z//znxZ994/m1r/rw8+Mf3z/P18R/+LD8Fz8RX/fP93XxD7/9ha98+wtf
EP/S/nkf/Qcvf/Kjb/3I18ef2D//N8TPffh4r39h/CP7z/ON8a+849VPv/H8
TfF795/v0Z9+uPzd3xw/f/95vyX+0acffsAXxb+6//zfGr//4cd5+tGf2b+P
b4ufeOXDD/ji+NX79/Pt8Vs//673vPzJl8Qf2L+v74g/93D4o4/+yv37+874
xb/38U8++4OP/qH9+/yu+Kfe9PCFPvoX9+/30b/98PW89qXx7+/f96P/aP84
3x1v+/f/6Gf+ebJ5GL5w0Rc+2e++Qh/Vt1gf9fg91kc9/xTro15/jvVR17vE
+qjrX2N9sD5YH6wP1gfrg/XB+mB9sD5YH6wP1gfrg/XB+mB9sD5YH6yP3J+j
D9YH64P1wfpgfbA+WB+sD9YH64P1wfpgfbA+WB+sj2p9jK2PsfUxtj7G1sfY
+hhbH2PrY2x9jK2PsfUxtj7G1sfY+hhbH2PrY2x9jK2PsfUxtj7G1sfY+hhb
H2PrY2x9jK2PsfUxtj7G1sfY+hhbH2PrY2x9jK2PsfUxtj7G1sfY+hhbH2Pr
Y2x9jK2PsfUxtj7G1sfY+hhbH2PrY2x9jK2PMX18YZEvfFEfSh/Vt1gf9fg9
1kc9/xTro15/jvVR17vE+qjrX2N9sD5YH6wP1gfrg/XB+mB9sD5YH6wP1gfr
g/XB+mB9sD5YH6yP3J+jD9YH64P1wfpgfbA+WB+sD9YH64P1wfpgfbA+WB+s
j2rPj6k9P6b2/Jja82Nqz4+pPT+m9vyY2vNjas+PqT0/pvb8mNrzY2rPj6k9
P6b2/Jja82Nqz4+pPT+m9vyY2vNjas+PqT0/pvb8mNrzY2rPj6k9P6b2/Jja
82Nqz4+pPT+m9vyY2vNjas+PqT0/pvb8mNrzY2rPj6k9P6b2/Jja82Nqz4+p
PT+m9vyY2vNjas+PqT0/pvb8mNrzY2rPj6k9P6b0sefyxB+nj+pbrI96/B7r
o55/ivVRrz/H+qjrXWJ91PWvsT5YH6wP1gfrg/XB+mB9sD5YH6wP1gfrg/XB
+mB9sD5YH6wP1kfuz9EH64P1wfpgfbA+WB+sD9YH64P1wfpgfbA+WB+sD9ZH
9TD8xf5//Gn6qL7F+qjH77E+6vmnWB/1+nOsj7reJdZHXf8a64P1wfpgfbA+
WB+sD9YH64P1wfpgfbA+WB+sD9YH64P1wfpgfeT+HH2wPlgfrA/WB+uD9cH6
YH2wPlgfrA/WB+uD9cH6YH1UD8P+MV755+mj+hbrox6/x/qo559ifdTrz7E+
6nqXWB91/WusD9YH64P1wfpgfbA+WB+sD9YH64P1wfpgfbA+WB+sD9YH64P1
kftz9MH6YH2wPlgfrA/WB+uD9cH6YH2wPlgfrA/WB+uD9VFt/zG3/cfc9h9z
23/Mbf8xt/3H3PYfc9t/zG3/Mbf9x9z2H3Pbf8xt/zG3/cfc9h9z23/Mbf8x
t/3H3PYfc9t/zG3/Mbf9x9z2H3Pbf8xt/zG3/cfc9h9z23/Mbf8xt/3H3PYf
c9t/zG3/Mbf9x9z2H3Pbf8xt/zG3/cfc9h9z23/Mbf8xt/3H3PYfc9t/zG3/
Mbf9x9z2H3Pbf8xt/zG3/cecPh4+1Tvf/Jfpo/oW66Mev8f6qOefYn3U68+x
Pup6l1gfdf1rrA/WB+uD9cH6YH2wPlgfrA/WB+uD9cH6YH2wPlgfrA/WB+uD
9ZH7c/TB+mB9sD5YH6wP1gfrg/XB+mB9sD5YH6wP1gfrg/VRbX++tP350vbn
S9ufL21/vrT9+dL250vbny9tf760/fnS9udL258vbX++tP350vbnS9ufL21/
vrT9+dL250vbny9tf760/fnS9udL258vbX++tP350vbnS9ufL21/vrT9+dL2
50vbny9tf760/fnS9udL258vbX++tP350vbnS9ufL21/vrT9+dL250vbny9t
f760/fnS9udL258vbX++tP354++RvGT/XH+VPqpvsT7q8Xusj3r+KdZHvf4c
66Oud4n1Ude/xvpgfbA+WB+sD9YH64P1wfpgfbA+WB+sD9YH64P1wfpgfbA+
WB+5P0cfrA/WB+uD9cH6YH2wPlgfrA/WB+uD9cH6YH2wPlgf1eZXa5tfrW1+
tbb51drmV2ubX61tfrW2+dXa5ldrm1+tbX61tvnV2uZXa5tfrW1+tbb51drm
V2ubX61tfrW2+dXa5ldrm1+tbX61tvnV2uZXa5tfrW1+tbb51drmV2ubX61t
frW2+dXa5ldrm1+tbX61tvnV2uZXa5tfrW1+tbb51drmV2ubX61tfrW2+dXa
5ldrm1+tbX61tvnV2uZXa5tfreljX+b+8fRRfYv1UY/fY33U80+xPur151gf
db1LrI+6/jXWB+uD9cH6YH2wPlgfrA/WB+uD9cH6YH2wPlgfrA/WB+uD9cH6
yP05+mB9sD5YH6wP1gfrg/XB+mB9sD5YH6wP1gfrg/XB+qg2393afHdr892t
zXe3Nt/d2nx3a/Pdrc13tzbf3dp8d2vz3a3Nd7c2393afHdr892tzXe3Nt/d
2nx3a/Pdrc13tzbf3dp8d2vz3a3Nd7c2393afHdr892tzXe3Nt/d2nx3a/Pd
rc13tzbf3dp8d2vz3a3Nd7c2393afHdr892tzXe3Nt/d2nx3a/Pdrc13tzbf
3dp8d2vz3a3Nd7c2393afHdrv7f+ifRRfYv1UY/fY33U80+xPur151gfdb1L
rI+6/jXWB+uD9cH6YH2wPlgfrA/WB+uD9cH6YH2wPlgfrA/WB+uD9cH6yP05
+mB9sD5YH6wP1gfrg/XB+mB9sD5YH6wP1gfrg/XB+qgehu/b571/lz6qb7E+
6vF7rI96/inWR73+HOujrneJ9VHXv8b6YH2wPlgfrA/WB+uD9cH6YH2wPlgf
rA/WB+uD9cH6YH2wPlgfuT9HH6wP1gfrg/XB+mB9sD5YH6wP1gfrg/XB+mB9
sD5YH9XD8Jv7z/Wp9FF9i/VRj99jfdTzT7E+6vXnWB91vUusj7r+NdYH64P1
wfpgfbA+WB+sD9YH64P1wfpgfbA+WB+sD9YH64P1wfrI/Tn6YH2wPlgfrA/W
B+uD9cH6YH2wPlgfrA/WB+uD9cH6qB6Gbf/3IZ9OH9W3WB/1+D3WRz3/FOuj
Xn+O9VHXu8T6qOtfY32wPlgfrA/WB+uD9cH6YH2wPlgfrA/WB+uD9cH6YH2w
PlgfrI/cn6MP1gfrg/XB+mB9sD5YH6wP1gfrg/XB+mB9sD5YH6yP6mH43v0X
3v8+fVTfYn3U4/dYH/X8U6yPev051kdd7xLro65/jfXB+mB9sD5YH6wP1gfr
g/XB+mB9sD5YH6wP1gfrg/XB+mB9sD5yf44+WB+sD9YH64P1wfpgfbA+WB+s
D9YH64P1wfpgfbA+qofhN44O9FF9i/VRj99jfdTzT7E+6vXnWB91vUusj7r+
NdYH64P1wfpgfbA+WB+sD9YH64P1wfpgfbA+WB+sD9YH64P1wfrI/Tn6YH2w
PlgfrA/WB+uD9cH6YH2wPlgfrA/WB+uD9cH6qB6Gv9n/In0mfVTfYn3U4/dY
H/X8U6yPev051kdd7xLro65/jfXB+mB9sD5YH6wP1gfrg/XB+mB9sD5YH6wP
1gfrg/XB+mB9sD5yf44+WB+sD9YH64P1wfpgfbA+WB+sD9YH64P1wfpgfbA+
qofhpfvn+sf0UX2L9VGP32N91PNPsT7q9edYH3W9S6yPuv411gfrg/XB+mB9
sD5YH6wP1gfrg/XB+mB9sD5YH6wP1gfrg/XB+sj9OfpgfbA+WB+sD9YH64P1
wfpgfbA+WB+sD9YH64P1wfqoHoa37N/7Z9NH9S3WRz1+j/VRzz/F+qjXn2N9
1PUusT7q+tdYH6wP1gfrg/XB+mB9sD5YH6wP1gfrg/XB+mB9sD5YH6wP1gfr
I/fn6IP1wfpgfbA+WB+sD9YH64P1wfpgfbA+WB+sD9YH66N6GJb9900+lz6q
b7E+6vF7rI96/inWR73+HOujrneJ9VHXv8b6YH2wPlgfrA/WB+uD9cH6YH2w
PlgfrA/WB+uD9cH6YH2wPlgfuT9HH6wP1gfrg/XB+mB9sD5YH6wP1gfrg/XB
+mB9sD5YH9XD8Nz9cz6dPqpvsT7q8Xusj3r+KdZHvf4c66Oud4n1Ude/xvpg
fbA+WB+sD9YH64P1wfpgfbA+WB+sD9YH64P1wfpgfbA+WB+5P0cfrA/WB+uD
9cH6YH2wPlgfrA/WB+uD9cH6YH2wPlgf1cPwA/vvYz32UX2L9VGP32N91PNP
sT7q9edYH3W9S6yPuv411gfrg/XB+mB9sD5YH6wP1gfrg/XB+mB9sD5YH6wP
1gfrg/XB+sj9OfpgfbA+WB+sD9YH64P1wfpgfbA+WB+sD9YH64P1wfqoHoaf
e/hj3vVP6aP6FuujHr/H+qjnn2J91OvPsT7qepdYH3X9a6wP1gfrg/XB+mB9
sD5YH6wP1gfrg/XB+mB9sD5YH6wP1gfrg/WR+3P0wfpgfbA+WB+sD9YH64P1
wfpgfbA+WB+sD9YH64P1UT0Mv7P/vuI/p4/qW6yPevwe66Oef4r1Ua8/x/qo
611ifdT1r7E+WB+sD9YH64P1wfpgfbA+WB+sD9YH64P1wfpgfbA+WB+sD9ZH
7s/RB+uD9cH6YH2wPlgfrA/WB+uD9cH6YH2wPlgfrA/WR/UwfGj/Xh77qL7F
+qjH77E+6vmnWB/1+nOsj7reJdZHXf8a64P1wfpgfbA+WB+sD9YH64P1wfpg
fbA+WB+sD9YH64P1wfpgfeT+HH2wPlgfrA/WB+uD9cH6YH2wPlgfrA/WB+uD
9cH6YH1UD8M/HH/v9VF9i/VRj99jfdTzT7E+6vXnWB91vUusj7r+NdYH64P1
wfpgfbA+WB+sD9YH64P1wfpgfbA+WB+sD9YH64P1wfrI/Tn6YH2wPlgfrA/W
B+uD9cH6YH2wPlgfrA/WB+uD9cH6qB6G69sefrB/TR/Vt1gf9fg91kc9/xTr
o15/jvVR17vE+qjrX2N9sD5YH6wP1gfrg/XB+mB9sD5YH6wP1gfrg/XB+mB9
sD5YH6yP3J+jD9YH64P1wfpgfbA+WB+sD9YH64P1wfpgfbA+WB+sj+ph+P79
990f+6i+xfqox++xPur5p1gf9fpzrI+63iXWR13/GuuD9cH6YH2wPlgfrA/W
B+uD9cH6YH2wPlgfrA/WB+uD9cH6YH3k/hx9sD5YH6wP1gfrg/XB+mB9sD5Y
H6wP1gfrg/XB+mB9VA/Dz+5/7ufTR/Ut1kc9fo/1Uc8/xfqo159jfdT1LrE+
6vrXWB+sD9YH64P1wfpgfbA+WB+sD9YH64P1wfpgfbA+WB+sD9YH6yP35+iD
9cH6YH2wPlgfrA/WB+uD9cH6YH2wPlgfrA/WB+ujehh+a/+5/i19VN9ifdTj
91gf9fxTrI96/TnWR13vEuujrn+N9cH6YH2wPlgfrA/WB+uD9cH6YH2wPlgf
rA/WB+uD9cH6YH2wPnJ/jj5YH6wP1gfrg/XB+mB9sD5YH6wP1gfrg/XB+mB9
sD6qh+ED+/f82Ef1LdZHPX6P9VHPP8X6qNefY33U9S6xPur611gfrA/WB+uD
9cH6YH2wPlgfrA/WB+uD9cH6YH2wPlgfrA/WB+sj9+fog/XB+mB9sD5YH6wP
1gfrg/XB+mB9sD5YH6wP1gfro3oYPrn/91L/nj6qb7E+6vF7rI96/inWR73+
HOujrneJ9VHXv8b6YH2wPlgfrA/WB+uD9cH6YH2wPlgfrA/WB+uD9cH6YH2w
PlgfuT9HH6wP1gfrg/XB+mB9sD5YH6wP1gfrg/XB+mB9sD5YH9XD8KzXPvzN
+o/0UX2L9VGP32N91PNPsT7q9edYH3W9S6yPuv411gfrg/XB+mB9sD5YH6wP
1gfrg/XB+mB9sD5YH6wP1gfrg/XB+sj9OfpgfbA+WB+sD9YH64P1wfpgfbA+
WB+sD9YH64P1wfqoHoaX7f894WMf1bdYH/X4Pc7728v5pzjvby/Xn+O8v72s
d4nz/vay/jXO+9sP64Pz/vbDeX/74by//XDe3344728/nPe3H8772w/n/e2H
8/72w3l/++G8v/1w3t9+OO9vP5z3tx/O+9sP5/3th/P+9sN5f7v7c/TBeX/7
4by//XDe3344728/nPe3H8772w/n/e2H8/72w3l/++G8v/1w3t9+OO9vP5z3
tx/O+9sP5/3th/VRPQyv2/9i/Wf6qL7F+qjH77E+6vmnWB/1+nOsj7reJdZH
Xf8a64P1wfpgfbA+WB+sD9YH64P1wfpgfbA+WB+sD9YH64P1wfpgfeT+HH2w
PlgfrA/WB+uD9cH6YH2wPlgfrA/WB+uD9cH6YH1UD8Pbjr/n+qi+xfqox++x
Pur5p1gf9fpzrI+63iXWR13/GuuD9cH6YH2wPlgfrA/WB+uD9cH6YH2wPlgf
rA/WB+uD9cH6YH3k/hx9sD5YH6wP1gfrg/XB+mB9sD5YH6wP1gfrg/XB+mB9
VA/D+5954Wj6qL7F+qjH77E+6vmnWB/1+nOsj7reJdZHXf8a64P1wfpgfbA+
WB+sD9YH64P1wfpgfbA+WB+sD9YH64P1wfpgfeT+HH2wPlgfrA/WB+uD9cH6
YH2wPlgfrA/WB+uD9cH6YH1UD8Pf7n+R/it9VN9ifdTj91gf9fxTrI96/TnW
R13vEuujrn+N9cH6YH2wPlgfrA/WB+uD9cH6YH2wPlgfrA/WB+uD9cH6YH2w
PnJ/jj5YH6wP1gfrg/XB+mB9sD5YH6wP1gfrg/XB+mB9sD6qh+HLHv51+rP/
O31U32J91OP3WB/1/FOsj3r9OdZHXe8S66Ouf431wfpgfbA+WB+sD9YH64P1
wfpgfbA+WB+sD9YH64P1wfpgfbA+cn+OPlgfrA/WB+uD9cH6YH2wPlgfrA/W
B+uD9cH6YH2wPqqH4Xv2z/XYR/Ut1kc9fo/1Uc8/xfqo159jfdT1LrE+6vrX
WB+sD9YH64P1wfpgfbA+WB+sD9YH64P1wfpgfbA+WB+sD9YH6yP35+iD9cH6
YH2wPlgfrA/WB+uD9cH6YH2wPlgfrA/WB+ujehh+cv85/yd9VN9ifdTj91gf
9fxTrI96/TnWR13vEuujrn+N9cH6YH2wPlgfrA/WB+uD9cH6YH2wPlgfrA/W
B+uD9cH6YH2wPnJ/jj5YH6wP1gfrg/XB+mB9sD5YH6wP1gfrg/XB+mB9sD6q
h+HX9+/9f9NH9S3WRz1+j/VRzz/F+qjXn2N91PUusT7q+tdYH6wP1gfrg/XB
+mB9sD5YH6wP1gfrg/XB+mB9sD5YH6wP1gfrI/fn6IP1wfpgfbA+WB+sD9YH
64P1wfpgfbA+WB+sD9YH66N6GN778J/bvuexj+pbrI96/B7ro55/ivVRrz/H
+qjrXWJ91PWvsT5YH6wP1gfrg/XB+mB9sD5YH6wP1gfrg/XB+mB9sD5YH6wP
1kfuz9EH64P1wfpgfbA+WB+sD9YH64P1wfpgfbA+WB+sD9ZH9TD89cO/LnzN
/6WP6lusj3r8Huujnn+K9VGvP8f6qOtdYn3U9a+xPlgfrA/WB+uD9cH6YH2w
PlgfrA/WB+uD9cH6YH2wPlgfrA/WR+7P0Qfrg/XB+mB9sD5YH6wP1gfrg/XB
+mB9sD5YH6wP1kd1/nlKH9V5T+9T+qjHMyd+Sh/1/FOsj3r9OdZHXe8S66Ou
f431wfpgfbA+WB+sD9YH64P1wfpgfbA+WB+sD9YH64P1wfpgfbA+WB+sD9YH
64P1wfpgfbA+WB+sD9YH64P1wfpgfbA++Jn/eTL+f3BoFQU=
    "], {
     {GrayLevel[0.8], EdgeForm[None], 
      GraphicsGroupBox[PolygonBox[CompressedData["
1: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
        "]]]}, {}, {}, {}, {}},
    VertexColors->{
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      GrayLevel[0, 0], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 0, 1]}]},
  AspectRatio->1,
  AxesOrigin->{Automatic, Automatic},
  DisplayFunction->Identity,
  Frame->True,
  FrameLabel->{None, None},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultColorFunction" -> 
    "M10DefaultDensityGradient", 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "GridLinesInFront" -> 
    True},
  PlotRange->{{0., 20.}, {0., 2.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.02]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.7845005630028367`*^9, 3.784500616377292*^9, 
  3.784500671603588*^9},
 CellLabel->"Out[81]=",ImageCache->GraphicsData["CompressedBitmap", "\<\
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
\
\>"],ExpressionUUID->"35688276-02fc-4d8e-8bc5-4ba290efc042"]
}, Open  ]],

Cell[BoxData["ListDensityPlot"], "Input",
 CellChangeTimes->{{3.784492362840629*^9, 3.7844923634429855`*^9}, {
  3.784497276141241*^9, 
  3.7844972781439*^9}},ExpressionUUID->"01d8649c-951f-4af2-81e2-0c5471ad5256"]
},
WindowSize->{1536, 781},
WindowMargins->{{-8, Automatic}, {Automatic, -8}},
FrontEndVersion->"12.0 for Microsoft Windows (64-bit) (April 8, 2019)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 775, 19, 28, "Input",ExpressionUUID->"a9529fa2-104b-4ac1-a797-8bfea1a68d22"],
Cell[1358, 43, 618, 14, 32, "Output",ExpressionUUID->"58d5d69d-e1ab-46a0-b597-71cf73c45548"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2013, 62, 639, 15, 28, "Input",ExpressionUUID->"15bb680d-3e74-4466-b69e-af01d8fd4ea4"],
Cell[2655, 79, 639, 18, 48, "Output",ExpressionUUID->"ea4a7522-c5f6-4cd3-ad0b-6a9e8516a3b4"]
}, Open  ]],
Cell[CellGroupData[{
Cell[3331, 102, 873, 23, 28, "Input",ExpressionUUID->"fa8f8c80-d652-44ef-94a2-c47705e2fc44"],
Cell[4207, 127, 639, 14, 32, "Output",ExpressionUUID->"de5abb98-0480-419c-8570-d69a105a0cb3"]
}, Open  ]],
Cell[CellGroupData[{
Cell[4883, 146, 254, 5, 28, "Input",ExpressionUUID->"ed30970a-ffa1-4c8f-a14a-7c0c7b894a55"],
Cell[5140, 153, 588, 17, 48, "Output",ExpressionUUID->"ff77135f-5802-4b68-abda-e59ee5ff0755"]
}, Open  ]],
Cell[CellGroupData[{
Cell[5765, 175, 586, 16, 28, "Input",ExpressionUUID->"52a27ac6-ee41-4e8e-8ff6-e9cd2e86f642"],
Cell[6354, 193, 638, 18, 48, "Output",ExpressionUUID->"b0012484-db55-46c9-a635-0aa0cf8707e5"]
}, Open  ]],
Cell[CellGroupData[{
Cell[7029, 216, 271, 5, 28, "Input",ExpressionUUID->"37aa8be9-b9ae-4cff-a14d-6f922829d3a2"],
Cell[7303, 223, 313, 9, 32, "Output",ExpressionUUID->"b55baa77-9374-4c05-8fa6-9dd5b47d76b4"]
}, Open  ]],
Cell[CellGroupData[{
Cell[7653, 237, 998, 29, 28, "Input",ExpressionUUID->"99a7a4a6-00d9-4540-80d9-878f04b3f017"],
Cell[8654, 268, 609, 17, 48, "Output",ExpressionUUID->"efbf535b-79e9-4e95-bc0a-c205a72baf21"]
}, Open  ]],
Cell[9278, 288, 154, 3, 28, "Input",ExpressionUUID->"4bdd8a7c-cb9c-4383-aafc-976a17be7cc0"],
Cell[CellGroupData[{
Cell[9457, 295, 398, 9, 28, "Input",ExpressionUUID->"4286dbfc-7fa1-4707-ad02-b095f30c0de4"],
Cell[9858, 306, 415, 13, 32, "Output",ExpressionUUID->"6d77498a-1dc8-456a-920c-4d1f3cf41da9"]
}, Open  ]],
Cell[CellGroupData[{
Cell[10310, 324, 924, 28, 39, "Input",ExpressionUUID->"59987994-9dd4-4eea-9a3b-a94a750ea637"],
Cell[11237, 354, 471, 10, 339, "Output",ExpressionUUID->"7b244b7d-ddd5-4317-8cd4-709db000f54a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[11745, 369, 383, 9, 28, "Input",ExpressionUUID->"339334ba-55b2-4b64-aa5e-5417d6198b32"],
Cell[12131, 380, 329, 8, 54, "Output",ExpressionUUID->"ef3b201f-232a-4d63-8d04-fbf917271f8c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[12497, 393, 298, 5, 28, "Input",ExpressionUUID->"136ec04d-dc11-40a3-bbd9-2b2d5aa576db"],
Cell[12798, 400, 32938, 545, 274, 17703, 294, "CachedBoxData", "BoxData", "Output",ExpressionUUID->"cee34ea3-f17d-4934-b8bd-32cf22d680f0"]
}, Open  ]],
Cell[45751, 948, 311, 7, 28, "Input",ExpressionUUID->"d7fa3f00-aa2f-4c28-a680-fdb2aaf50540"],
Cell[CellGroupData[{
Cell[46087, 959, 297, 6, 28, "Input",ExpressionUUID->"201d0471-c741-4632-aa77-bfa9a6cc589b"],
Cell[46387, 967, 30803, 531, 274, 22399, 393, "CachedBoxData", "BoxData", "Output",ExpressionUUID->"58d2f3b1-b5be-46e0-a5d6-655f4db8eaed"]
}, Open  ]],
Cell[CellGroupData[{
Cell[77227, 1503, 210, 3, 28, "Input",ExpressionUUID->"e712b727-1258-4054-815a-04f8c5dc688d"],
Cell[77440, 1508, 16797, 279, 274, "Output",ExpressionUUID->"aafc6116-eddf-41ae-9d7e-bf6b0a0801a0"]
}, Open  ]],
Cell[CellGroupData[{
Cell[94274, 1792, 378, 10, 28, "Input",ExpressionUUID->"11c8eea6-df1a-4435-bc69-ea2dfad89aad"],
Cell[94655, 1804, 244, 4, 32, "Output",ExpressionUUID->"9adce64d-4e8a-472f-b252-049ea96ac78d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[94936, 1813, 525, 15, 28, "Input",ExpressionUUID->"39b59e1b-a66b-479c-a037-02be2bed18cf"],
Cell[95464, 1830, 199, 3, 32, "Output",ExpressionUUID->"304b8e9b-5226-405c-b87b-ee285557745b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[95700, 1838, 384, 8, 28, "Input",ExpressionUUID->"194a153e-626a-4c63-a69e-44ebc52419ff"],
Cell[96087, 1848, 293, 5, 32, "Output",ExpressionUUID->"3aa2a2a4-877b-4586-a87e-314d8d8fc5a1"]
}, Open  ]],
Cell[96395, 1856, 2030, 58, 51, "Input",ExpressionUUID->"b3bdcf02-80bd-4b5f-bf05-41114d3fa43b"],
Cell[CellGroupData[{
Cell[98450, 1918, 206, 5, 28, "Input",ExpressionUUID->"b896db03-5b14-4226-b0d1-879e0fe130bb"],
Cell[98659, 1925, 958, 36, 54, "Output",ExpressionUUID->"7e55ecf2-f154-47ef-9852-830f2362e7f7"]
}, Open  ]],
Cell[CellGroupData[{
Cell[99654, 1966, 400, 11, 28, "Input",ExpressionUUID->"ebc46e3b-57b7-45c3-a4a7-c044b7669056"],
Cell[100057, 1979, 395, 11, 32, "Output",ExpressionUUID->"d6ae7baa-a5b8-4380-a31f-b8493b70ae08"]
}, Open  ]],
Cell[CellGroupData[{
Cell[100489, 1995, 823, 20, 28, "Input",ExpressionUUID->"8a129996-e148-48cc-95e3-39b7b771ed95"],
Cell[101315, 2017, 2709, 104, 54, "Output",ExpressionUUID->"9e39d9a1-4fc0-4cee-a008-e6bbe3bb6f1c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[104061, 2126, 281, 8, 28, "Input",ExpressionUUID->"0968a5ab-e0ad-4b6b-a265-316b320bd3c8"],
Cell[104345, 2136, 2580, 102, 54, "Output",ExpressionUUID->"43292526-df98-46fb-9e23-265391f5fd5e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[106962, 2243, 426, 12, 52, "Input",ExpressionUUID->"053fe5f4-d9a4-4c2f-a289-7707fd90712f"],
Cell[107391, 2257, 383, 12, 55, "Output",ExpressionUUID->"e77a42bb-3463-46c9-954c-033514ddf05d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[107811, 2274, 248, 7, 28, "Input",ExpressionUUID->"ea169560-df39-4487-8853-ecc4f70078d2"],
Cell[108062, 2283, 276, 9, 54, "Output",ExpressionUUID->"e5bfbb2e-cfe6-4e95-bdd2-69e319d19166"]
}, Open  ]],
Cell[CellGroupData[{
Cell[108375, 2297, 461, 12, 32, "Input",ExpressionUUID->"ec1eddcc-658e-41b7-8ecc-2a657addb077"],
Cell[108839, 2311, 359, 10, 54, "Output",ExpressionUUID->"56fc58bc-dc84-4826-a42c-5bfb61004d73"]
}, Open  ]],
Cell[CellGroupData[{
Cell[109235, 2326, 2046, 49, 52, "Input",ExpressionUUID->"66a40839-aedd-4db9-bf2c-11943036ef81"],
Cell[111284, 2377, 70210, 1439, 405, "Output",ExpressionUUID->"2480d3c1-790a-48a8-89ac-6ea1f4f3063e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[181531, 3821, 398, 11, 28, "Input",ExpressionUUID->"4d8101e8-822b-4efe-a204-edcf30364e79"],
Cell[181932, 3834, 352, 10, 32, "Output",ExpressionUUID->"2d3c833c-d305-42fa-963e-252ffa6e4758"]
}, Open  ]],
Cell[CellGroupData[{
Cell[182321, 3849, 463, 14, 58, "Input",ExpressionUUID->"7a1c1213-9e4f-4171-80bd-50310372c2ef"],
Cell[182787, 3865, 376, 11, 55, "Output",ExpressionUUID->"647fb2bd-b256-4be6-83f0-1c147d6ecdaf"]
}, Open  ]],
Cell[CellGroupData[{
Cell[183200, 3881, 489, 15, 58, "Input",ExpressionUUID->"7e6168c0-f503-4985-94e0-b9fc640e851f"],
Cell[183692, 3898, 399, 12, 55, "Output",ExpressionUUID->"504e06bc-9637-4d22-8265-207d6e921af6"]
}, Open  ]],
Cell[CellGroupData[{
Cell[184128, 3915, 368, 9, 43, "Input",ExpressionUUID->"4dda0aa3-8ac8-42a6-98ba-84cb05c34a7b"],
Cell[184499, 3926, 311, 8, 49, "Output",ExpressionUUID->"1f6e8819-d5d6-42af-944c-60c4c5079071"]
}, Open  ]],
Cell[CellGroupData[{
Cell[184847, 3939, 397, 10, 28, "Input",ExpressionUUID->"d5e7bd14-7ac2-4d00-a961-70fb38f0550d"],
Cell[185247, 3951, 976, 30, 100, "Output",ExpressionUUID->"bfd576bf-d5a0-42e1-8f3e-f4ae4161d8b0"]
}, Open  ]],
Cell[186238, 3984, 335, 8, 28, "Input",ExpressionUUID->"9ab928d2-c391-407c-82ec-d9e2ba8f945e"],
Cell[186576, 3994, 332, 8, 28, "Input",ExpressionUUID->"ada7917c-e3d0-4619-af91-f772514370d7"],
Cell[186911, 4004, 343, 8, 28, "Input",ExpressionUUID->"9746045a-28bf-4ed8-bcbb-056494a52bf4"],
Cell[CellGroupData[{
Cell[187279, 4016, 831, 17, 28, "Input",ExpressionUUID->"953b35f7-ec61-4e23-a796-538028eb6167"],
Cell[188113, 4035, 96364, 1656, 389, "Output",ExpressionUUID->"38334ac5-574e-46ce-8ac8-cb6e364f930e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[284514, 5696, 154, 3, 28, "Input",ExpressionUUID->"66d7f81d-b428-4d92-b653-1124a6cd30a8"],
Cell[284671, 5701, 12446, 314, 170, "Output",ExpressionUUID->"97557856-29f9-4eab-a4f8-0050569578ff"]
}, Open  ]],
Cell[297132, 6018, 340, 8, 28, "Input",ExpressionUUID->"0b521edf-5323-4cdf-a4bc-0425678ed6a7"],
Cell[297475, 6028, 339, 8, 28, "Input",ExpressionUUID->"07025ad3-d9ca-4cef-844d-6a193040a8ad"],
Cell[297817, 6038, 339, 8, 28, "Input",ExpressionUUID->"01e70c26-cee4-4487-b59e-e466cb7b77f1"],
Cell[298159, 6048, 351, 8, 28, "Input",ExpressionUUID->"db263683-c5f5-49c4-8a00-e1c8bfdf9660"],
Cell[298513, 6058, 346, 8, 28, "Input",ExpressionUUID->"eae52d3a-2119-4447-b694-1e6ac2f1fc4b"],
Cell[CellGroupData[{
Cell[298884, 6070, 776, 21, 28, "Input",ExpressionUUID->"55679bb3-20a8-4258-8263-45ee6ac67165"],
Cell[299663, 6093, 47718, 831, 389, "Output",ExpressionUUID->"48739109-6b90-41c4-b0f9-2e305596900f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[347418, 6929, 1341, 34, 48, "Input",ExpressionUUID->"a43b93ec-99d8-403c-a4b3-de81c83bc6f1"],
Cell[348762, 6965, 68108, 1312, 389, "Output",ExpressionUUID->"16df60a1-6ce6-4d1d-8df8-ce073de4fa91"]
}, Open  ]],
Cell[CellGroupData[{
Cell[416907, 8282, 207, 3, 28, "Input",ExpressionUUID->"ec982a80-73ad-4007-85f3-3150686ae9bd"],
Cell[417117, 8287, 163, 2, 32, "Output",ExpressionUUID->"8389f67c-1544-4ff2-aed4-b148b6ab742a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[417317, 8294, 157, 3, 28, "Input",ExpressionUUID->"a186ea0a-0426-4d7a-bb5d-965b4245f776"],
Cell[417477, 8299, 163, 2, 32, "Output",ExpressionUUID->"3d6e4f6d-a5a7-4e24-bc80-f85918ffc38d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[417677, 8306, 1382, 35, 48, "Input",ExpressionUUID->"a7e13046-9916-4831-8a2c-57882a183bf3"],
Cell[419062, 8343, 87635, 1674, 389, "Output",ExpressionUUID->"947cdc28-c1d9-4da1-bfa6-21326fc895a1"]
}, Open  ]],
Cell[CellGroupData[{
Cell[506734, 10022, 754, 18, 28, "Input",ExpressionUUID->"4fb9d3a2-44f8-4c49-a794-659a06687de8"],
Cell[507491, 10042, 91630, 1570, 393, "Output",ExpressionUUID->"93bd473e-786f-4b5e-95e1-833123089c14"]
}, Open  ]],
Cell[CellGroupData[{
Cell[599158, 11617, 814, 20, 28, "Input",ExpressionUUID->"a032ee97-8f2a-4885-b4d4-5053e2dc06e0"],
Cell[599975, 11639, 107192, 1817, 393, "Output",ExpressionUUID->"cf0b7517-770f-4dce-a9f7-23f72f4819ec"]
}, Open  ]],
Cell[CellGroupData[{
Cell[707204, 13461, 1510, 38, 48, "Input",ExpressionUUID->"6fde3f4d-e44d-42d9-98ec-643432f81e52"],
Cell[708717, 13501, 73532, 1380, 389, "Output",ExpressionUUID->"6679af4b-85f6-47f3-984c-83800932f404"]
}, Open  ]],
Cell[CellGroupData[{
Cell[782286, 14886, 738, 19, 52, "Input",ExpressionUUID->"8da7ed0a-a4d0-426b-8942-d1fbe6ca501d"],
Cell[783027, 14907, 18062, 318, 375, "Output",ExpressionUUID->"a1265842-89b7-429f-a9cd-f32e378b4502"]
}, Open  ]],
Cell[CellGroupData[{
Cell[801126, 15230, 391, 12, 52, "Input",ExpressionUUID->"7890a245-ca37-4dec-a5b9-cdba7e89782a"],
Cell[801520, 15244, 218, 3, 32, "Output",ExpressionUUID->"147d85e5-3a0a-46c1-9400-6f919f6331f6"]
}, Open  ]],
Cell[CellGroupData[{
Cell[801775, 15252, 513, 16, 52, "Input",ExpressionUUID->"835be73c-b305-49ca-a7c3-c66f61f02874"],
Cell[802291, 15270, 224, 4, 49, "Output",ExpressionUUID->"ab023824-14a1-4b9a-9a7c-f6f8d531e1c5"]
}, Open  ]],
Cell[CellGroupData[{
Cell[802552, 15279, 433, 12, 52, "Input",ExpressionUUID->"f719d301-1757-4f91-807a-3856f784cca7"],
Cell[802988, 15293, 276, 6, 49, "Output",ExpressionUUID->"e1b325ea-05a3-4e22-9cc1-98c5a54c8488"]
}, Open  ]],
Cell[CellGroupData[{
Cell[803301, 15304, 341, 8, 28, "Input",ExpressionUUID->"22ffc974-a3f6-4253-bc26-b163a0ab1007"],
Cell[803645, 15314, 4858, 99, 243, "Output",ExpressionUUID->"e748419a-91ef-4779-97e2-70268e5c517e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[808540, 15418, 651, 16, 28, "Input",ExpressionUUID->"f8f47f03-464e-4536-bb40-d793409a4bf2"],
Cell[809194, 15436, 89807, 1522, 393, "Output",ExpressionUUID->"37c642f5-3acb-4586-8a32-63faf00cfd7d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[899038, 16963, 656, 16, 28, "Input",ExpressionUUID->"6576e08d-f940-4078-8740-744502d92b66"],
Cell[899697, 16981, 90060, 1526, 393, "Output",ExpressionUUID->"dfa29dd2-cb18-4802-901e-fdcdc5cbb6ee"]
}, Open  ]],
Cell[CellGroupData[{
Cell[989794, 18512, 1123, 28, 28, "Input",ExpressionUUID->"56bdd242-e990-40bf-bd45-3e1148b0f34a"],
Cell[990920, 18542, 13795, 232, 379, "Output",ExpressionUUID->"05155688-dc86-4015-8eb8-52ddb5064be8"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1004752, 18779, 576, 15, 28, "Input",ExpressionUUID->"3bd3d8d2-bcb7-40d2-8ad9-f27d1c1c788b"],
Cell[1005331, 18796, 8172, 141, 376, "Output",ExpressionUUID->"91474a02-63e8-418f-90cb-12b9e04e2847"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1013540, 18942, 651, 17, 28, "Input",ExpressionUUID->"b43d51ff-13fe-4e7c-869e-9af6d8025663"],
Cell[1014194, 18961, 6439, 111, 377, "Output",ExpressionUUID->"3e8ee1b3-0c7e-4fc9-9c4d-dbf676002871"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1020670, 19077, 187, 4, 28, "Input",ExpressionUUID->"7b1a1910-f852-4816-ac71-419a0dd2823d"],
Cell[1020860, 19083, 236, 6, 32, "Output",ExpressionUUID->"c24a227d-5c78-4bc8-a323-1b02a2f97ac5"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1021133, 19094, 424, 10, 28, "Input",ExpressionUUID->"2686d0b3-c17f-4d1f-ad2f-518a991b17a9"],
Cell[1021560, 19106, 2386, 55, 224, "Output",ExpressionUUID->"378710aa-ec7f-4f1b-a198-18242d3205a8"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1023983, 19166, 821, 24, 28, "Input",ExpressionUUID->"c1cd746b-719f-44cd-a561-308febae2563"],
Cell[1024807, 19192, 1890, 48, 247, "Output",ExpressionUUID->"5d614c99-cd0f-4dca-b6f1-5555d4e7cb0d"]
}, Open  ]],
Cell[1026712, 19243, 390, 9, 28, "Input",ExpressionUUID->"5de6bfd6-7e40-4849-af52-758d3ac939ea"],
Cell[1027105, 19254, 392, 9, 28, "Input",ExpressionUUID->"9267309a-024d-46ed-ab10-14b30a6b893a"],
Cell[CellGroupData[{
Cell[1027522, 19267, 315, 7, 28, "Input",ExpressionUUID->"ecc51441-ec0e-4084-a4af-f5cfabaa869c"],
Cell[1027840, 19276, 187, 2, 32, "Output",ExpressionUUID->"e12ea9a9-a2a5-4424-b03b-24ceb69b83b6"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1028064, 19283, 315, 7, 28, "Input",ExpressionUUID->"861c8509-7857-47d1-afd5-df6d031e0bd8"],
Cell[1028382, 19292, 187, 2, 32, "Output",ExpressionUUID->"4d91a0d0-f9ac-4905-83c0-98594731a823"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1028606, 19299, 713, 16, 28, "Input",ExpressionUUID->"ed8897c4-c4b3-486d-b969-2390589d8bc6"],
Cell[1029322, 19317, 53066, 965, 389, "Output",ExpressionUUID->"fa543dbf-1422-4ef6-87fc-4b282c787af4"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1082425, 20287, 762, 17, 28, "Input",ExpressionUUID->"9ae8be60-c686-4444-9939-8cff4d20ccad"],
Cell[1083190, 20306, 50848, 885, 389, "Output",ExpressionUUID->"c9626e76-2b82-4972-bd5e-f060104073fe"]
}, Open  ]],
Cell[1134053, 21194, 371, 9, 28, "Input",ExpressionUUID->"31e69048-9843-420f-932e-94639533b2bf"],
Cell[CellGroupData[{
Cell[1134449, 21207, 965, 24, 28, "Input",ExpressionUUID->"d099b108-9f7e-484c-ab55-8eb296d0f8fb"],
Cell[1135417, 21233, 114736, 3362, 389, "Output",ExpressionUUID->"d1ac7722-cdbd-44a4-af3d-8c6f25556e36"]
}, Open  ]],
Cell[1250168, 24598, 396, 9, 28, "Input",ExpressionUUID->"f0fd5a1e-9646-4f24-a3c1-46547a44391e"],
Cell[CellGroupData[{
Cell[1250589, 24611, 1688, 40, 48, "Input",ExpressionUUID->"9645d5e9-98f5-44c0-9854-92c841d50634"],
Cell[1252280, 24653, 50607, 874, 389, "Output",ExpressionUUID->"155f9147-3b59-4e2f-a1ed-7fba916d73bc"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1302924, 25532, 413, 9, 28, "Input",ExpressionUUID->"505c9e57-f1fb-47a2-8460-cac37a78ac60"],
Cell[1303340, 25543, 147839, 3905, 375, 141329, 3797, "CachedBoxData", "BoxData", "Output",ExpressionUUID->"35688276-02fc-4d8e-8bc5-4ba290efc042"]
}, Open  ]],
Cell[1451194, 29451, 214, 3, 28, "Input",ExpressionUUID->"01d8649c-951f-4af2-81e2-0c5471ad5256"]
}
]
*)

